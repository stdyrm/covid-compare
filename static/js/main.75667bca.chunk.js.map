{"version":3,"sources":["data/us-states.csv","components/util/cleanStateInfo.js","components/util/importCSV.js","components/appGapminder/appParams.js","context/dataContext.js","context/statesContext.js","context/selectionContext.js","components/appGapminder/chart/CirclesGapminder.js","components/appGapminder/interface/OpacitySlider.js","components/appGapminder/interface/DayCounterSlider.js","components/appGapminder/chart/ChartGapminder.js","components/appGapminder/pickers/ParamPicker.js","components/sharedComponents/SectionTitle.js","components/appGapminder/interface/ParamDashboard.js","components/appGapminder/sharedComponents/pickers/Filter.js","components/appGapminder/pickers/FilterBatch.js","components/appGapminder/pickers/SelectedStatus.js","components/appGapminder/pickers/NumberPicker.js","components/appGapminder/interface/FilterDashboard.js","components/sharedComponents/ChartPicker.js","components/appGapminder/interface/MenuDrawer.js","context/ThemeContext.js","components/Settings.js","components/appGapminder/interface/Navbar.js","components/appGapminder/gapminderData.js","components/appGapminder/styles/dimensions.js","components/appGapminder/AppGapminder.js","components/util/MouseMove.js","components/appCovidCompare/chart/Line.js","components/appCovidCompare/chart/ChartCovidCompare.js","components/appCovidCompare/components/FilterValues.js","components/appCovidCompare/pickers/FilterCases.js","components/appCovidCompare/pickers/FilterPopulation.js","components/appCovidCompare/components/FilterCategories.js","components/appCovidCompare/pickers/FilterRegion.js","components/appCovidCompare/pickers/BatchSelect.js","components/appCovidCompare/pickers/Dashboard.js","components/appCovidCompare/pickers/ParamPicker.js","components/appCovidCompare/interface/Navbar.js","components/appCovidCompare/appParams.js","components/appCovidCompare/AppCovidCompare.js","components/sharedComponents/Footer.js","styles/dimensions.js","styles/theme.js","styles/colors.js","App.js","serviceWorker.js","index.js","data/co-est2019-annres_csv.csv"],"names":["module","exports","cleanStateInfo","data","stateInfo","colors","a","revisedStates","Object","keys","forEach","s","i","color","nest","key","d","state","entries","nested","lastIndex","values","length","latestCaseCount","cases","latestCaseCountPerThou","population","importCSV","rawData","csv","dateParser","timeParse","date","fips","parseInt","deaths","filter","Date","includes","stateData","caseCounter","dayOfOutbreak","casesPerThousand","deathsPerThousand","mortalityRate","newCases","chartParams","chartType","toTimestamp","multiple","normalize","xParam","output","type","format","selected","alt1","options","yParam","zParam","cParam","tParam","cParamCategories","region","division","governor","dataContext","React","createContext","statesContext","selectionContext","CirclesGapminder","props","dayCounter","selector","scales","opacityNotSel","xScale","yScale","colorScale","infoStates","useContext","selectedCircles","setSelectedCircles","circlesRef","useRef","classes","makeStyles","theme","circle","stroke","opacity","circleSelected","strokeWidth","circleLabel","fill","palette","text","primary","fontSize","useStyles","useTheme","bisectDay","d3","left","dataAt","day","map","valueAt","b","t","useEffect","current","selectAll","join","sort","attr","htmlFormat","call","append","toFixed","toLocaleString","on","mouseOverCircle","style","mouseOutCircle","notSelected","label","abbreviation","ref","OpacitySlider","setOpacityNotSel","Typography","variant","Slider","id","value","valueLabelDisplay","step","min","max","onChange","e","newVal","DayCounterSlider","setDayCounter","ChartGapminder","wrapper","bounds","wrapperWidth","wrapperHeight","margin","width","height","dataStates","useState","setScales","mqSmall","useMediaQuery","breakpoints","down","bodyWrapper","paddingLeft","up","rootSVG","display","position","verticalAlign","overflow","chartTitle","textAnchor","fontWeight","chartSubtitle","chartWrapper","top","axes","legend","contrastText","sliderContainer","flexDirection","justifyContent","maxWidth","alignItems","slider","svgRef","boundsRef","yAxisRef","xAxisRef","legendRef","domain","range","yAxisGenerator","scale","xAxisGenerator","axis","enter","transition","duration","update","exit","remove","renderChart","Box","className","viewBox","transform","x","y","Grid","container","item","rootContainer","minWidth","padding","filterSelector","filterMenuItem","ParamPicker","handleSelector","p","FormControl","InputLabel","Select","name","o","MenuItem","typography","divider","backgroundColor","marginBottom","SectionTitle","href","innerProps","defaultClasses","clsx","children","Divider","defaultProps","paramPickerContainer","menuButton","filterBody","spacing","paddingRight","ParamDashboard","Filter","forwardRef","handleFilter","filterData","anchorEl","setAnchorEl","handleMenu","currentTarget","onClick","onClose","button","chipContainer","listStyle","chip","main","FilterBatch","filters","handleDeleteFilter","nStates","filterParams","category","params","chartParam","n","handleFilters","currSelection","newFilter","filtered","handleFilterCategories","slice","handleFilterValues","prevState","all","f","component","Chip","size","onDelete","stateLabelList","deselectAll","alignContent","paddingTop","deselectAllButton","selectedLabel","notSelectedLabel","SelectedStatus","handleChange","handleDeselectAll","Tooltip","title","IconButton","FormControlLabel","checked","control","Checkbox","input","NumberPicker","setNStates","TextField","InputProps","inputProps","defaultValue","target","filterBatch","selectedStatus","marginTop","FilterDashboard","setFilters","FormGroup","deletedFilter","newFilterList","secondary","ChartPicker","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","MenuDrawer","mobileOpen","handleDrawer","persistent","Hidden","mdUp","Drawer","anchor","direction","open","paper","ModalProps","keepMounted","Toolbar","smDown","drawerContainer","ThemeContext","Settings","darkMode","setDarkMode","rootGrid","window","innerWidth","footerButton","pathArray","location","split","queryID","saveSvgAsPng","document","querySelector","background","default","encoderOptions","fonts","url","placement","root","appBar","dark","appBarShift","marginLeft","transitions","create","easing","easeOut","enteringScreen","hide","Navbar","setMobileOpen","handleOptions","AppBar","edge","disableRipple","Button","Menu","Boolean","MenuList","gapminderData","newData","eachState","push","innerHeight","right","bottom","AppGapminder","setData","setSelector","navbar","then","res","Provider","param","MouseMove","focus","overlay","linesStates","selectedStates","selectedYParam","dateFormatter","timeFormat","x0","invert","mouse","this","bisectDate","bisector","dataEachState","stateHTML","dataEachStateRangeY","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","frozen","select","Line","setLinesStates","filterStates","generateLine","lineGenerator","line","lineData","lastDayOfOutbreak","lastCasesDatum","lineLabelX","lineLabelY","generateFocus","xShift","yShift","mounted","Fragment","strokeLinejoin","strokeLinecap","fontFamily","axisLabel","footnotes","ChartCovidCompare","scaleLinear","extent","scaleLog","axisLeft","ticks","tickFormat","axisBottom","FilterValues","filterOptions","handleSelectedFilter","FilterCases","FilterPopulation","FilterCategories","FilterRegion","tab","menuItem","BatchSelect","setSelectedStates","selectedFilter","setSelectedFilter","newSelectedFilter","newSelection","info","aria-controls","aria-haspopup","sectionTitleTypography","drawerBody","alignText","selectAllButton","stateLabelSelected","stateLabelNotSelected","Dashboard","handleSelectedStates","handleSelectAllStates","handleDeselectAllStates","formControl","selectInput","setChartParams","autoWidth","sharp","leavingScreen","navbarPickers","setOpen","handleFilterMenu","textAlign","ClickAwayListener","onClickAway","CHART_PARAMS","AppCovidCompare","flexBasis","about","utils","DateFnsUtils","Footer","rel","lightTheme","light","darkTheme","createMuiTheme","overrides","MuiInputBase","MuiButton","MuiIconButton","getTheme","COLORS","App","setDataStates","setInfoStates","STATE_INFO","USStates","ThemeProvider","CssBaseline","path","render","exact","from","to","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75667bca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us-states.338d3268.csv\";","import { nest } from \"d3\";\n\nconst cleanStateInfo = async (data, stateInfo, colors) => {\n  const revisedStates = {};\n\n  Object.keys(stateInfo).forEach((s, i) => {\n    revisedStates[s] = {\n      ...stateInfo[s],\n      color: colors[i],\n    };\n  });\n\n  const nested = await nest()\n    .key(d => d.state)\n    .entries(data);\n\n  await Object.keys(nested).forEach(i => {\n    const s = nested[i].key;\n\n    const lastIndex = nested[i].values.length - 1;\n    const latestCaseCount = nested[i].values[lastIndex].cases;\n    const latestCaseCountPerThou =\n      (nested[i].values[lastIndex].cases / stateInfo[s].population) * 1000;\n\n    revisedStates[s] = {\n      ...revisedStates[s],\n      latestCaseCount: latestCaseCount,\n      latestCaseCountPerThou: latestCaseCountPerThou,\n    };\n  });\n  return revisedStates;\n};\n\nexport { cleanStateInfo };\n","import { csv, timeParse } from \"d3\";\n\nconst importCSV = async (rawData, stateInfo) => {\n  let data = await csv(rawData);\n\n  // clean data\n  const dateParser = timeParse(\"%Y-%m-%d\");\n\n  data.forEach(d => {\n    d.date = dateParser(d.date);\n    d.fips = parseInt(d.fips);\n    d.cases = parseInt(d.cases);\n    d.deaths = parseInt(d.deaths);\n  });\n\n  // Filter data\n  data = data.filter(\n    d =>\n      d.date > new Date(2020, 1, 26) && Object.keys(stateInfo).includes(d.state)\n  );\n\n  // Normalize data:\n  // Add \"dayOfOutbreak\" to show elapsed time\n  // Add state population\n  // Add \"casesPerThousand\", \"deathsPerThousand\", \"mortalityRate\"\n  Object.keys(stateInfo).forEach(state => {\n    const stateData = data.filter(d => d.state === state);\n    let caseCounter = 0;\n    stateData.forEach(d => {\n      d.dayOfOutbreak =\n        (d.date - stateData[0].date) / (24 * 60 * 60 * 10 * 10 * 10) + 1; // day - day one, convert ms to days\n      d.casesPerThousand = (d.cases / stateInfo[state].population) * 1000;\n      d.deathsPerThousand = (d.deaths / stateInfo[state].population) * 1000;\n      d.mortalityRate = (d.deaths / d.cases) * 100;\n      d.newCases = d.cases - caseCounter;\n\n      caseCounter = d.cases;\n    });\n  });\n  return data;\n};\n\nexport { importCSV };\n","export const chartParams = {\n  chartType: \"bubble\",\n  toTimestamp: null,\n  multiple: true,\n  normalize: true,\n  xParam: {\n    // x-axis\n    output: \"x-axis\",\n    type: \"linear\",\n    format: \"none\",\n    selected: \"casesPerThousand\",\n    alt1: \"cases\",\n    options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n  },\n  yParam: {\n    // y-axis\n    output: \"y-axis\",\n    type: \"linear\",\n    format: \"none\",\n    selected: \"deathsPerThousand\",\n    alt1: \"deaths\",\n    options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n  },\n  zParam: {\n    // z-axis (3rd dimension) (eg. size)\n    output: \"circle-area\",\n    type: \"linear\",\n    format: \"none\",\n    selected: \"population\",\n    options: [\"population\", \"populationDensity\", \"gdp\", \"none\"],\n  },\n  cParam: {\n    // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\n    output: \"color-grouping\",\n    type: \"categorical\",\n    selected: \"region\",\n    options: [\"region\", \"division\", \"governor\"],\n  },\n  tParam: {\n    // time axis (4th dimension) (ie. for animated charts)\n    output: \"time\",\n    type: \"time\",\n    selected: \"dayOfOutbreak\",\n    options: [\"dayOfOutbreak\", \"date\"],\n  },\n};\n\n// Label params:\nexport const labelParams = {\n  chartTitle: \"COVID-19 State Comparison\",\n  xLabel: \"Cases per Thousand\",\n  yLabel: \"Deaths per Thousand\",\n};\n\n// color param categories\nexport const cParamCategories = {\n  region: [\"Northeast\", \"Midwest\", \"South\", \"West\"],\n  division: [\n    \"New England\",\n    \"Mid-Atlantic\",\n    \"East North Central\",\n    \"West North Central\",\n    \"South Atlantic\",\n    \"East South Central\",\n    \"West South Central\",\n    \"Mountain\",\n    \"Pacific\",\n  ],\n  governor: [\"Republican\", \"Democrat\", \"n/a\"],\n};\n","import React from \"react\";\n\nconst dataContext = React.createContext();\n\nexport { dataContext };\n","import React from \"react\";\n\nconst statesContext = React.createContext();\n\nexport { statesContext };\n","import React from \"react\";\n\nexport const selectionContext = React.createContext();\n","import React, { useEffect, useContext, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\n// context\nimport { statesContext } from \"../../../context/statesContext\";\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// style\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nexport const CirclesGapminder = props => {\n  const { data, dayCounter, selector, scales, opacityNotSel } = props;\n  const { xParam, yParam, zParam, cParam } = selector;\n  const { xScale, yScale, colorScale } = scales;\n\n  // context and ref\n  const { infoStates } = useContext(statesContext);\n  const { selectedCircles, setSelectedCircles } = useContext(selectionContext);\n  const circlesRef = useRef(null);\n\n  // styles\n  const useStyles = makeStyles(theme => ({\n    circle: {\n      stroke: \"none\",\n      opacity: opacityNotSel,\n    },\n    circleSelected: {\n      stroke: \"#e91e63\",\n      strokeWidth: 2,\n      opacity: 0.8,\n    },\n    circleLabel: {\n      fill: theme.palette.text.primary,\n      fontSize: \".6rem\",\n    },\n  }));\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const bisectDay = d3.bisector(([d]) => d).left;\n\n  function dataAt(day) {\n    return data.map(d => ({\n      state: d.state,\n      region: d.region,\n      [xParam.selected]: valueAt(d[xParam.selected], day),\n      [yParam.selected]: valueAt(d[yParam.selected], day),\n    }));\n  }\n\n  function valueAt(values, day) {\n    const i = bisectDay(values, day, 0, values.length - 1);\n    const a = values[i];\n\n    if (i > 0) {\n      const b = values[i - 1];\n      const t = (day - a[0]) / (b[0] - a[0]);\n      return a[1] * (1 - t) + b[1] * t;\n    }\n    return a[1];\n  }\n\n  useEffect(() => {\n    if (data) {\n      const circle = d3\n        .select(circlesRef.current)\n        .selectAll(\"circle\")\n        .data(dataAt(dayCounter), d => d)\n        .join(\"circle\")\n        .sort((a, b) =>\n          d3.descending(\n            infoStates[a.state][zParam.selected],\n            infoStates[b.state][zParam.selected]\n          )\n        )\n        .attr(\"r\", d =>\n          zParam.selected === \"population\"\n            ? infoStates[d.state][zParam.selected] / 1000000\n            : zParam.selected === \"populationDensity\"\n            ? infoStates[d.state][zParam.selected] / 100\n            : zParam.selected === \"gdp\"\n            ? infoStates[d.state][zParam.selected] / 100000\n            : 5\n        )\n        .attr(\"cx\", d => xScale(d[xParam.selected]))\n        .attr(\"cy\", d => yScale(d[yParam.selected]))\n        .attr(\"fill\", d => colorScale(infoStates[d.state][cParam.selected]))\n        .attr(\"id\", d => `circle-${infoStates[d.state].htmlFormat}`)\n        .attr(\"class\", d =>\n          selectedCircles.selected.includes(d.state)\n            ? classes.circleSelected\n            : classes.circle\n        )\n        .call(circle =>\n          circle\n            .append(\"title\")\n            .text(d =>\n              [\n                d.state,\n                `Day ${dayCounter}`,\n                xParam.selected === \"casesPerThousand\"\n                  ? `Cases/1000: ${\n                      d.casesPerThousand && d.casesPerThousand.toFixed(2)\n                    }`\n                  : xParam.selected === \"cases\"\n                  ? `Cases: ${d.cases && d.cases.toLocaleString()}`\n                  : xParam.selected === \"deathsPerThousand\"\n                  ? `Deaths/1000: ${\n                      d.deathsPerThousand && d.deathsPerThousand.toFixed(2)\n                    }`\n                  : xParam.selected === \"deaths\"\n                  ? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\n                  : \"error\",\n                yParam.selected === \"casesPerThousand\"\n                  ? `Cases/1000: ${\n                      d.casesPerThousand && d.casesPerThousand.toFixed(2)\n                    }`\n                  : yParam.selected === \"cases\"\n                  ? `Cases: ${d.cases && d.cases.toLocaleString()}`\n                  : yParam.selected === \"deathsPerThousand\"\n                  ? `Deaths/1000: ${\n                      d.deathsPerThousand && d.deathsPerThousand.toFixed(2)\n                    }`\n                  : yParam.selected === \"deaths\"\n                  ? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\n                  : \"error\",\n              ].join(\"\\n\")\n            )\n        );\n\n      circle.on(\"mouseover\", d => {\n        const mouseOverCircle = d3.select(\n          `#circle-${infoStates[d.state].htmlFormat}`\n        );\n        if (opacityNotSel !== 0 || selectedCircles.selected.includes(d.state)) {\n          mouseOverCircle\n            .attr(\"cursor\", \"pointer\")\n            .style(\"opacity\", 0.9)\n            .style(\"stroke\", \"#e91e63\")\n            .style(\"stroke-width\", 2);\n        }\n      });\n\n      circle.on(\"mouseout\", d => {\n        const mouseOutCircle = d3.select(\n          `#circle-${infoStates[d.state].htmlFormat}`\n        );\n        if (selectedCircles.notSelected.includes(d.state)) {\n          mouseOutCircle\n            .style(\"opacity\", opacityNotSel)\n            .style(\"stroke\", \"none\");\n        }\n      });\n\n      circle.on(\"click\", d => {\n        if (selectedCircles.selected.includes(d.state)) {\n          setSelectedCircles({\n            ...selectedCircles,\n            selected: selectedCircles.selected.filter(s => s !== d.state),\n            notSelected: [...selectedCircles.notSelected, d.state],\n          });\n          d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\n            .style(\"opacity\", opacityNotSel)\n            .style(\"stroke\", \"none\");\n        } else {\n          setSelectedCircles({\n            ...selectedCircles,\n            selected: [...selectedCircles.selected, d.state],\n            notSelected: selectedCircles.notSelected.filter(s => s !== d.state),\n          });\n          d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\n            .style(\"opacity\", 0.9)\n            .style(\"stroke\", \"#e91e63\")\n            .style(\"stroke-width\", 2);\n        }\n      });\n\n      d3.select(circlesRef.current)\n        .selectAll(\"text\")\n        .data(dataAt(dayCounter), d => d)\n        .join(\"text\")\n        .call(label => {\n          const length = d => {\n            if (zParam.selected === \"population\") {\n              return infoStates[d.state][zParam.selected] / 1000000;\n            } else if (zParam.selected === \"populationDensity\") {\n              return infoStates[d.state][zParam.selected] / 100;\n            } else if (zParam.selected === \"gdp\") {\n              return infoStates[d.state][zParam.selected] / 100000;\n            } else {\n              return 4;\n            }\n          };\n          label\n            .attr(\"x\", d => xScale(d[xParam.selected]) + length(d))\n            .attr(\"y\", d => yScale(d[yParam.selected]) - length(d));\n        })\n        .attr(\"opacity\", d =>\n          selectedCircles.selected.includes(d.state) ? 0.8 : 0\n        )\n        .attr(\"class\", classes.circleLabel)\n        .attr(\"cursor\", \"context-menu\")\n        .text(d => infoStates[d.state].abbreviation);\n    }\n  }, [dayCounter, selector, scales, selectedCircles, opacityNotSel, theme]);\n\n  return (\n    <>\n      <g ref={circlesRef} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Slider, Typography } from \"@material-ui/core\";\n\nexport const OpacitySlider = props => {\n  const { opacityNotSel, setOpacityNotSel } = props;\n\n  return (\n    <>\n      <Typography variant=\"caption\">Non-selected opacity</Typography>\n      <Slider\n        id=\"opacity-slider\"\n        value={opacityNotSel}\n        valueLabelDisplay=\"auto\"\n        step={0.1}\n        min={0}\n        max={1}\n        onChange={(e, newVal) => setOpacityNotSel(newVal)}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Slider, Typography } from \"@material-ui/core\";\n\nexport const DayCounterSlider = props => {\n  const { dayCounter, setDayCounter } = props;\n\n  return (\n    <>\n      <Typography variant=\"caption\">Day of Outbreak</Typography>\n      <Slider\n        id=\"day-counter-slider\"\n        value={dayCounter}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={1}\n        max={175}\n        onChange={(e, newVal) => setDayCounter(newVal)}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\n\n// context\nimport { dataContext } from \"../../../context/dataContext\";\n\n// components\nimport { CirclesGapminder } from \"./CirclesGapminder\";\nimport { OpacitySlider } from \"../interface/OpacitySlider\";\nimport { DayCounterSlider } from \"../interface/DayCounterSlider\";\n\n// style\nimport { Grid, Box, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nexport const ChartGapminder = props => {\n  const { cParamCategories, data, selector, wrapper, bounds } = props;\n  const { xParam, yParam, cParam } = selector;\n  const { wrapperWidth, wrapperHeight, margin } = wrapper;\n  const { width, height } = bounds;\n\n  const { dataStates } = useContext(dataContext);\n  const [scales, setScales] = useState(null);\n  const [dayCounter, setDayCounter] = useState(1);\n  const [opacityNotSel, setOpacityNotSel] = useState(0.6);\n\n  const theme = useTheme();\n  const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const useStyles = makeStyles(theme => ({\n    bodyWrapper: {\n      paddingLeft: 0,\n      [theme.breakpoints.up(\"md\")]: {\n        paddingLeft: 260,\n      },\n    },\n    rootSVG: {\n      display: \"inline-block\",\n      position: \"relative\",\n      width: \"100%\",\n      verticalAlign: \"middle\",\n      overflow: \"hidden\",\n    },\n    chartTitle: {\n      textAnchor: \"middle\",\n      fill: theme.palette.text.primary,\n      fontWeight: 700,\n      fontSize: \".8rem\",\n      [theme.breakpoints.up(\"sm\")]: {\n        fontSize: \"1rem\",\n      },\n    },\n    chartSubtitle: {\n      textAnchor: \"middle\",\n      fill: theme.palette.text.primary,\n      fontSize: \".5rem\",\n      [theme.breakpoints.up(\"sm\")]: {\n        fontSize: \".6rem\",\n      },\n    },\n    chartWrapper: {\n      display: \"inline-block\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n    },\n    bounds: {\n      width: width,\n      height: height,\n    },\n    axes: {\n      color: theme.palette.text.primary,\n    },\n    legend: {\n      color: theme.palette.primary.contrastText,\n      fontWeight: 700,\n      fontSize: \".6rem\",\n      [theme.breakpoints.up(\"sm\")]: {\n        fontSize: \".8rem\",\n      },\n    },\n    sliderContainer: {\n      flexDirection: () => (mqSmall ? \"column\" : \"row\"),\n      justifyContent: () => (mqSmall ? \"center\" : \"space-between\"),\n      maxWidth: width,\n      margin: \"0 auto\",\n      alignItems: \"center\",\n    },\n    slider: {\n      width: () => (mqSmall ? \"95%\" : \"45%\"),\n    },\n  }));\n\n  const classes = useStyles();\n\n  const svgRef = useRef(null);\n  const boundsRef = useRef(null);\n  const yAxisRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const legendRef = useRef(null);\n\n  const renderChart = () => {\n    const xScale = d3\n      .scaleLinear()\n      .domain(d3.extent(dataStates, d => d[xParam.selected]))\n      .range([0, width]);\n    const yScale = d3\n      .scaleLinear()\n      .domain(d3.extent(dataStates, d => d[yParam.selected]))\n      .range([height, 0]);\n\n    let colorScale;\n\n    if (cParam.selected === \"region\") {\n      colorScale = d3\n        .scaleOrdinal()\n        .domain(cParamCategories.region)\n        .range(d3.schemePaired);\n    } else if (cParam.selected === \"division\") {\n      colorScale = d3\n        .scaleOrdinal()\n        .domain(cParamCategories.division)\n        .range(d3.schemePaired);\n    } else if (cParam.selected === \"governor\") {\n      colorScale = d3\n        .scaleOrdinal()\n        .domain(cParamCategories.governor)\n        .range([\"#B61515\", \"#2E84D5\", \"#009C72\"]);\n    }\n\n    setScales({\n      xScale: xScale,\n      yScale: yScale,\n      colorScale: colorScale,\n    });\n\n    // Axes\n    const yAxisGenerator = d3.axisLeft().scale(yScale);\n    const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n    const xAxis = d3\n      .select(xAxisRef.current)\n      .call(xAxisGenerator)\n      .call(axis => {\n        axis.append(\"text\").attr(\"class\", \"xLabel\");\n        axis.append(\"text\").attr(\"class\", \"counter-display\");\n      });\n\n    xAxis\n      .selectAll(\".xLabel\")\n      .data(xParam.selected, d => d)\n      .join(\"text\")\n      .attr(\"x\", width)\n      .attr(\"y\", 40)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"class\", \"xLabel\")\n      .attr(\"fill\", theme.palette.text.primary)\n      .text(xParam.selected);\n\n    const yAxis = d3\n      .select(yAxisRef.current)\n      .call(yAxisGenerator)\n      .call(axis => axis.append(\"text\").attr(\"class\", \"yLabel\"));\n\n    yAxis\n      .selectAll(\".yLabel\")\n      .data(yParam.selected, d => d)\n      .join(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", -40)\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"class\", \"yLabel\")\n      .attr(\"fill\", theme.palette.text.primary)\n      .text(yParam.selected);\n\n    // legend\n    d3.select(legendRef.current)\n      .selectAll(\"text\")\n      .data(cParamCategories[cParam.selected], d => d)\n      .join(\n        enter =>\n          enter\n            .append(\"text\")\n            .attr(\"x\", \"1rem\")\n            .attr(\"y\", -1000)\n            .attr(\"fill\", d => colorScale(d))\n            .attr(\"text-anchor\", \"start\")\n            .text(d => d)\n            .call(enter =>\n              enter\n                .transition()\n                .duration(750)\n                .attr(\"y\", (d, i) => -height + 10 + 20 * i)\n            ),\n        update =>\n          update\n            .append(\"text\")\n            .attr(\"fill\", d => colorScale(d))\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"y\", 60)\n            .text(d => d)\n            .call(update => update.transition().duration(750)),\n        exit =>\n          exit\n            .attr(\"fill\", \"gray\")\n            .attr(\"text-anchor\", \"start\")\n            .text(d => d)\n            .call(exit => exit.transition().duration(750).attr(\"y\", 0).remove())\n      );\n  };\n\n  useEffect(() => {\n    if (dataStates) {\n      renderChart();\n    }\n  }, [dataStates, selector, theme]);\n\n  useEffect(() => {\n    d3.select(boundsRef.current)\n      .selectAll(\".counter-display\")\n      .join(\"text\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"x\", width)\n      .attr(\"y\", -40)\n      .attr(\"class\", \"counter-display\")\n      .style(\"fill\", theme.palette.text.primary)\n      .text(`Day ${dayCounter}`);\n  }, [dayCounter, theme]);\n\n  return (\n    <Box className={classes.bodyWrapper}>\n      <div>\n        <svg\n          ref={svgRef}\n          id=\"gapminder-app\"\n          height={wrapperHeight}\n          width={wrapperWidth}\n          className={classes.rootSVG}\n          viewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\n        >\n          <g\n            ref={boundsRef}\n            className={classes.bounds}\n            transform={`translate(${margin.left}, ${margin.top})`}\n          >\n            <text\n              x={width / 2}\n              y={mqSmall ? -margin.top * 0.5 : -margin.top * 0.7}\n              className={classes.chartTitle}\n            >\n              COVID-19 in the United States\n            </text>\n            <text\n              x={width / 2}\n              y={mqSmall ? -margin.top * 0.3 : -margin.top * 0.4}\n              className={classes.chartTitle}\n            >\n              Outbreak Days 1 - 175\n            </text>\n            <text\n              x={width / 2}\n              y={mqSmall ? -margin.top * 0.15 : -margin.top * 0.15}\n              className={classes.chartSubtitle}\n            >\n              *data from the New York Times\n            </text>\n            <g\n              ref={xAxisRef}\n              transform={`translate(0, ${height})`}\n              className={classes.axes}\n            />\n            <g ref={yAxisRef} className={classes.axes} />\n            <g\n              ref={legendRef}\n              transform={`translate(0, ${height})`}\n              className={classes.legend}\n            />\n            {data && scales ? (\n              <CirclesGapminder\n                {...props}\n                scales={scales}\n                dayCounter={dayCounter}\n                opacityNotSel={opacityNotSel}\n              />\n            ) : (\n              <></>\n            )}\n          </g>\n        </svg>\n      </div>\n      <Grid container className={classes.sliderContainer}>\n        <Grid item className={classes.slider}>\n          <DayCounterSlider\n            dayCounter={dayCounter}\n            setDayCounter={setDayCounter}\n          />\n        </Grid>\n        <Grid item className={classes.slider}>\n          <OpacitySlider\n            opacityNotSel={opacityNotSel}\n            setOpacityNotSel={setOpacityNotSel}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nChartGapminder.propTypes = {\n  cParamCategories: PropTypes.object,\n  data: PropTypes.arrayOf(PropTypes.object),\n  selector: PropTypes.object,\n  wrapper: PropTypes.object,\n  bounds: PropTypes.object,\n};\n","import React from \"react\";\n\n// style\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  rootContainer: {\n    maxWidth: 750,\n    minWidth: 175,\n    justifyContent: \"space-evenly\",\n    padding: 0,\n    margin: 0,\n  },\n  filterSelector: {\n    minWidth: 150,\n    fontWeight: 500,\n    fontSize: \".8rem\",\n    color: theme.palette.text.primary,\n  },\n  filterMenuItem: {\n    color: theme.palette.text.primary,\n    fontWeight: 500,\n    fontSize: \".8rem\",\n  },\n}));\n\nexport const ParamPicker = props => {\n  const { flexDirection, selector, handleSelector } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      className={classes.rootContainer}\n      style={\n        flexDirection === \"row\"\n          ? { flexDirection: \"row\", justifyContent: \"space-evenly\" }\n          : { flexDirection: \"column\" }\n      }\n    >\n      {Object.keys(selector).map(p => {\n        return (\n          <FormControl key={selector[p].output}>\n            <InputLabel>{selector[p].output}</InputLabel>\n            <Select\n              name={p}\n              value={selector[p].selected}\n              onChange={handleSelector}\n              className={classes.filterSelector}\n            >\n              {selector[p].options.map(o => {\n                return (\n                  <MenuItem\n                    key={o}\n                    value={o}\n                    className={classes.filterMenuItem}\n                  >\n                    {o}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        );\n      })}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\n// styles\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    color: theme.palette.text.primary,\n    fontWeight: 700,\n    fontSize: \"1.2rem\",\n  },\n  divider: {\n    backgroundColor: theme.palette.text.primary,\n    marginBottom: \".2rem\",\n  },\n}));\n\nexport const SectionTitle = props => {\n  const { divider, href, classes, innerProps } = props;\n  const defaultClasses = useStyles();\n\n  return (\n    <>\n      <Typography\n        className={clsx(defaultClasses.typography, classes.typography)}\n        {...innerProps.typography}\n      >\n        {props.children}\n      </Typography>\n      {divider && (\n        <Divider\n          className={clsx(defaultClasses.divider, classes.divider)}\n          {...innerProps.divider}\n        />\n      )}\n    </>\n  );\n};\n\nSectionTitle.propTypes = {\n  classes: PropTypes.object,\n  innerProps: PropTypes.object,\n};\n\nSectionTitle.defaultProps = {\n  classes: {},\n  innerProps: {},\n};\n","import React from \"react\";\n\n// components\nimport { ParamPicker } from \"../pickers/ParamPicker\";\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\n\n// style\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  paramPickerContainer: {},\n  menuButton: {\n    color: theme.palette.primary.contrastText,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  filterBody: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nconst ParamDashboard = props => {\n  const { flexDirection, data, selector, handleSelector } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.paramPickerContainer}>\n      <SectionTitle divider>Parameters</SectionTitle>\n      <div className={classes.filterBody}>\n        <ParamPicker\n          flexDirection={flexDirection}\n          data={data}\n          selector={selector}\n          handleSelector={handleSelector}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ParamDashboard;\n","import React, { useState, useContext, forwardRef } from \"react\";\n\n// context\nimport { statesContext } from \"../../../../context/statesContext\";\n\n// style\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const Filter = forwardRef((props, ref) => {\n  const { handleFilter, filterData } = props;\n\n  const { infoStates } = useContext(statesContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  return (\n    <>\n      {infoStates &&\n        filterData.map(d => {\n          return (\n            <MenuItem\n              key={d.id}\n              id={d.id}\n              onClick={() => handleFilter(d)}\n              onClose={handleMenu}\n            >\n              {d.name}\n            </MenuItem>\n          );\n        })}\n    </>\n  );\n});\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\nimport { statesContext } from \"../../../context/statesContext\";\n\n// components\nimport { Filter } from \"../sharedComponents/pickers/Filter\";\n\n// style\nimport { Chip, FormControl, InputLabel, Select, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  filterSelector: {\n    display: \"block\",\n    minWidth: 175,\n    fontWeight: 500,\n    fontSize: \".8rem\",\n  },\n  chipContainer: {\n    listStyle: \"none\",\n    backgroundColor: \"transparent\",\n    padding: 0,\n  },\n  chip: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.primary.contrastText,\n    padding: theme.spacing(0.5),\n    margin: theme.spacing(0.5),\n    fontSize: \".7rem\",\n  },\n}));\n\nexport const FilterBatch = props => {\n  const {\n    filters,\n    handleDeleteFilter,\n    handleFilter,\n    nStates,\n    handleSelector,\n  } = props;\n  const { setSelectedCircles } = useContext(selectionContext);\n  const { infoStates } = useContext(statesContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const classes = useStyles();\n\n  const handleFilterCategories = newFilter => {\n    const filtered = Object.keys(infoStates).filter(\n      s => infoStates[s][newFilter.chartParam] === newFilter.name\n    );\n\n    setAnchorEl(null);\n    return filtered;\n  };\n\n  const filterParams = [\n    {\n      category: \"Region\",\n      params: [\n        {\n          id: \"northeast\",\n          name: \"Northeast\",\n          type: \"Region\",\n          chartParam: \"region\",\n        },\n        {\n          id: \"midwest\",\n          name: \"Midwest\",\n          type: \"Region\",\n          chartParam: \"region\",\n        },\n        {\n          id: \"south\",\n          name: \"South\",\n          type: \"Region\",\n          chartParam: \"region\",\n        },\n        {\n          id: \"west\",\n          name: \"West\",\n          type: \"Region\",\n          chartParam: \"region\",\n        },\n      ],\n    },\n    {\n      category: \"Gov. party\",\n      params: [\n        {\n          id: \"democrat\",\n          name: \"Democrat\",\n          type: \"Governor\",\n          chartParam: \"governor\",\n        },\n        {\n          id: \"republican\",\n          name: \"Republican\",\n          type: \"Governor\",\n          chartParam: \"governor\",\n        },\n      ],\n    },\n    {\n      category: \"Population\",\n      params: [\n        {\n          id: \"pop-high\",\n          name: `Top ${nStates} (pop. total)`,\n          type: \"Pop.\",\n          chartParam: \"population\",\n          sort: \"descending\",\n          n: nStates,\n        },\n        {\n          id: \"pop-low\",\n          name: `Bottom ${nStates} (pop. total)`,\n          type: \"Pop.\",\n          chartParam: \"population\",\n          sort: \"ascending\",\n          n: nStates,\n        },\n        {\n          id: \"pop-density-high\",\n          name: `Top ${nStates} (pop. density)`,\n          type: \"Pop.\",\n          chartParam: \"populationDensity\",\n          sort: \"descending\",\n          n: nStates,\n        },\n        {\n          id: \"pop-density-low\",\n          name: `Bottom ${nStates} (pop. density)`,\n          type: \"Pop.\",\n          chartParam: \"populationDensity\",\n          sort: \"ascending\",\n          n: nStates,\n        },\n      ],\n    },\n    {\n      category: \"GDP\",\n      params: [\n        {\n          id: \"gdp-high\",\n          name: `Top ${nStates} (2019 GDP)`,\n          type: \"GDP\",\n          chartParam: \"gdp\",\n          sort: \"descending\",\n          n: nStates,\n        },\n        {\n          id: \"gdp-low\",\n          name: `Bottom ${nStates} (2019 GDP)`,\n          type: \"GDP\",\n          chartParam: \"gdp\",\n          sort: \"ascending\",\n          n: nStates,\n        },\n      ],\n    },\n  ];\n\n  const handleFilterValues = newFilter => {\n    const n = newFilter.n;\n    const filtered = Object.keys(infoStates)\n      .sort((a, b) =>\n        newFilter.sort === \"descending\"\n          ? infoStates[b][newFilter.chartParam] -\n            infoStates[a][newFilter.chartParam]\n          : infoStates[a][newFilter.chartParam] -\n            infoStates[b][newFilter.chartParam]\n      )\n      .slice(0, n);\n\n    setAnchorEl(null);\n    return filtered;\n  };\n\n  const handleFilters = () => {\n    let selected = [];\n    let currSelection = [];\n    filters.forEach((d, i) => {\n      if (d.type === \"Region\" || d.type === \"Governor\") {\n        currSelection = handleFilterCategories(d);\n      } else if (d.type === \"Pop.\" || d.type === \"GDP\") {\n        currSelection = handleFilterValues(d);\n      }\n\n      selected =\n        selected.length < 1\n          ? currSelection\n          : currSelection.filter(s => selected.includes(s));\n    });\n\n    setSelectedCircles(prevState => ({\n      ...prevState,\n      selected: selected,\n      notSelected: prevState.all.filter(s => !selected.includes(s)),\n    }));\n  };\n\n  useEffect(() => {\n    filters.length > 0\n      ? handleFilters()\n      : setSelectedCircles(prevState => ({\n          ...prevState,\n          selected: [],\n          notSelected: prevState.all,\n        }));\n  }, [filters]);\n\n  return (\n    <>\n      {filterParams.map(f => (\n        <FormControl key={f.category}>\n          <InputLabel>{f.category}</InputLabel>\n          <Select\n            name={f.category}\n            onChange={handleSelector}\n            className={classes.filterSelector}\n          >\n            <Filter handleFilter={handleFilter} filterData={f.params} />\n          </Select>\n        </FormControl>\n      ))}\n      <Box component=\"ul\" className={classes.chipContainer}>\n        {filters.length > 0 &&\n          filters.map(f => {\n            return (\n              <li key={f.id}>\n                <Chip\n                  size=\"small\"\n                  className={classes.chip}\n                  label={f.name}\n                  onDelete={() => handleDeleteFilter(f)}\n                />\n              </li>\n            );\n          })}\n      </Box>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// style\nimport {\n  FormControlLabel,\n  Checkbox,\n  Divider,\n  Tooltip,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles(theme => ({\n  stateLabelList: {\n    display: \"block\",\n  },\n  deselectAll: {\n    display: \"flex\",\n    alignContent: \"center\",\n    paddingTop: theme.spacing(2),\n  },\n  deselectAllButton: {\n    padding: 0,\n    color: \"#e32636\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  selectedLabel: {\n    fontSize: \".9rem\",\n    fontWeight: 300,\n  },\n  notSelectedLabel: {\n    fontSize: \".9rem\",\n    color: \"gray\",\n    fontWeight: 300,\n    opacity: 0.7,\n  },\n}));\n\nexport const SelectedStatus = props => {\n  const { handleChange, handleDeselectAll } = props;\n  const { selectedCircles } = useContext(selectionContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <>\n      <div className={classes.deselectAll}>\n        <Tooltip title=\"Deselect all\">\n          <IconButton\n            className={classes.deselectAllButton}\n            onClick={handleDeselectAll}\n          >\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        <Typography display=\"inline\">Deselect All</Typography>\n      </div>\n      {selectedCircles.selected &&\n        selectedCircles.selected.sort().map((state, i) => {\n          return (\n            <FormControlLabel\n              key={i}\n              name={state}\n              checked={selectedCircles.selected.includes(state)}\n              onChange={handleChange}\n              control={\n                <Checkbox name={state} className={classes.selectedLabel} />\n              }\n              label={state}\n              className={classes.stateLabelList}\n              classes={{ label: classes.selectedLabel }}\n            />\n          );\n        })}\n      <Divider />\n      <br />\n      {selectedCircles.notSelected &&\n        selectedCircles.notSelected.sort().map((state, i) => {\n          return (\n            <FormControlLabel\n              key={i}\n              name={state}\n              checked={selectedCircles.selected.includes(state)}\n              onChange={handleChange}\n              control={\n                <Checkbox name={state} className={classes.notSelectedLabel} />\n              }\n              label={state}\n              className={classes.stateLabelList}\n              classes={{ label: classes.notSelectedLabel }}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import React from \"react\";\n\n// style\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  filterSelector: {\n    minWidth: 150,\n    fontWeight: 500,\n    fontSize: \".8rem\",\n    color: theme.palette.text.primary,\n  },\n  input: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport const NumberPicker = props => {\n  const { nStates, setNStates } = props;\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id=\"n-states\"\n      size=\"small\"\n      type=\"number\"\n      label=\"Filter n states\"\n      InputProps={{\n        inputProps: {\n          min: 1,\n          max: 50,\n          className: classes.input,\n        },\n      }}\n      defaultValue={nStates}\n      onChange={e => setNStates(e.target.value)}\n      className={classes.filterSelector}\n    />\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport { FormGroup } from \"@material-ui/core\";\n\n// components\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\nimport { FilterBatch } from \"../pickers/FilterBatch\";\nimport { SelectedStatus } from \"../pickers/SelectedStatus\";\nimport { NumberPicker } from \"../pickers/NumberPicker\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  deselectAll: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  filterBatch: {\n    justifyContent: \"flex-start\",\n    color: theme.palette.text.primary,\n  },\n  selectedStatus: {\n    marginTop: \"100\",\n  },\n  filterBody: {\n    paddingLeft: theme.spacing(3),\n    marginBottom: theme.spacing(4),\n  },\n}));\n\nconst FilterDashboard = props => {\n  const { handleSelector } = props;\n  const { selectedCircles, setSelectedCircles } = useContext(selectionContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [filters, setFilters] = useState([]);\n  const [nStates, setNStates] = useState(12);\n\n  const handleChange = e => {\n    const state = e.target.name;\n\n    if (selectedCircles.selected.includes(state)) {\n      setSelectedCircles({\n        ...selectedCircles,\n        selected: selectedCircles.selected.filter(d => d !== state),\n        notSelected: [...selectedCircles.notSelected, state],\n      });\n    } else {\n      setSelectedCircles({\n        ...selectedCircles,\n        selected: [...selectedCircles.selected, state],\n        notSelected: selectedCircles.notSelected.filter(d => d !== state),\n      });\n    }\n  };\n\n  const handleFilter = newFilter => {\n    if (filters.length > 0) {\n      setFilters(prevState => [...prevState, newFilter]);\n    } else setFilters([newFilter]);\n  };\n\n  const handleDeleteFilter = deletedFilter => {\n    const newFilterList = filters.filter(f => f.id !== deletedFilter.id);\n    setFilters(newFilterList);\n  };\n\n  const handleDeselectAll = () => {\n    setFilters([]);\n    setSelectedCircles(prevState => ({\n      ...prevState,\n      selected: [],\n      notSelected: prevState.all,\n    }));\n  };\n\n  return (\n    <>\n      <FormGroup>\n        <SectionTitle divider>Filters</SectionTitle>\n        <div className={classes.filterBody}>\n          <NumberPicker nStates={nStates} setNStates={setNStates} />\n          <FilterBatch\n            nStates={nStates}\n            setNStates={setNStates}\n            filters={filters}\n            setFilters={setFilters}\n            handleDeleteFilter={handleDeleteFilter}\n            handleFilter={handleFilter}\n            handleSelector={handleSelector}\n          />\n        </div>\n        <SectionTitle divider>Selections</SectionTitle>\n        <div className={classes.filterBody}>\n          <SelectedStatus\n            handleChange={handleChange}\n            handleDeselectAll={handleDeselectAll}\n          />\n        </div>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default FilterDashboard;\n","import React from \"react\";\n\n// style\nimport { IconButton, Tooltip, Typography, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n}));\n\nexport const ChartPicker = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <MenuItem component=\"a\" href=\"/covidcompare/#/line-app\">\n        <Tooltip title=\"Line chart\">\n          <IconButton className={classes.menuButton}>\n            <TimelineIcon />\n          </IconButton>\n        </Tooltip>\n        <Typography display=\"inline\">Line chart</Typography>\n      </MenuItem>\n      <MenuItem component=\"a\" href=\"/covidcompare/#/gapminder-app\">\n        <Tooltip title=\"Gapminder chart\">\n          <IconButton className={classes.menuButton}>\n            <BubbleChartIcon />\n          </IconButton>\n        </Tooltip>\n        <Typography display=\"inline\">Gapminder chart</Typography>\n      </MenuItem>\n    </>\n  );\n};\n","import React from \"react\";\n\n// style\nimport { Drawer, Hidden, Toolbar, Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 1,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    alignItems: \"left\",\n    color: theme.palette.text.primary,\n    paddingLeft: \"1rem\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nexport const MenuDrawer = props => {\n  const { mobileOpen, handleDrawer, persistent } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n          open={mobileOpen}\n          onClose={handleDrawer}\n          classes={{ paper: classes.drawerPaper }}\n          ModalProps={{ keepMounted: true }}\n        >\n          <Toolbar />\n          <Grid item style={{ marginBottom: \"auto\" }}>\n            {props.children}\n          </Grid>\n        </Drawer>\n      </Hidden>\n      {persistent && (\n        <Hidden smDown>\n          <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{ paper: classes.drawerPaper }}\n            open\n          >\n            <Toolbar />\n            <div className={classes.drawerContainer}>{props.children}</div>\n          </Drawer>\n        </Hidden>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const ThemeContext = React.createContext();\n","import React, { useContext } from \"react\";\nimport { saveSvgAsPng } from \"save-svg-as-png\";\n\n// context\nimport { ThemeContext } from \"../context/ThemeContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport \"../styles/styles.css\";\nimport { IconButton, Tooltip, Typography, MenuItem } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\n\nexport const Settings = () => {\n  const { darkMode, setDarkMode } = useContext(ThemeContext);\n\n  const useStyles = makeStyles(theme => ({\n    rootGrid: {\n      maxWidth: window.innerWidth,\n      margin: \"0 auto\",\n    },\n    footerButton: {\n      color: theme.palette.text.secondary,\n      \"&:hover\": {\n        backgroundColor: \"transparent\",\n      },\n    },\n  }));\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const pathArray = window.location.href.split(\"/\");\n  const queryID = `#${pathArray[pathArray.length - 1]}`;\n\n  const saveImage = () => {\n    saveSvgAsPng(document.querySelector(queryID), \"covid-19_chart.png\", {\n      backgroundColor: theme.palette.background.default,\n      encoderOptions: 1,\n      fonts: [\n        {\n          text:\n            \"@font-face {font-family:'ralewaymedium';src:url('../styles/fonts/raleway-medium-webfont.woff2') format('woff2'),url('../styles/fonts/raleway-medium-webfont.woff') format('woff')}\",\n          url: \"../styles/fonts/raleway-medium-webfont.woff\",\n          format: \"application/font-woff\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <>\n      <MenuItem onClick={saveImage}>\n        <Tooltip title=\"Save chart as image\" placement=\"right\">\n          <IconButton className={classes.footerButton}>\n            <SaveIcon />\n          </IconButton>\n        </Tooltip>\n        <Typography display=\"inline\">Save chart</Typography>\n      </MenuItem>\n      <MenuItem onClick={() => setDarkMode(!darkMode)}>\n        <Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\n          <IconButton className={classes.footerButton}>\n            <Brightness7Icon />\n          </IconButton>\n        </Tooltip>\n        <Typography display=\"inline\">Dark mode</Typography>\n      </MenuItem>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\n// components\nimport ParamDashboard from \"./ParamDashboard\";\nimport FilterDashboard from \"./FilterDashboard\";\nimport { ChartPicker } from \"../../sharedComponents/ChartPicker\";\nimport { MenuDrawer } from \"./MenuDrawer\";\nimport { Settings } from \"../../Settings\";\n\n// style\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Menu,\n  MenuList,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    backgroundColor: theme.palette.background.dark,\n    color: theme.palette.text.primary,\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  hide: {\n    display: \"none\",\n  },\n}));\n\nexport const Navbar = props => {\n  const { data, selector, handleSelector } = props;\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const classes = useStyles();\n\n  const handleOptions = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  const handleDrawer = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <>\n      <AppBar position=\"relative\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            onClick={handleDrawer}\n            edge=\"start\"\n            disableRipple\n            className={classes.menuButton}\n          >\n            <MenuIcon className={classes.menuButton} />\n          </IconButton>\n          <span style={{ marginLeft: \"auto\" }}>\n            <Button onClick={handleOptions}>Options</Button>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleOptions}\n            >\n              <MenuList\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <ChartPicker />\n                <Settings />\n              </MenuList>\n            </Menu>\n          </span>\n        </Toolbar>\n      </AppBar>\n      <MenuDrawer\n        mobileOpen={mobileOpen}\n        handleDrawer={handleDrawer}\n        persistent\n      >\n        <div>\n          <ParamDashboard\n            flexDirection=\"column\"\n            data={data}\n            selector={selector}\n            handleSelector={handleSelector}\n          />\n        </div>\n        <div>\n          <FilterDashboard handleSelector={handleSelector} />\n        </div>\n      </MenuDrawer>\n    </>\n  );\n};\n","export const gapminderData = async (data, stateInfo, chartParams) => {\n  const { xParam, yParam, tParam } = chartParams;\n  let newData = [];\n  Object.keys(stateInfo).forEach((state, i) => {\n    let eachState = {\n      state: state,\n      region: stateInfo[state].region,\n      [tParam.selected]: [],\n      [xParam.selected]: [],\n      [xParam.alt1]: [],\n      [yParam.selected]: [],\n      [yParam.alt1]: [],\n    };\n\n    const filtered = data.filter(d => d.state === state);\n    filtered.forEach((d, i) => {\n      eachState[tParam.selected].push([d[tParam.selected], d[tParam.selected]]);\n      eachState[xParam.selected].push([d[tParam.selected], d[xParam.selected]]);\n      eachState[yParam.selected].push([d[tParam.selected], d[yParam.selected]]);\n      eachState[xParam.alt1].push([d[tParam.selected], d[xParam.alt1]]);\n      eachState[yParam.alt1].push([d[tParam.selected], d[yParam.alt1]]);\n    });\n    newData.push(eachState);\n  });\n\n  return newData;\n};\n","export const wrapper = {\n  wrapperWidth: window.innerWidth * 0.8,\n  wrapperHeight: window.innerHeight * 0.8,\n  margin: {\n    top: 80,\n    right: 40,\n    bottom: 60,\n    left: 60,\n  },\n};\n\nexport const bounds = {\n  width: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\n  height: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\n};\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// params\nimport { chartParams, cParamCategories } from \"./appParams\";\n\n// components\nimport { ChartGapminder } from \"./chart/ChartGapminder\";\nimport { Navbar } from \"./interface/Navbar\";\n\n// context\nimport { dataContext } from \"../../context/dataContext\";\nimport { selectionContext } from \"../../context/selectionContext\";\n\n// data\nimport stateInfo from \"../../data/stateInfo.json\";\nimport { gapminderData } from \"./gapminderData\";\n\n// style\nimport { wrapper, bounds } from \"./styles/dimensions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst AppGapminder = props => {\n  const { darkMode, setDarkMode } = props;\n  const { margin } = wrapper;\n  const { width } = bounds;\n\n  const { dataStates } = useContext(dataContext);\n  const [data, setData] = useState(null);\n  const [selector, setSelector] = useState({\n    xParam: chartParams.xParam,\n    yParam: chartParams.yParam,\n    zParam: chartParams.zParam,\n    cParam: chartParams.cParam,\n  });\n  const [selectedCircles, setSelectedCircles] = useState({\n    selected: [],\n    notSelected: Object.keys(stateInfo),\n    all: Object.keys(stateInfo),\n  });\n\n  // style\n  const useStyles = makeStyles(theme => ({\n    navbar: {\n      width: width,\n      marginLeft: margin.left,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n    },\n  }));\n  const classes = useStyles();\n\n  const handleSelector = e => {\n    const param = e.target.name;\n\n    setSelector({\n      ...selector,\n      [param]: {\n        ...selector[param],\n        selected: e.target.value,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (dataStates.length > 0) {\n      gapminderData(dataStates, stateInfo, chartParams).then(res =>\n        setData(res)\n      );\n    }\n  }, [dataStates]);\n\n  return (\n    <selectionContext.Provider value={{ selectedCircles, setSelectedCircles }}>\n      <Navbar\n        data={data}\n        selector={selector}\n        handleSelector={handleSelector}\n        className={classes.navbar}\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n      />\n      <div transform={`translate(${margin.left}, ${margin.top})`}>\n        {data && (\n          <ChartGapminder\n            cParamCategories={cParamCategories}\n            selector={selector}\n            data={data}\n            wrapper={wrapper}\n            bounds={bounds}\n          />\n        )}\n      </div>\n    </selectionContext.Provider>\n  );\n};\n\nexport default AppGapminder;\n","import { useEffect, useContext } from \"react\";\nimport { mouse, bisector, timeFormat } from \"d3\";\n\n// context\nimport { dataContext } from \"../../context/dataContext\";\n\nexport const MouseMove = props => {\n  const {\n    focus,\n    overlay,\n    linesStates,\n    selectedStates,\n    chartParams,\n    scales,\n  } = props;\n  const { xScale, yScale } = scales;\n  const { dataStates } = useContext(dataContext);\n\n  const selectedYParam = chartParams.yParam.selected;\n\n  const dateFormatter = timeFormat(\"%m-%d-%y\");\n\n  useEffect(() => {\n    if (dataStates.length > 0) {\n      overlay.on(\"mousemove\", mousemove);\n\n      let frozen = false;\n\n      function mousemove() {\n        let x0 = xScale.invert(mouse(this)[0]);\n        const bisectDate = bisector(d => d.dayOfOutbreak).left;\n\n        Object.keys(selectedStates)\n          .sort()\n          .filter(s => selectedStates[s].selected === true)\n          .forEach(state => {\n            const dataEachState = dataStates.filter(d => d.state === state);\n            const stateHTML = selectedStates[state].htmlFormat;\n            const i = bisectDate(dataEachState, x0, 0);\n\n            let dataEachStateRangeY = dataEachState[i]\n              ? dataEachState[i][selectedYParam]\n              : dataEachState[dataEachState.length - 1][selectedYParam];\n            let dataEachStateRangeX = dataEachState[i]\n              ? dataEachState[i].dayOfOutbreak\n              : dataEachState[dataEachState.length - 1].dayOfOutbreak;\n            let dataEachStateRangeDate = dataEachState[i]\n              ? dateFormatter(dataEachState[i].date)\n              : dateFormatter(dataEachState[dataEachState.length - 1].date);\n            let dataEachStateRangeCases = dataEachState[i]\n              ? dataEachState[i].cases\n              : dataEachState[dataEachState.length - 1].cases;\n\n            const toggleFreeze = () => {\n              frozen = !frozen;\n            };\n\n            overlay.on(\"click\", toggleFreeze);\n\n            if (!frozen) {\n              focus\n                .select(`#circle-${stateHTML}`)\n                .attr(\"cy\", yScale(dataEachStateRangeY))\n                .attr(\"cx\", xScale(dataEachStateRangeX));\n\n              focus\n                .select(`#d-label-${stateHTML}`)\n                .text(\n                  `${\n                    selectedStates[state].abbreviation\n                  } => Day ${dataEachStateRangeX} (${dataEachStateRangeDate\n                    .split(\"-\")\n                    .slice(0, 2)\n                    .join(\"-\")})`\n                )\n                .attr(\"fill\", selectedStates[state].color);\n\n              focus\n                .select(`#d-label-b-${stateHTML}`)\n                .text(d =>\n                  selectedYParam === \"casesPerThousand\"\n                    ? `${dataEachStateRangeY.toFixed(\n                        3\n                      )} (${dataEachStateRangeCases.toLocaleString()} tot.)`\n                    : selectedYParam === \"newCases\"\n                    ? `${dataEachStateRangeY.toLocaleString()} new (${dataEachStateRangeCases.toLocaleString()} tot.)`\n                    : `${dataEachStateRangeCases.toLocaleString()} tot.`\n                )\n                .attr(\"fill\", selectedStates[state].color);\n            }\n          });\n      }\n    }\n  }, [linesStates, dataStates, selectedStates]);\n\n  return null;\n};\n","import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport { line } from \"d3\";\n\n// functions\nimport { MouseMove } from \"../../util/MouseMove\";\n\n// context\nimport { dataContext } from \"../../../context/dataContext\";\nimport { statesContext } from \"../../../context/statesContext\";\n\n// style\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nexport const Line = props => {\n  const { focus, overlay, selectedStates, bounds, chartParams, scales } = props;\n  const { width, height } = bounds;\n  const { xScale, yScale } = scales;\n  const selectedYParam = chartParams.yParam.selected;\n\n  // context\n  const { dataStates } = useContext(dataContext);\n  const { infoStates } = useContext(statesContext);\n\n  // style\n  const theme = useTheme();\n\n  const [linesStates, setLinesStates] = useState([]);\n\n  const filterStates = async selectedStates => {\n    let filtered = Object.keys(selectedStates)\n      .sort()\n      .filter(s => selectedStates[s].selected === true);\n    return filtered;\n  };\n\n  const generateLine = async filtered => {\n    const lineGenerator = line()\n      .x(d => xScale(d.dayOfOutbreak))\n      .y(d => yScale(d[selectedYParam]));\n\n    const lineData = {};\n\n    // const filtered = filterStates(selectedStates);\n    filtered.forEach(state => {\n      const dataEachState = dataStates.filter(d => d.state === state);\n\n      // Line label placement\n      const lastDayOfOutbreak =\n        dataEachState[dataEachState.length - 1].dayOfOutbreak;\n      const lastCasesDatum =\n        dataEachState[dataEachState.length - 1][selectedYParam];\n\n      lineData[state] = {\n        line: lineGenerator(dataEachState),\n        lineLabelX: xScale(lastDayOfOutbreak) + 3,\n        lineLabelY: yScale(lastCasesDatum),\n      };\n    });\n\n    return lineData;\n  };\n\n  const generateFocus = async filtered => {\n    let xShift = 0;\n    let yShift = 0;\n\n    filtered.forEach((state, i) => {\n      const stateHTML = infoStates[state].htmlFormat;\n      focus\n        .append(\"circle\")\n        .attr(\"id\", `circle-${stateHTML}`)\n        .attr(\"r\", 5)\n        .attr(\"fill\", selectedStates[state].color)\n        .attr(\"stroke\", theme.palette.text.primary);\n\n      if (i === 0) {\n        xShift = 0;\n        yShift = 0;\n      } else if (i % 4 === 0) {\n        xShift += 135;\n        yShift = 0;\n      } else {\n        yShift += 35;\n      }\n\n      if (xShift + 65 < width) {\n        focus\n          .append(\"text\")\n          .attr(\"id\", `d-label-${stateHTML}`)\n          .attr(\"x\", xShift)\n          .attr(\"y\", d => 70 + height + yShift)\n          .style(\"font-size\", \".75rem\")\n          .style(\"font-family\", \"ralewaymedium, Helvetica, Arial, sans-serif\");\n        focus\n          .append(\"text\")\n          .attr(\"id\", `d-label-b-${stateHTML}`)\n          .attr(\"x\", xShift)\n          .attr(\"y\", d => 70 + height + yShift + 15)\n          .style(\"font-size\", \".75rem\")\n          .style(\"font-family\", \"ralewaymedium, Helvetica, Arial, sans-serif\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!selectedStates || dataStates.length < 1 || !selectedYParam) return;\n    let mounted = true;\n    filterStates(selectedStates)\n      .then(filtered => generateLine(filtered))\n      .then(lineData => {\n        if (mounted) {\n          setLinesStates(lineData);\n        }\n      });\n\n    return () => {\n      mounted = false;\n      setLinesStates(null);\n    };\n  }, [dataStates, selectedStates, chartParams, selectedYParam, scales]);\n\n  useEffect(() => {\n    if (!selectedStates) return;\n    filterStates(selectedStates).then(filtered => generateFocus(filtered));\n\n    return () => {\n      focus.selectAll(\"circle\").remove();\n      focus.selectAll(\"text\").remove();\n    };\n  }, [linesStates]);\n\n  return (\n    <React.Fragment>\n      {dataStates && linesStates && selectedStates && (\n        <MouseMove\n          focus={focus}\n          overlay={overlay}\n          linesStates={linesStates}\n          bounds={bounds}\n          chartParams={chartParams}\n          {...props}\n        />\n      )}\n      {linesStates &&\n        selectedStates &&\n        Object.keys(linesStates)\n          .sort()\n          .map((state, i) => {\n            const stateHTML = infoStates[state].htmlFormat;\n\n            return (\n              <Fragment key={state}>\n                <g id={`bounds-render-${stateHTML}`}>\n                  <path\n                    fill=\"none\"\n                    stroke={selectedStates[state].color}\n                    strokeWidth={2.5}\n                    strokeLinejoin=\"round\"\n                    strokeLinecap=\"round\"\n                    d={linesStates[state].line}\n                  />\n                  <text\n                    id={`line-label-${stateHTML}`}\n                    className=\"line-label\"\n                    style={{\n                      fill: theme.palette.text.primary,\n                      fontSize: \"14px\",\n                      fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                    }}\n                    x={linesStates[state].lineLabelX}\n                    y={linesStates[state].lineLabelY}\n                  >\n                    {selectedStates[state].abbreviation}\n                  </text>\n                </g>\n              </Fragment>\n            );\n          })}\n    </React.Fragment>\n  );\n};\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  select,\n  max,\n  scaleLinear,\n  scaleLog,\n  extent,\n  axisLeft,\n  axisBottom,\n} from \"d3\";\n\n// Components\nimport { Line } from \"./Line\";\n\n// Context\nimport { dataContext } from \"../../../context/dataContext\";\n\n// Styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  rootSVG: {\n    display: \"inline-block\",\n    position: \"relative\",\n    width: \"100%\",\n    verticalAlign: \"middle\",\n    overflow: \"hidden\",\n  },\n  bounds: {\n    width: props => props.width,\n    height: props => props.height,\n  },\n  title: {\n    fill: theme.palette.text.primary,\n    fontSize: \"1.2rem\",\n  },\n  axes: {\n    fill: theme.palette.text.primary,\n  },\n  axisLabel: {\n    fill: theme.palette.text.primary,\n    fontSize: \".8rem\",\n  },\n  footnotes: {\n    fill: theme.palette.text.primary,\n    fontSize: \".6rem\",\n  },\n}));\n\nconst ChartCovidCompare = props => {\n  const { wrapper, bounds, chartParams } = props;\n  const { wrapperWidth, wrapperHeight, margin } = wrapper;\n  const { width, height } = bounds;\n  const { dataStates } = useContext(dataContext);\n\n  const selectedYParam = chartParams.yParam.selected;\n\n  const [scales, setScales] = useState(null);\n  const classes = useStyles(props);\n  const theme = useTheme();\n\n  const yAxisRef = useRef(null);\n  const xAxisRef = useRef(null);\n  const svgRef = useRef(null);\n  const boundsRef = useRef(null);\n\n  const getFocus = () => {\n    return select(boundsRef.current)\n      .append(\"g\")\n      .attr(\"class\", \"focus\")\n      .style(\"display\", \"none\");\n  };\n\n  const focus = getFocus();\n\n  const getOverlay = () => {\n    return select(boundsRef.current)\n      .append(\"rect\")\n      .attr(\"class\", \"overlay\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"opacity\", \"0\")\n      .on(\"mouseover\", () => focus.style(\"display\", null));\n  };\n  const overlay = getOverlay();\n\n  useEffect(() => {\n    // Scales\n    const xScale = scaleLinear()\n      .domain(extent(dataStates, d => d.dayOfOutbreak))\n      .range([0, width]);\n\n    const yScale =\n      chartParams.yParam.type === \"log\"\n        ? scaleLog().domain([1, 1000000]).range([height, 0])\n        : scaleLinear()\n            .domain([0, max(dataStates, d => d[selectedYParam])])\n            .range([height, 0]);\n\n    setScales({\n      xScale,\n      yScale,\n    });\n\n    // Axes\n    const yAxisGenerator =\n      chartParams.yParam.selected === \"cases\"\n        ? axisLeft()\n            .scale(yScale)\n            .ticks(6)\n            .tickFormat(t => t.toLocaleString())\n        : axisLeft().scale(yScale);\n    const xAxisGenerator = axisBottom().scale(xScale);\n    select(xAxisRef.current).call(xAxisGenerator);\n    select(yAxisRef.current).call(yAxisGenerator);\n\n    return () => {\n      setScales(null);\n    };\n  }, [dataStates, chartParams, selectedYParam, height, width]);\n\n  return (\n    <>\n      <svg\n        id=\"line-app\"\n        height={wrapperHeight}\n        width={wrapperWidth}\n        ref={svgRef}\n        className={classes.rootSVG}\n        viewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\n      >\n        <g\n          id=\"bounds\"\n          transform={`translate(${margin.left}, ${margin.top})`}\n          ref={boundsRef}\n        >\n          <text\n            className={classes.title}\n            style={{\n              fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n            }}\n            textAnchor=\"middle\"\n            x={width / 2}\n            y={-margin.top * 0.5}\n          >\n            COVID-19 US State Comparison\n          </text>\n          <text\n            className={classes.axisLabel}\n            style={{\n              fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n            }}\n            textAnchor=\"middle\"\n            x={width / 2}\n            y={height + 40}\n          >\n            Day of Outbreak\n          </text>\n          <text\n            className={classes.axisLabel}\n            style={{\n              fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n            }}\n            textAnchor=\"middle\"\n            transform={`rotate(-90)`}\n            x={-height / 2}\n            y={-45}\n          >\n            {selectedYParam}\n          </text>\n          <g\n            ref={yAxisRef}\n            id=\"y-axis\"\n            style={{\n              fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n              color: theme.palette.text.primary,\n            }}\n          />\n          <g\n            ref={xAxisRef}\n            id=\"x-axis\"\n            transform={`translate(0,${height})`}\n            style={{\n              fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\",\n              color: theme.palette.text.primary,\n            }}\n          />\n          {scales && (\n            <Line\n              focus={focus}\n              wrapper={wrapper}\n              overlay={overlay}\n              scales={scales}\n              {...props}\n            />\n          )}\n        </g>\n      </svg>\n    </>\n  );\n};\n\nChartCovidCompare.propTypes = {\n  wrapper: PropTypes.object,\n  bounds: PropTypes.object,\n};\n\nexport default ChartCovidCompare;\n","// REUSABLE COMPONENT\n\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const FilterValues = forwardRef((props, ref) => {\n  const { filterOptions, handleSelectedFilter, handleMenu } = props;\n\n  const handleMenuClick = newFilter => {\n    handleMenu();\n    handleSelectedFilter(newFilter);\n  };\n\n  return (\n    <>\n      {filterOptions.map(o => {\n        return (\n          <MenuItem\n            key={o.id}\n            id={o.id}\n            ref={ref}\n            onClick={() => handleMenuClick(o)}\n          >\n            {o.name}\n          </MenuItem>\n        );\n      })}\n    </>\n  );\n});\n\nFilterValues.propTypes = {\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired, // unique ID; html format\n      name: PropTypes.string, // user-facing name of filter\n      type: PropTypes.string, // user-facing parameter being filtered (eg. \"GDP\")\n      chartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"realGDP2019\")\n      n: PropTypes.number.isRequired, // number of cases (ie. rows or documents) to filter\n      sort: PropTypes.string.isRequired, // \"ascending or descending\"\n    })\n  ),\n};\n","// WRAPPER COMPONENT (FilterValues)\n\nimport React, { useState } from \"react\";\nimport { FilterValues } from \"../components/FilterValues\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterCases = props => {\n  const { nStates, handleSelectedFilter } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  const filterOptions = [\n    {\n      id: \"cases-high\",\n      name: `Top ${nStates} (total)`,\n      type: \"Cases\",\n      chartParam: \"latestCaseCount\",\n      sort: \"descending\",\n      n: nStates,\n    },\n    {\n      id: \"cases-low\",\n      name: `Bottom ${nStates} (total)`,\n      type: \"Cases\",\n      chartParam: \"latestCaseCount\",\n      sort: \"ascending\",\n      n: nStates,\n    },\n    {\n      id: \"cases-per-1000-high\",\n      name: `Top ${nStates} (per 1000)`,\n      type: \"Cases\",\n      chartParam: \"latestCaseCountPerThou\",\n      sort: \"descending\",\n      n: nStates,\n    },\n    {\n      id: \"cases-per-1000-low\",\n      name: `Bottom ${nStates} (per 1000)`,\n      type: \"Cases\",\n      chartParam: \"latestCaseCountPerThou\",\n      sort: \"ascending\",\n      n: nStates,\n    },\n  ];\n\n  return (\n    <>\n      <Button id=\"cases-btn\" onClick={handleMenu}>\n        Filter Cases\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={anchorEl ? Boolean(anchorEl.id === \"cases-btn\") : false}\n        onClose={handleMenu}\n      >\n        <FilterValues\n          filterOptions={filterOptions}\n          handleSelectedFilter={handleSelectedFilter}\n          handleMenu={handleMenu}\n        />\n      </Menu>\n    </>\n  );\n};\n","// WRAPPER COMPONENT (FilterValues)\n\nimport React, { useState } from \"react\";\nimport { FilterValues } from \"../components/FilterValues\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterPopulation = props => {\n  const { nStates, handleSelectedFilter } = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  const filterOptions = [\n    {\n      id: \"pop-high\",\n      name: `Top ${nStates} (pop. total)`,\n      type: \"Pop.\",\n      chartParam: \"population\",\n      sort: \"descending\",\n      n: nStates,\n    },\n    {\n      id: \"pop-low\",\n      name: `Bottom ${nStates} (pop. total)`,\n      type: \"Pop.\",\n      chartParam: \"population\",\n      sort: \"ascending\",\n      n: nStates,\n    },\n    {\n      id: \"pop-density-high\",\n      name: `Top ${nStates} (pop. density)`,\n      type: \"Pop.\",\n      chartParam: \"populationDensity\",\n      sort: \"descending\",\n      n: nStates,\n    },\n    {\n      id: \"pop-density-low\",\n      name: `Bottom ${nStates} (pop. density)`,\n      type: \"Pop.\",\n      chartParam: \"populationDensity\",\n      sort: \"ascending\",\n      n: nStates,\n    },\n  ];\n\n  return (\n    <>\n      <Button id=\"population-btn\" onClick={handleMenu}>\n        Filter Population\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={anchorEl ? Boolean(anchorEl.id === \"population-btn\") : false}\n        onClose={handleMenu}\n      >\n        <FilterValues\n          filterOptions={filterOptions}\n          handleSelectedFilter={handleSelectedFilter}\n          handleMenu={handleMenu}\n        />\n      </Menu>\n    </>\n  );\n};\n","// REUSABLE COMPONENT\n\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const FilterCategories = forwardRef((props, ref) => {\n  const { filterOptions, handleSelectedFilter, handleMenu } = props;\n\n  const handleMenuClick = newFilter => {\n    handleMenu();\n    handleSelectedFilter(newFilter);\n  };\n\n  return (\n    <>\n      {filterOptions.map(o => {\n        return (\n          <MenuItem\n            key={o.id}\n            id={o.id}\n            ref={ref}\n            onClick={() => handleMenuClick(o)}\n          >\n            {o.name}\n          </MenuItem>\n        );\n      })}\n    </>\n  );\n});\n\nFilterCategories.propTypes = {\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired, // unique ID; html format\n      name: PropTypes.string, // user-facing name of filter\n      type: PropTypes.string, // user-facing parameter being filtered (eg. \"Region\")\n      chartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"region\")\n    })\n  ),\n};\n","// WRAPPER COMPONENT (FilterCategories)\n\nimport React, { useState } from \"react\";\n\n// components\nimport { FilterCategories } from \"../components/FilterCategories\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterRegion = props => {\n  const { handleSelectedFilter } = props;\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenu = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  const filterOptions = [\n    {\n      id: \"northeast\",\n      name: \"Northeast\",\n      type: \"Region\",\n      chartParam: \"region\",\n    },\n    {\n      id: \"midwest\",\n      name: \"Midwest\",\n      type: \"Region\",\n      chartParam: \"region\",\n    },\n    { id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\" },\n    { id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\" },\n  ];\n\n  return (\n    <>\n      <Button id=\"region-btn\" onClick={handleMenu}>\n        Filter Region\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\n        onClose={handleMenu}\n      >\n        <FilterCategories\n          filterOptions={filterOptions}\n          handleSelectedFilter={handleSelectedFilter}\n          handleMenu={handleMenu}\n        />\n      </Menu>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\n\n// components\nimport { FilterCases } from \"./FilterCases\";\nimport { FilterPopulation } from \"./FilterPopulation\";\nimport { FilterRegion } from \"./FilterRegion\";\n\n// context\nimport { statesContext } from \"../../../context/statesContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  rootContainer: {\n    maxWidth: 550,\n    minWidth: 175,\n    justifyContent: \"space-evenly\",\n    padding: 0,\n    margin: 0,\n  },\n  tab: {\n    opacity: 0.7,\n  },\n  menuItem: {\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nexport const BatchSelect = props => {\n  const { selectedStates, setSelectedStates } = props;\n\n  // ref and context\n  const { infoStates } = useContext(statesContext);\n\n  // assign\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  // style\n  const theme = useTheme();\n  const classes = useStyles();\n  const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleSelectedFilter = newSelectedFilter => {\n    setSelectedFilter(newSelectedFilter);\n    setAnchorEl(null);\n  };\n\n  const handleFilterCategories = (newFilter, info) => {\n    const filtered = Object.keys(info).filter(\n      s => info[s][newFilter.chartParam] === newFilter.name\n    );\n\n    let newSelection = {};\n    Object.keys(info).forEach(s => {\n      if (filtered.includes(s)) {\n        newSelection[s] = { ...info[s], selected: true };\n      } else {\n        newSelection[s] = { ...info[s], selected: false };\n      }\n    });\n\n    return newSelection;\n  };\n\n  const handleFilterValues = (newFilter, info) => {\n    const n = newFilter.n;\n    let filtered;\n\n    filtered = Object.keys(info)\n      .sort((a, b) =>\n        newFilter.sort === \"descending\"\n          ? info[b][newFilter.chartParam] - info[a][newFilter.chartParam]\n          : info[a][newFilter.chartParam] - info[b][newFilter.chartParam]\n      )\n      .slice(0, n);\n\n    let newSelection = {};\n    Object.keys(info).forEach(s => {\n      if (filtered.includes(s)) {\n        newSelection[s] = { ...info[s], selected: true };\n      } else {\n        newSelection[s] = { ...info[s], selected: false };\n      }\n    });\n\n    return newSelection;\n  };\n\n  useEffect(() => {\n    if (selectedFilter) {\n      const newSelection = selectedFilter.n\n        ? handleFilterValues(selectedFilter, infoStates)\n        : handleFilterCategories(selectedFilter, infoStates);\n      setSelectedStates(newSelection);\n    }\n  }, [selectedFilter]);\n\n  return (\n    <Grid\n      container\n      className={classes.rootContainer}\n      style={\n        mqSmall\n          ? { flexDirection: \"column\", alignItems: \"center\" }\n          : { flexDirection: \"row\" }\n      }\n    >\n      <FilterCases\n        aria-controls=\"cases-btn\"\n        aria-haspopup=\"true\"\n        className={classes.tab}\n        nStates={12}\n        selectedStates={selectedStates}\n        setSelectedStates={setSelectedStates}\n        handleSelectedFilter={handleSelectedFilter}\n      />\n      <FilterPopulation\n        aria-controls=\"population-btn\"\n        aria-haspopup=\"true\"\n        className={classes.tab}\n        nStates={12}\n        selectedStates={selectedStates}\n        setSelectedStates={setSelectedStates}\n        handleSelectedFilter={handleSelectedFilter}\n      />\n      <FilterRegion\n        aria-controls=\"region-btn\"\n        aria-haspopup=\"true\"\n        className={classes.tab}\n        selectedStates={selectedStates}\n        setSelectedStates={setSelectedStates}\n        handleSelectedFilter={handleSelectedFilter}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\n\n// components\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\n\n// styles\nimport {\n  IconButton,\n  FormControlLabel,\n  FormGroup,\n  Checkbox,\n  Divider,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  sectionTitleTypography: {\n    color: theme.palette.text.primary,\n    fontWeight: 700,\n  },\n  drawerBody: {\n    alignText: \"left\",\n    paddingLeft: theme.spacing(3),\n  },\n  selectAllButton: {\n    color: \"green\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  deselectAllButton: {\n    color: \"red\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  stateLabelSelected: {\n    fontSize: \".9rem\",\n  },\n  stateLabelNotSelected: {\n    color: \"gray\",\n    opacity: 0.7,\n    fontSize: \".9rem\",\n  },\n}));\n\nexport const Dashboard = props => {\n  const {\n    selectedStates,\n    handleSelectedStates,\n    handleSelectAllStates,\n    handleDeselectAllStates,\n  } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div>\n      <SectionTitle\n        divider\n        classes={{ typography: classes.sectionTitleTypography }}\n      >\n        Selections\n      </SectionTitle>\n      <FormGroup className={classes.drawerBody}>\n        <FormControlLabel\n          id=\"select-all\"\n          label=\"Select All\"\n          name=\"Select All\"\n          onClick={handleSelectAllStates}\n          control={\n            <IconButton\n              id=\"selector-all\"\n              name=\"select-all\"\n              className={classes.selectAllButton}\n            >\n              <CheckIcon />\n            </IconButton>\n          }\n        />\n        <FormControlLabel\n          id=\"deselect-all\"\n          label=\"Deselect All\"\n          name=\"Deselect All\"\n          onClick={handleDeselectAllStates}\n          control={\n            <IconButton\n              id=\"deselector-all\"\n              name=\"deselect-all\"\n              className={classes.deselectAllButton}\n            >\n              <ClearIcon />\n            </IconButton>\n          }\n        />\n        <Divider className={classes.divider} />\n        {selectedStates ? (\n          Object.keys(selectedStates)\n            .sort()\n            .filter(s => selectedStates[s].selected === true)\n            .map((state, i) => {\n              return (\n                <FormControlLabel\n                  key={i}\n                  id={selectedStates[state].htmlFormat}\n                  name={state}\n                  checked={selectedStates[state].selected}\n                  onChange={handleSelectedStates}\n                  classes={{\n                    label: classes.stateLabelSelected,\n                  }}\n                  control={\n                    <Checkbox\n                      name={state}\n                      className={classes.stateLabelSelected}\n                      style={{\n                        color: selectedStates[state].color,\n                      }}\n                    />\n                  }\n                  label={`${state} (${selectedStates[state].abbreviation})`}\n                />\n              );\n            })\n        ) : (\n          <div />\n        )}\n        <Divider className={classes.divider} />\n        {selectedStates ? (\n          Object.keys(selectedStates)\n            .sort()\n            .filter(s => selectedStates[s].selected === false)\n            .map((state, i) => {\n              return (\n                <FormControlLabel\n                  key={i}\n                  id={selectedStates[state].htmlFormat}\n                  name={state}\n                  checked={selectedStates[state].selected}\n                  onChange={handleSelectedStates}\n                  classes={{\n                    label: classes.stateLabelNotSelected,\n                  }}\n                  control={\n                    <Checkbox\n                      name={state}\n                      className={classes.stateLabelNotSelected}\n                    />\n                  }\n                  label={`${state} (${selectedStates[state].abbreviation})`}\n                />\n              );\n            })\n        ) : (\n          <div />\n        )}\n      </FormGroup>\n    </div>\n  );\n};\n","import React from \"react\";\n\n// styles\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 200,\n  },\n  selectInput: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst ParamPicker = ({ chartParams, setChartParams }) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        id=\"parameter-picker-menu\"\n        autoWidth={true}\n        value={chartParams.yParam.selected}\n        onChange={e =>\n          setChartParams(prevState => ({\n            ...prevState,\n            yParam: {\n              ...prevState.yParam,\n              type: e.target.value === \"cases\" ? \"log\" : \"linear\",\n              selected: e.target.value,\n            },\n          }))\n        }\n        label=\"y-axis\"\n        className={classes.selectInput}\n      >\n        <MenuItem id=\"y-param-cases-100\" value=\"casesPerThousand\">\n          Cases/1000\n        </MenuItem>\n        <MenuItem id=\"y-param-cases-total\" value=\"cases\">\n          Total cases (log scale)\n        </MenuItem>\n        <MenuItem id=\"y-param-new-cases\" value=\"newCases\">\n          New cases\n        </MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nexport { ParamPicker };\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\n\n// components\nimport { BatchSelect, Dashboard, ParamPicker } from \"../pickers\";\nimport { Settings } from \"../../Settings\";\nimport { ChartPicker } from \"../../sharedComponents/ChartPicker\";\n\n// styles\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  ClickAwayListener,\n  Drawer,\n  Divider,\n  Menu,\n  Button,\n  MenuList,\n  Tooltip,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    backgroundColor: theme.palette.background.dark,\n    color: theme.palette.text.primary,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 1,\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: theme.palette.background.default,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n    backgroundColor: theme.palette.background.default,\n  },\n  tab: {\n    opacity: 0.7,\n  },\n  menuItem: {\n    opacity: 0.7,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n  navbarPickers: {\n    width: 750,\n    display: \"flex\",\n    alignContent: \"baseline\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nexport const Navbar = props => {\n  const {\n    chartParams,\n    setChartParams,\n    selectedStates,\n    setSelectedStates,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const theme = useTheme();\n  const classes = useStyles();\n  const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleOptions = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  const handleClickAway = e => {\n    if (e.x > drawerWidth && e.y > 70 && open) {\n      setOpen(false);\n    }\n  };\n\n  const handleFilterMenu = e => {\n    !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"relative\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.hide)}\n            disableRipple\n          >\n            <MenuIcon className={classes.menuButton} />\n          </IconButton>\n          {mqSmall ? (\n            <>\n              <Tooltip title=\"Chart filters\">\n                <IconButton\n                  id=\"filters-btn-cc\"\n                  onClick={handleFilterMenu}\n                  className={classes.menuButton}\n                >\n                  <AssessmentIcon />\n                </IconButton>\n              </Tooltip>\n              <Menu\n                anchorEl={anchorEl}\n                open={\n                  anchorEl ? Boolean(anchorEl.id === \"filters-btn-cc\") : false\n                }\n                onClose={handleFilterMenu}\n                style={{ textAlign: \"center\" }}\n              >\n                <ParamPicker\n                  chartParams={chartParams}\n                  setChartParams={setChartParams}\n                />\n                <BatchSelect\n                  selectedStates={selectedStates}\n                  setSelectedStates={setSelectedStates}\n                />\n              </Menu>\n            </>\n          ) : (\n            <span className={classes.navbarPickers}>\n              <ParamPicker\n                chartParams={props.chartParams}\n                setChartParams={props.setChartParams}\n              />\n              <BatchSelect\n                selectedStates={selectedStates}\n                setSelectedStates={setSelectedStates}\n              />\n            </span>\n          )}\n\n          <span style={{ marginLeft: \"auto\" }}>\n            <Button id=\"options-btn-cc\" onClick={handleOptions}>\n              Options\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              open={\n                anchorEl ? Boolean(anchorEl.id === \"options-btn-cc\") : false\n              }\n              onClose={handleOptions}\n            >\n              <MenuList\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <ChartPicker />\n                <Settings />\n              </MenuList>\n            </Menu>\n          </span>\n        </Toolbar>\n      </AppBar>\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              onClick={handleDrawerClose}\n              style={{\n                color: theme.palette.primary.contrastText,\n              }}\n            >\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <Dashboard {...props} />\n        </Drawer>\n      </ClickAwayListener>\n    </div>\n  );\n};\n","// Chart params: define params for drawing axes and chart\nexport const CHART_PARAMS = {\n  chartType: \"line\",\n  toTimestamp: null,\n  multiple: true,\n  normalize: true,\n  xParam: {\n    // x-axis\n    type: \"linear\",\n    format: \"number\",\n    selected: \"dayOfOutbreak\",\n    alt1: null,\n    options: [\"dayOfOutbreak\"],\n  },\n  yParam: {\n    // y-axis\n    type: \"linear\",\n    format: \"number\",\n    selected: \"casesPerThousand\",\n    alt1: \"deathsPerThousand\",\n    options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n  },\n  zParam: {\n    // z-axis (3rd dimension) (eg. size)\n    type: null,\n    format: null,\n    selected: null,\n    options: [null],\n  },\n  cParam: {\n    // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\n    type: \"categorical\",\n    selected: \"region\",\n    options: [\"region\", \"division\", \"governor\"],\n  },\n  tParam: {\n    // time axis (4th dimension) (ie. for animated charts)\n    type: null,\n    selected: null,\n    options: [null],\n  },\n};\n\n// Label params:\nexport const LABEL_PARAMS = {\n  chartTitle: \"COVID-19 State Comparison\",\n  xLabel: \"Cases per Thousand\",\n  yLabel: \"Deaths per Thousand\",\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\n// components\nimport ChartCovidCompare from \"./chart/ChartCovidCompare\";\nimport { Navbar } from \"./interface/Navbar\";\n\n// params\nimport { CHART_PARAMS } from \"./appParams\";\n\n// context\nimport { statesContext } from \"../../context/statesContext\";\n\n// styles\nimport { Grid, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst wrapper = {\n  wrapperWidth: window.innerWidth * 0.9,\n  wrapperHeight: window.innerHeight * 0.9,\n  margin: {\n    top: 80,\n    right: window.innerWidth * 0.1,\n    bottom: 200,\n    left: window.innerWidth * 0.1,\n  },\n};\n\nconst bounds = {\n  width: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\n  height: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\n};\n\nconst AppCovidCompare = () => {\n  const { infoStates } = useContext(statesContext);\n\n  const [selectedStates, setSelectedStates] = useState(null);\n  const [chartParams, setChartParams] = useState(CHART_PARAMS);\n\n  const useStyles = makeStyles(theme => ({\n    container: {\n      padding: 0,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n    },\n    item: {\n      width: \"100%\",\n      flexBasis: \"100%\",\n    },\n    about: {\n      padding: theme.spacing(4),\n      \"& h3, h4\": {\n        [theme.breakpoints.up(\"sm\")]: {\n          paddingLeft: theme.spacing(4),\n        },\n      },\n      \"& p\": {\n        paddingLeft: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n          paddingLeft: theme.spacing(6),\n        },\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const handleSelectedStates = e => {\n    setSelectedStates({\n      ...selectedStates,\n      [e.target.name]: {\n        ...selectedStates[e.target.name],\n        selected: e.target.checked,\n      },\n    });\n  };\n\n  const handleSelectAllStates = e => {\n    const revisedStates = {};\n    Object.keys(selectedStates).forEach((s, i) => {\n      revisedStates[s] = {\n        ...selectedStates[s],\n        selected: true,\n      };\n    });\n    setSelectedStates(revisedStates);\n  };\n\n  const handleDeselectAllStates = e => {\n    const revisedStates = {};\n    Object.keys(selectedStates).forEach((s, i) => {\n      revisedStates[s] = {\n        ...selectedStates[s],\n        selected: false,\n      };\n    });\n    setSelectedStates(revisedStates);\n  };\n\n  useEffect(() => {\n    if (infoStates) {\n      setSelectedStates(infoStates);\n    }\n\n    return () => {\n      setSelectedStates(null);\n    };\n  }, [infoStates]);\n\n  return (\n    <Grid className={classes.container}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Grid item className={classes.item}>\n          <Navbar\n            style={{ width: \"100%\" }}\n            chartParams={chartParams}\n            setChartParams={setChartParams}\n            selectedStates={selectedStates}\n            setSelectedStates={setSelectedStates}\n            handleSelectedStates={handleSelectedStates}\n            handleSelectAllStates={handleSelectAllStates}\n            handleDeselectAllStates={handleDeselectAllStates}\n          />\n          <ChartCovidCompare\n            chartParams={chartParams}\n            selectedStates={selectedStates}\n            setSelectedStates={setSelectedStates}\n            wrapper={wrapper}\n            bounds={bounds}\n          />\n        </Grid>\n      </MuiPickersUtilsProvider>\n      <Grid item className={classes.about}>\n        <div>\n          <h1>About</h1>\n          <Divider />\n          <h2>Data</h2>\n          <p>\n            Data is from The New York Times, based on reports from state and\n            local health agencies.\n          </p>\n          <p>\n            \"Day of Outbreak\" is used to measure time instead of \"Date\". This is\n            to easily compare spread among each state.\n          </p>\n          <section>\n            <h2>Parameters</h2>\n            <p>\n              <strong>Cases/1000 - </strong> number of cases per 1000 people in\n              a state population\n            </p>\n            <p>\n              <strong>Total cases (log chart) - </strong> total number of cases.\n              Log chart is used to better illustrate change in number of cases.\n            </p>\n            <p>\n              <strong>New Cases - </strong> daily new cases by day of outbreak.\n            </p>\n          </section>\n          <section>\n            <h2>Notes</h2>\n            <p>\n              2/27 is earliest possible 'Day 1,' since prior cases were isolated\n              and may skew insights of \"community spread\"\n            </p>\n          </section>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AppCovidCompare;\n","import React from \"react\";\n\n// styles\nimport { IconButton, Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n    justifyContent: \"space-between\",\n    alignContent: \"center\",\n  },\n}));\n\nconst Footer = props => {\n  const classes = useStyles();\n  return (\n    <Toolbar className={classes.wrapper}>\n      <div>\n        <p>\n          <strong>You may freely share, but please credit the source:</strong>{\" \"}\n          Data is from the New York Times, based on reports from state and local\n          agencies.\n        </p>\n      </div>\n      <IconButton\n        href=\"https://github.com/stdyrm/covidcompare\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        <GitHubIcon />\n      </IconButton>\n    </Toolbar>\n  );\n};\n\nexport default Footer;\n","const wrapper = {\n  wrapperWidth: window.innerWidth * 0.9,\n  wrapperHeight: window.innerHeight * 0.9,\n  margin: {\n    top: 80,\n    right: window.innerWidth * 0.1,\n    bottom: 130,\n    left: window.innerWidth * 0.1,\n  },\n};\n\nconst bounds = {\n  width: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\n  height: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\n};\n\nexport { wrapper, bounds };\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst lightTheme = {\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#03a9f4\",\n      contrastText: \"#29293d\",\n    },\n    secondary: {\n      main: \"#ff9800\",\n    },\n    background: {\n      default: \"#fff\",\n      paper: \"#fff\",\n      light: \"#fff\",\n      dark: \"#fff\",\n    },\n    text: {\n      primary: \"#29293d\",\n    },\n  },\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#4db6ac\",\n    },\n    secondary: {\n      main: \"#ffa07a\",\n    },\n    background: {\n      default: \"#29293d\",\n      paper: \"#29293d\",\n      light: \"#493f5e\",\n      dark: \"#000018\",\n    },\n    text: {\n      primary: \"#fff\",\n    },\n  },\n};\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"ralewaymedium\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\",\"),\n  },\n  overrides: {\n    MuiInputBase: {\n      root: {\n        color: \"#fff\",\n        paddingLeft: 10,\n      },\n    },\n    MuiButton: {\n      root: {\n        transition: \"opacity .3s\",\n        \"&:hover\": {\n          backgroundColor: \"transparent\",\n          opacity: 0.7,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        transition: \"opacity .3s\",\n        \"&:hover\": {\n          backgroundColor: \"transparent\",\n          opacity: 0.7,\n        },\n      },\n    },\n  },\n});\n\nexport const getTheme = (theme, darkMode) => {\n  if (darkMode) {\n    return createMuiTheme({\n      ...theme,\n      palette: {\n        ...darkTheme.palette,\n      },\n    });\n  } else {\n    return createMuiTheme({\n      ...theme,\n      palette: {\n        ...lightTheme.palette,\n      },\n    });\n  }\n};\n","export const COLORS = [\n  \"#1b70fc\",\n  \"#faff16\",\n  \"#d50527\",\n  \"#158940\",\n  \"#f898fd\",\n  \"#24c9d7\",\n  \"#cb9b64\",\n  \"#866888\",\n  \"#22e67a\",\n  \"#e509ae\",\n  \"#9dabfa\",\n  \"#437e8a\",\n  \"#b21bff\",\n  \"#ff7b91\",\n  \"#94aa05\",\n  \"#ac5906\",\n  \"#82a68d\",\n  \"#fe6616\",\n  \"#7a7352\",\n  \"#f9bc0f\",\n  \"#b65d66\",\n  \"#07a2e6\",\n  \"#c091ae\",\n  \"#8a91a7\",\n  \"#88fc07\",\n  \"#ea42fe\",\n  \"#9e8010\",\n  \"#10b437\",\n  \"#c281fe\",\n  \"#f92b75\",\n  \"#07c99d\",\n  \"#a946aa\",\n  \"#bfd544\",\n  \"#16977e\",\n  \"#ff6ac8\",\n  \"#a88178\",\n  \"#5776a9\",\n  \"#678007\",\n  \"#fa9316\",\n  \"#85c070\",\n  \"#6aa2a9\",\n  \"#989e5d\",\n  \"#fe9169\",\n  \"#cd714a\",\n  \"#6ed014\",\n  \"#c5639c\",\n  \"#c23271\",\n  \"#698ffc\",\n  \"#678275\",\n  \"#c5a121\",\n  \"#a978ba\",\n  \"#ee534e\",\n  \"#d24506\",\n  \"#59c3fa\",\n  \"#ca7b0a\",\n  \"#6f7385\",\n  \"#9a634a\",\n  \"#48aa6f\",\n  \"#ad9ad0\",\n  \"#d7908c\",\n  \"#6a8a53\",\n  \"#8c46fc\",\n  \"#8f5ab8\",\n  \"#fd1105\",\n  \"#7ea7cf\",\n  \"#d77cd1\",\n  \"#a9804b\",\n  \"#0688b4\",\n  \"#6a9f3e\",\n  \"#ee8fba\",\n  \"#a67389\",\n  \"#9e8cfe\",\n  \"#bd443c\",\n  \"#6d63ff\",\n  \"#d110d5\",\n  \"#798cc3\",\n  \"#df5f83\",\n  \"#b1b853\",\n  \"#bb59d8\",\n  \"#1d960c\",\n  \"#867ba8\",\n  \"#18acc9\",\n  \"#25b3a7\",\n  \"#f3db1d\",\n  \"#938c6d\",\n  \"#936a24\",\n  \"#a964fb\",\n  \"#92e460\",\n  \"#a05787\",\n  \"#9c87a0\",\n  \"#20c773\",\n  \"#8b696d\",\n  \"#78762d\",\n  \"#e154c6\",\n  \"#40835f\",\n  \"#d73656\",\n  \"#1afd5c\",\n  \"#c4f546\",\n  \"#3d88d8\",\n  \"#bd3896\",\n  \"#1397a3\",\n  \"#f940a5\",\n  \"#66aeff\",\n  \"#d097e7\",\n  \"#fe6ef9\",\n  \"#d86507\",\n  \"#8b900a\",\n  \"#d47270\",\n  \"#e8ac48\",\n  \"#cf7c97\",\n  \"#cebb11\",\n  \"#718a90\",\n  \"#e78139\",\n  \"#ff7463\",\n  \"#bea1fd\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\n// data\nimport USStates from \"./data/us-states.csv\";\nimport STATE_INFO from \"./data/stateInfo.json\";\n\n// util\nimport { cleanStateInfo, importCSV } from \"./components/util\";\n\n// components\nimport AppGapminder from \"./components/appGapminder/AppGapminder\";\nimport AppCovidCompare from \"./components/appCovidCompare/AppCovidCompare\";\nimport Footer from \"./components/sharedComponents/Footer\";\n\nimport AppCounty from \"./components/appCounty/AppCounty\";\n\n// context\nimport { dataContext } from \"./context/dataContext\";\nimport { statesContext } from \"./context/statesContext\";\nimport { ThemeContext } from \"./context/ThemeContext\";\n\n// styles\nimport { wrapper, bounds } from \"./styles/dimensions\";\nimport { theme, getTheme } from \"./styles/theme\";\nimport { COLORS } from \"./styles/colors\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n  const [dataStates, setDataStates] = useState([]);\n  const [infoStates, setInfoStates] = useState(null);\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    cleanStateInfo(dataStates, STATE_INFO, COLORS).then(res =>\n      setInfoStates(res)\n    );\n  }, [dataStates]);\n\n  useEffect(() => {\n    importCSV(USStates, STATE_INFO).then(res => setDataStates(res));\n  }, []);\n\n  return (\n    <>\n      <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\n        <ThemeProvider theme={getTheme(theme, darkMode)}>\n          <CssBaseline />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <dataContext.Provider value={{ dataStates, setDataStates }}>\n\t\t\t\t\t\t\t<statesContext.Provider value={{ infoStates, setInfoStates }}>\n\t\t\t\t\t\t\t\t{/* <AppCounty /> */}\n                <Route\n                  path=\"/line-app\"\n                  className=\"line-app\"\n                  component={() => (\n                    <AppCovidCompare wrapper={wrapper} bounds={bounds} />\n                  )}\n                />\n                <Route\n                  path=\"/gapminder-app\"\n                  className=\"gapminder-app\"\n                  render={() => <AppGapminder />}\n                />\n                <Switch>\n                  <Redirect exact from=\"/\" to=\"/gapminder-app\" />\n                </Switch>\n                <Footer />\n              </statesContext.Provider>\n            </dataContext.Provider>\n          </MuiPickersUtilsProvider>\n        </ThemeProvider>\n      </ThemeContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/co-est2019-annres_csv.d1cf3d5c.csv\";"],"sourceRoot":""}