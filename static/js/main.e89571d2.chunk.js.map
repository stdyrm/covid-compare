{"version":3,"sources":["context/dataContext.js","context/statesContext.js","components/util/constants.js","components/util/MouseMove.js","components/chart/Line.js","components/chart/Footnotes.js","components/chart/ChartUSCompare.js","components/dataParams/BatchSelect.js","styles/colors.js","components/dataParams/Dashboard.js","components/dataParams/FilterBar.js","App.js","serviceWorker.js","index.js","data/us-states.csv"],"names":["dataContext","React","createContext","statesContext","date","dateFormatter","d3","dateParser","dimensions","width","window","innerWidth","height","margin","top","right","bottom","left","bounded","MouseMove","focus","overlay","linesStates","dataStates","useContext","selectedStates","xScale","domain","d","dayOfOutbreak","range","yScale","casesPerThousand","useEffect","on","x0","invert","this","bisectDate","Object","keys","sort","filter","s","selected","forEach","state","index","dataEachState","stateHTML","htmlFormat","i","dataEachStateRangeY","length","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","cases","select","attr","text","abbreviation","color","toFixed","Line","useState","setLinesStates","lineGenerator","x","y","linesObject","stateInfo","lastDayOfOutbreak","lastCasesPerThousand","lockdownDay","lockdown","lockdownDayDatum","line","lineLabelX","lineLabelY","lockdownMarkerX","lockdownMarkerY","xShift","yShift","append","style","map","key","id","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","r","cx","cy","className","fontSize","useStyles","makeStyles","root","textAlign","padding","marginLeft","marginRight","Footnotes","classes","ChartUSCompare","yAxisRef","useRef","xAxisRef","svgRef","boundsRef","current","yAxisGenerator","scale","xAxisGenerator","call","ref","textAnchor","transform","backgroundColor","maxWidth","paddingLeft","BatchSelect","setSelectedStates","anchorEl","setAnchorEl","selectedFilter","setSelectedFilter","Date","selectedDate","setDateChange","lockdownRef","handleClick","e","currentTarget","name","handleClose","filterCases","revisedStates","revisedOrder","a","b","latestCaseCount","revisedOrderToPopulation","population","target","reverse","filterLockdown","filterPopulation","Button","onClick","Menu","keepMounted","open","Boolean","onClose","MenuItem","DatePicker","variant","disableToolbar","autoOk","value","onChange","disableFuture","format","colors","Dashboard","handleChange","checked","timeParse","startsWith","nested","nest","entries","lastIndex","values","FormGroup","alignItems","FormControlLabel","label","control","IconButton","Typography","Divider","Checkbox","theme","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","palette","background","default","FilterBar","setOpen","AppBar","position","clsx","Toolbar","edge","ClickAwayListener","onClickAway","Drawer","anchor","paper","createMuiTheme","primary","secondary","contrastThreshold","typography","fontFamily","overrides","MuiMenu","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","daySelected","dayDisabled","App","setDataStates","USStates","then","data","fips","parseInt","deaths","includes","stateData","deathsPerThousand","console","log","minWidth","utils","DateFnsUtils","Provider","ThemeProvider","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.e89571d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst dataContext = React.createContext();\r\n\r\nexport { dataContext };","import React from 'react';\r\n\r\nconst statesContext = React.createContext();\r\n\r\nexport { statesContext };","import * as d3 from \"d3\";\r\n\r\nconst date = {\r\n  dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\r\n  dateParser: d3.timeParse(\"%m-%d-%y\"),\r\n};\r\n\r\nconst dimensions = {\r\n  width: window.innerWidth,\r\n  height: 750,\r\n  margin: {\r\n    top: 80,\r\n    right: 100,\r\n    bottom: 60,\r\n    left: 100,\r\n  },\r\n};\r\n\r\nconst bounded = {\r\n  width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\r\n  height: dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\r\n};\r\n\r\nexport { date, dimensions, bounded };\r\n","import { useEffect, useContext } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { statesContext } from '../../context/statesContext';\r\nimport { date, bounded } from '../util/constants';\r\n\r\nexport const MouseMove = ({ focus, overlay, linesStates }) => {\r\n    const { dataStates } = useContext(dataContext);\r\n    const { selectedStates } = useContext(statesContext);\r\n\r\n    const xScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.dayOfOutbreak)).range([0, bounded.width]);\r\n    const yScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.casesPerThousand)).range([bounded.height, 0]);\r\n\r\n    useEffect(() => {\r\n        if (overlay) {\r\n            overlay.on('mousemove', mousemove)\r\n        \r\n        function mousemove() {\r\n            let x0 = xScale.invert(d3.mouse(this)[0]);\r\n            const bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\r\n\r\n            Object.keys(selectedStates).sort()\r\n                .filter(s => selectedStates[s].selected === true)\r\n                .forEach((state, index) => {\r\n                    const dataEachState = dataStates.filter(d => d.state === state);\r\n                    const stateHTML = selectedStates[state].htmlFormat;\r\n                    const i = bisectDate(dataEachState, x0, 0);\r\n\r\n                    let dataEachStateRangeY = dataEachState[i] \r\n                        ? dataEachState[i].casesPerThousand \r\n                        : dataEachState[dataEachState.length - 1].casesPerThousand;\r\n                    let dataEachStateRangeX = dataEachState[i] \r\n                        ? dataEachState[i].dayOfOutbreak \r\n                        : dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                    let dataEachStateRangeDate = dataEachState[i] \r\n                        ? date.dateFormatter(dataEachState[i].date) \r\n                        : date.dateFormatter(dataEachState[dataEachState.length - 1].date);\r\n                    let dataEachStateRangeCases = dataEachState[i]\r\n                        ? dataEachState[i].cases \r\n                        : dataEachState[dataEachState.length - 1].cases;\r\n\r\n                    focus.select(`#circle-${stateHTML}`)\r\n                        .attr('cy', yScale(dataEachStateRangeY))\r\n                        .attr('cx', xScale(dataEachStateRangeX));\r\n\r\n                    focus.select(`#d-label-${stateHTML}`)\r\n                        .text(`${selectedStates[state].abbreviation} => ${dataEachStateRangeDate} (Day: ${dataEachStateRangeX})`)\r\n                        .attr('fill', selectedStates[state].color)\r\n\r\n                    focus.select(`#d-label-b-${stateHTML}`)\r\n                        .text(`${dataEachStateRangeCases} cases (${dataEachStateRangeY.toFixed(3)} per 1000)`)\r\n                        .attr('fill', selectedStates[state].color)\r\n                });\r\n            }\r\n        }\r\n    }, [linesStates]);\r\n    return null;\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// functions\r\nimport { MouseMove } from \"../util/MouseMove\";\r\n\r\n// data\r\nimport stateInfo from \"../../data/stateInfo.json\";\r\n\r\n// context\r\nimport { dataContext } from \"../../context/dataContext\";\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// constants\r\nimport { bounded } from \"../util/constants\";\r\n\r\nconst Line = ({ focus, overlay }) => {\r\n  const { selectedStates } = useContext(statesContext);\r\n  const { dataStates } = useContext(dataContext);\r\n  const [linesStates, setLinesStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (dataStates.length > 0) {\r\n      // Scales\r\n      const xScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(dataStates, (d) => d.dayOfOutbreak))\r\n        .range([0, bounded.width]);\r\n      const yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(dataStates, (d) => d.casesPerThousand))\r\n        .range([bounded.height, 0]);\r\n\r\n      // Lines\r\n      const lineGenerator = d3\r\n        .line()\r\n        .x((d) => xScale(d.dayOfOutbreak))\r\n        .y((d) => yScale(d.casesPerThousand));\r\n\r\n      const linesObject = {};\r\n\r\n      Object.keys(selectedStates)\r\n        .sort()\r\n        .filter((s) => selectedStates[s].selected === true)\r\n        .forEach((state, i) => {\r\n          const dataEachState = dataStates.filter((d) => d.state === state);\r\n          const stateHTML = stateInfo[state].htmlFormat;\r\n\r\n          // Line label placement\r\n          const lastDayOfOutbreak =\r\n            dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n          const lastCasesPerThousand =\r\n            dataEachState[dataEachState.length - 1].casesPerThousand;\r\n\r\n          // markers for lockdown date\r\n          const lockdownDate = selectedStates[state].lockdown;\r\n          const lockdownDay =\r\n            (lockdownDate - dataEachState[0].date) /\r\n              (24 * 60 * 60 * 10 * 10 * 10) +\r\n            1;\r\n          const lockdownDayDatum = dataEachState.filter(\r\n            (d) => d.dayOfOutbreak === lockdownDay\r\n          )[0];\r\n\r\n          if (lockdownDayDatum) {\r\n            linesObject[state] = {\r\n              line: lineGenerator(dataEachState),\r\n              lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n              lineLabelY: yScale(lastCasesPerThousand),\r\n              lockdownMarkerX: xScale(lockdownDay),\r\n              lockdownMarkerY: yScale(lockdownDayDatum.casesPerThousand),\r\n            };\r\n          } else {\r\n            linesObject[state] = {\r\n              line: lineGenerator(dataEachState),\r\n              lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n              lineLabelY: yScale(lastCasesPerThousand),\r\n            };\r\n          }\r\n\r\n          // for mousemove\r\n          let xShift = 0;\r\n          let yShift = 0;\r\n\r\n          if (i > 14) {\r\n            xShift += 200;\r\n            yShift = 15 * 40;\r\n          }\r\n\r\n          focus\r\n            .append(\"circle\")\r\n            .attr(\"id\", `circle-${stateHTML}`)\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", selectedStates[state].color)\r\n            .attr(\"stroke\", \"white\");\r\n\r\n          if (i < 30) {\r\n            focus\r\n              .append(\"text\")\r\n              .attr(\"id\", `d-label-${stateHTML}`)\r\n              .attr(\"x\", 10 + xShift)\r\n              .attr(\"y\", 10 + i * 40 - yShift)\r\n              .style(\"font-size\", 12);\r\n\r\n            focus\r\n              .append(\"text\")\r\n              .attr(\"id\", `d-label-b-${stateHTML}`)\r\n              .attr(\"x\", 10 + xShift)\r\n              .attr(\"y\", 25 + i * 40 - yShift)\r\n              .style(\"font-size\", 12);\r\n          }\r\n        });\r\n      setLinesStates(linesObject);\r\n    }\r\n  }, [dataStates, selectedStates]);\r\n\r\n  return (\r\n    <>\r\n      <MouseMove focus={focus} overlay={overlay} linesStates={linesStates} />\r\n      {dataStates.length > 0 ? (\r\n        Object.keys(linesStates)\r\n          .sort()\r\n          .map((state, i) => {\r\n            const stateHTML = stateInfo[state].htmlFormat;\r\n\r\n            return (\r\n              <g key={i} id={`bounds-render-${stateHTML}`}>\r\n                <path\r\n                  fill=\"none\"\r\n                  stroke={selectedStates[state].color}\r\n                  strokeWidth={2}\r\n                  strokeLinejoin=\"round\"\r\n                  strokeLinecap=\"round\"\r\n                  d={linesStates[state].line}\r\n                />\r\n                <circle\r\n                  id=\"line-marker-lockdown\"\r\n                  r={4}\r\n                  fill={\r\n                    linesStates[state].lockdownMarkerX\r\n                      ? selectedStates[state].color\r\n                      : \"none\"\r\n                  }\r\n                  cx={linesStates[state].lockdownMarkerX}\r\n                  cy={linesStates[state].lockdownMarkerY}\r\n                />\r\n                <text\r\n                  id={`line-label-${stateHTML}`}\r\n                  className=\"line-label\"\r\n                  x={linesStates[state].lineLabelX}\r\n                  y={linesStates[state].lineLabelY}\r\n                  fontSize={14}\r\n                >\r\n                  {selectedStates[state].abbreviation}\r\n                </text>\r\n              </g>\r\n            );\r\n          })\r\n      ) : (\r\n        <g></g>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Line };\r\n","import React from 'react';\r\n\r\n// constants\r\nimport { dimensions } from '../util/constants';\r\n\r\n// styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../../styles/styles.css';\r\n\r\nconst { margin } = dimensions;\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: '#f2ffcc',\r\n        textAlign: 'left',\r\n        padding: 0,\r\n        fontSize: 10,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right\r\n    }\r\n})\r\n\r\nconst Footnotes = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <p className={classes.root}>Line marking indicates day of lockdown order/advisory</p>\r\n            <p className={classes.root}>*Data from The New York Times, based on reports from state and local health agencies.</p>\r\n            <p className={classes.root}>*Population data from US Census Bureau (2019).</p>\r\n            <p className={classes.root}>*WA: although 2/27 is counted as 'Day 1,' WA had an isolated case on 1/21.</p>\r\n        </>\r\n    )\r\n};\r\n\r\nexport { Footnotes };","import React, { useContext, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// Components\r\nimport { Line } from './Line';\r\nimport { Footnotes } from './Footnotes';\r\n\r\n// Context\r\nimport { dataContext } from '../../context/dataContext';\r\n\r\n// constants\r\nimport { dimensions, bounded } from '../util/constants';\r\n\r\n// Styles\r\nimport '../../styles/styles.css';\r\n\r\nconst { width, height, margin } = dimensions;\r\n\r\nconst ChartUSCompare = () => {\r\n    const {dataStates} = useContext(dataContext);\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const svgRef = useRef(null);\r\n    const boundsRef = useRef(null);\r\n\r\n    const focus = d3.select(boundsRef.current).append('g')\r\n        .attr('class', 'focus')\r\n        .style('display', 'none');\r\n\r\n    const overlay = d3.select(boundsRef.current).append('rect')\r\n        .attr('class', 'overlay')\r\n        .attr('width', bounded.width)\r\n        .attr('height', bounded.height)\r\n        .on('mouseover', () => focus.style('display', null))\r\n        .on('mouseout', () => focus.style('display', 'none'));\r\n\r\n    useEffect(() => {\r\n        // Scales\r\n        const xScale = d3.scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n            .range([0, bounded.width]);\r\n        const yScale = d3.scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n            .range([bounded.height, 0]);\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n        d3.select(xAxisRef.current).call(xAxisGenerator);\r\n        d3.select(yAxisRef.current).call(yAxisGenerator);\r\n    }, [dataStates, window.innerWidth]);\r\n\r\n    return (\r\n        <div height={height} width={width}>\r\n            <svg height={height} width={width} ref={svgRef}>\r\n                <text\r\n                    className=\"title\"\r\n                    textAnchor=\"middle\"\r\n                    fill=\"gray\"\r\n                    transform={`translate (${margin.left + bounded.width / 2}, ${margin.top / 2})`}\r\n                >\r\n                    COVID-19 US State Comparison\r\n                </text>\r\n                <text \r\n                    className=\"axes-label\"\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${margin.left + bounded.width / 2}, ${bounded.height + margin.top + 40})`}\r\n                >\r\n                    Day of Outbreak\r\n                </text>\r\n                <text \r\n                    className=\"axes-label\" \r\n                    textAnchor=\"middle\" \r\n                    transform={`translate(${width - bounded.width - margin.right - 40}, ${bounded.height / 2}) rotate(-90)`}\r\n                >\r\n                    Cases per 1000 people\r\n                </text>\r\n                <g id=\"bounds\" transform={`translate(${margin.left}, ${margin.top})`} ref={boundsRef}>\r\n                    <g ref={yAxisRef} id=\"y-axis\" />\r\n                    <g ref={xAxisRef} id=\"x-axis\" transform={`translate(0,${bounded.height})`} />\r\n                    <Line focus={focus} overlay={overlay}/>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { ChartUSCompare };","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  date: {\r\n    backgroundColor: \"#29293d\",\r\n    maxWidth: 100,\r\n    paddingLeft: 10,\r\n  },\r\n});\r\n\r\nconst BatchSelect = () => {\r\n  const { selectedStates, setSelectedStates } = useContext(statesContext);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedFilter, setSelectedFilter] = useState(null);\r\n  const [selectedDate, setDateChange] = useState(new Date());\r\n  const lockdownRef = useRef(null);\r\n  const classes = useStyles();\r\n\r\n  const handleClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setSelectedFilter(e.currentTarget.name);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedFilter(null);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDateChange(e);\r\n  };\r\n\r\n  const filterCases = (e) => {\r\n    // top/bottom by total cases\r\n    // top/bottom by cases per 1000 people\r\n    const revisedStates = {};\r\n    const revisedOrder = Object.keys(selectedStates).sort(\r\n      (a, b) =>\r\n        selectedStates[b].latestCaseCount - selectedStates[a].latestCaseCount\r\n    );\r\n    const revisedOrderToPopulation = Object.keys(selectedStates).sort(\r\n      (a, b) =>\r\n        selectedStates[b].latestCaseCount / selectedStates[b].population -\r\n        selectedStates[a].latestCaseCount / selectedStates[a].population\r\n    );\r\n\r\n    if (e.target.id === \"cases-top-12\") {\r\n      revisedOrder.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-bottom-12\") {\r\n      revisedOrder.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-top-12-per-1000\") {\r\n      revisedOrderToPopulation.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-bottom-12-per-1000\") {\r\n      revisedOrderToPopulation.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  const filterLockdown = (e) => {\r\n    // before/after x date\r\n    // no current lockdown\r\n    const revisedStates = {};\r\n\r\n    if (e.target.id === \"all-with-lockdown\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < new Date() ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"all-without-lockdown\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < new Date() ? false : true,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  const filterPopulation = (e) => {\r\n    // above/below x population\r\n    const revisedStates = {};\r\n    const revisedOrder = Object.keys(selectedStates).sort(\r\n      (a, b) => selectedStates[b].population - selectedStates[a].population\r\n    );\r\n\r\n    if (e.target.id === \"population-top-12\") {\r\n      revisedOrder.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else {\r\n      revisedOrder.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const revisedStates = {};\r\n\r\n    if (lockdownRef.current === \"lockdown-before\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < selectedDate ? true : false,\r\n        };\r\n      });\r\n    } else if (lockdownRef.current === \"lockdown-after\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown > selectedDate ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <>\r\n      <Button id=\"filter-cases\" name=\"cases\" onClick={handleClick}>\r\n        Filter by Case Counts\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-cases-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"cases\")}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem id=\"cases-top-12\" onClick={filterCases}>\r\n          Highest 12 (total)\r\n        </MenuItem>\r\n        <MenuItem id=\"cases-bottom-12\" onClick={filterCases}>\r\n          Lowest 12 (total)\r\n        </MenuItem>\r\n        <MenuItem id=\"cases-top-12-per-1000\" onClick={filterCases}>\r\n          Highest 12 (per 1000)\r\n        </MenuItem>\r\n        <MenuItem id=\"cases-bottom-12-per-1000\" onClick={filterCases}>\r\n          Lowest 12 (per 1000)\r\n        </MenuItem>\r\n      </Menu>\r\n      <Button id=\"filter-lockdown\" name=\"lockdown\" onClick={handleClick}>\r\n        Filter by Lockdown Date\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-lockdown-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"lockdown\")}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem id=\"all-with-lockdown\" onClick={filterLockdown}>\r\n          All with lockdown\r\n        </MenuItem>\r\n        <MenuItem id=\"all-without-lockdown\" onClick={filterLockdown}>\r\n          All without lockdown\r\n        </MenuItem>\r\n        <MenuItem\r\n          id=\"lockdown-before\"\r\n          ref={lockdownRef}\r\n          onClick={(e) => (lockdownRef.current = e.currentTarget.id)}\r\n        >\r\n          Lockdown before:\r\n          <DatePicker\r\n            variant=\"inline\"\r\n            disableToolbar\r\n            autoOk\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            disableFuture={true}\r\n            format=\"MM/dd/yyyy\"\r\n            className={classes.date}\r\n          />\r\n        </MenuItem>\r\n        <MenuItem\r\n          id=\"lockdown-after\"\r\n          ref={lockdownRef}\r\n          onClick={(e) => (lockdownRef.current = e.currentTarget.id)}\r\n        >\r\n          Lockdown after:\r\n          <DatePicker\r\n            variant=\"inline\"\r\n            disableToolbar\r\n            autoOk\r\n            value={selectedDate}\r\n            onChange={(date) => setDateChange(date)}\r\n            disableFuture={true}\r\n            format=\"MM/dd/yyyy\"\r\n            className={classes.date}\r\n          />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <Button id=\"filter-population\" name=\"population\" onClick={handleClick}>\r\n        Filter by Total Population\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-population-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"population\")}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem id=\"population-top-12\" onClick={filterPopulation}>\r\n          Highest 12\r\n        </MenuItem>\r\n        <MenuItem id=\"population-bottom-12\" onClick={filterPopulation}>\r\n          Lowest 12\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { BatchSelect };\r\n","export const colors = [\r\n    \"AliceBlue\",\r\n    \"AntiqueWhite\",\r\n    \"Aquamarine\",\r\n    \"Azure\",\r\n    \"Beige\",\r\n    \"BlueViolet\",\r\n    \"Brown\",\r\n    \"BurlyWood\",\r\n    \"CadetBlue\",\r\n    \"Chartreuse\",\r\n    \"Chocolate\",\r\n    \"Aqua\",\r\n    \"Coral\",\r\n    \"Cornsilk\",\r\n    \"Crimson\",\r\n    \"Cyan\",\r\n    \"DeepPink\",\r\n    \"DeepSkyBlue\",\r\n    \"DodgerBlue\",\r\n    \"FireBrick\",\r\n    \"FloralWhite\",\r\n    \"ForestGreen\",\r\n    \"Fuchsia\",\r\n    \"Gainsboro\",\r\n    \"GhostWhite\",\r\n    \"Gold\",\r\n    \"GoldenRod\",\r\n    \"Green\",\r\n    \"GreenYellow\",\r\n    \"HoneyDew\",\r\n    \"HotPink\",\r\n    \"IndianRed\",\r\n    \"Ivory\",\r\n    \"Lavender\",\r\n    \"LavenderBlush\",\r\n    \"LawnGreen\",\r\n    \"LemonChiffon\",\r\n    \"LightBlue\",\r\n    \"LightCoral\",\r\n    \"LightCyan\",\r\n    \"LightGoldenRodYellow\",\r\n    \"LightGray\",\r\n    \"LightGrey\",\r\n    \"LightGreen\",\r\n    \"LightPink\",\r\n    \"LightSalmon\",\r\n    \"LightSeaGreen\",\r\n    \"LightSkyBlue\",\r\n    \"LightSlateGray\",\r\n    \"LightSlateGrey\",\r\n    \"LightSteelBlue\",\r\n    \"LightYellow\",\r\n    \"Lime\",\r\n    \"LimeGreen\",\r\n    \"Linen\",\r\n    \"Magenta\",\r\n    \"Maroon\",\r\n    \"MediumAquaMarine\",\r\n    \"MediumBlue\",\r\n    \"MediumOrchid\",\r\n    \"MediumPurple\",\r\n    \"MediumSeaGreen\",\r\n    \"MediumSlateBlue\",\r\n    \"MediumSpringGreen\",\r\n    \"MediumTurquoise\",\r\n    \"MediumVioletRed\",\r\n    \"MidnightBlue\",\r\n    \"MintCream\",\r\n    \"MistyRose\",\r\n    \"Moccasin\",\r\n    \"NavajoWhite\",\r\n    \"Navy\",\r\n    \"OldLace\",\r\n    \"Olive\",\r\n    \"OliveDrab\",\r\n    \"Orange\",\r\n    \"OrangeRed\",\r\n    \"Orchid\",\r\n    \"PaleGoldenRod\",\r\n    \"PaleGreen\",\r\n    \"PaleTurquoise\",\r\n    \"PaleVioletRed\",\r\n    \"PapayaWhip\",\r\n    \"PeachPuff\",\r\n    \"Peru\",\r\n    \"Pink\",\r\n    \"Plum\",\r\n    \"PowderBlue\",\r\n    \"Purple\",\r\n    \"RebeccaPurple\",\r\n    \"Red\",\r\n    \"RosyBrown\",\r\n    \"RoyalBlue\",\r\n    \"SaddleBrown\",\r\n    \"Salmon\",\r\n    \"SandyBrown\",\r\n    \"SeaGreen\",\r\n    \"SeaShell\",\r\n    \"Sienna\",\r\n    \"Silver\",\r\n    \"SkyBlue\",\r\n    \"SlateBlue\",\r\n    \"SlateGray\",\r\n    \"SlateGrey\",\r\n    \"Snow\",\r\n    \"SpringGreen\",\r\n    \"SteelBlue\",\r\n    \"Tan\",\r\n    \"Teal\",\r\n    \"Thistle\",\r\n    \"Tomato\",\r\n    \"Turquoise\",\r\n    \"Violet\",\r\n    \"Wheat\",\r\n    \"White\",\r\n    \"WhiteSmoke\",\r\n    \"Yellow\",\r\n    \"YellowGreen\",\r\n  ];","import React, { useContext, useEffect } from 'react';\r\nimport { timeParse, nest } from 'd3';\r\nimport { IconButton, FormControlLabel, FormGroup, Checkbox, Typography, Divider } from '@material-ui/core';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { statesContext } from '../../context/statesContext';\r\n\r\n// data\r\nimport stateInfo from '../../data/stateInfo.json';\r\n\r\n// styles\r\nimport { colors } from '../../styles/colors';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst Dashboard = () => {\r\n    const {dataStates} = useContext(dataContext);\r\n    const {selectedStates, setSelectedStates} = useContext(statesContext);\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedStates({\r\n            ...selectedStates,\r\n            [e.target.name]: {\r\n                ...selectedStates[e.target.name],\r\n                selected: e.target.checked\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelectAll = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: true\r\n            }\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    const handleDeselectAll = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: false\r\n            }\r\n         });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // clean stateInfo data and assign selectedStates\r\n        const dateParser = timeParse('%m-%d-%y');\r\n        const revisedStates = {};\r\n\r\n        Object.keys(stateInfo).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...stateInfo[s],\r\n                lockdown: stateInfo[s].lockdown.startsWith(\"none\") ? stateInfo[s].lockdown : dateParser(stateInfo[s].lockdown),\r\n                color: colors[i],\r\n            }\r\n        });\r\n\r\n        const nested = nest()\r\n            .key(d => d.state)\r\n            .entries(dataStates);\r\n\r\n        Object.keys(nested).forEach(i => {\r\n            const s = nested[i].key;\r\n\r\n            const lastIndex = nested[i].values.length - 1;\r\n            const latestCaseCount = nested[i].values[lastIndex].cases;\r\n            revisedStates[s] = {\r\n                ...revisedStates[s],\r\n                latestCaseCount: latestCaseCount\r\n            };\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    }, [dataStates]);\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup style={{alignItems: 'left', backgroundColor: '#29293d'}}>\r\n                <FormControlLabel\r\n                id=\"select-all\"\r\n                label=\"Select All\"\r\n                name=\"Select All\"\r\n                onClick={handleSelectAll} \r\n                control={\r\n                    <IconButton \r\n                        id='selector-all' \r\n                        name=\"select-all\"\r\n                        style={{color: 'green'}}\r\n                    >\r\n                        <CheckIcon />\r\n                    </IconButton>\r\n                }\r\n                />\r\n                <FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAll}  \r\n                    control={\r\n                        <IconButton \r\n                            id='deselector-all' \r\n                            name=\"deselect-all\"\r\n                            style={{color: 'red'}}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                /><br />\r\n                <Typography variant=\"h6\">Selected</Typography>\r\n                <Divider style={{backgroundColor: \"white\"}} />\r\n                {selectedStates\r\n                    ? Object.keys(selectedStates).sort()\r\n                        .filter(s => selectedStates[s].selected === true)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i} \r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleChange}\r\n                                    control={<Checkbox name={state} style={{color: selectedStates[state].color}}/>}\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`} \r\n                                />\r\n                            )\r\n                        })\r\n                    : <div />\r\n                }<br />\r\n                <Typography variant=\"h6\">Not Selected</Typography>\r\n                <Divider style={{backgroundColor: \"white\"}} />\r\n                {selectedStates\r\n                    ? Object.keys(selectedStates).sort()\r\n                        .filter(s => selectedStates[s].selected === false)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i} \r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleChange}\r\n                                    control={<Checkbox name={state} style={{color: selectedStates[state].color}}/>}\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`} \r\n                                />\r\n                            )\r\n                        })\r\n                    : <div />\r\n                }\r\n            </FormGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Dashboard };","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  ClickAwayListener,\r\n  Drawer,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { BatchSelect } from \"./BatchSelect\";\r\nimport { Dashboard } from \"./Dashboard\";\r\n\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#000018\",\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: \"#ffffff\",\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 1,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    backgroundColor: theme.palette.background.default,\r\n  }\r\n}));\r\n\r\nconst FilterBar = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickAway = (e) => {\r\n    if (e.x > drawerWidth && e.y > 70 && open) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"relative\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuOutlinedIcon />\r\n          </IconButton>\r\n          <BatchSelect />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ClickAwayListener onClickAway={handleClickAway}>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton color=\"inherit\" edge=\"end\" onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <Dashboard />\r\n        </Drawer>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FilterBar };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// data\r\nimport USStates from \"./data/us-states.csv\";\r\nimport stateInfo from \"./data/stateInfo.json\";\r\n\r\n// components\r\nimport { ChartUSCompare } from \"./components/chart/ChartUSCompare\";\r\nimport { FilterBar } from \"./components/dataParams/FilterBar\";\r\nimport { Footnotes } from \"./components/chart/Footnotes\";\r\n\r\n// context\r\nimport { dataContext } from \"./context/dataContext\";\r\nimport { statesContext } from \"./context/statesContext\";\r\n\r\n// styles\r\nimport './styles/styles.css';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#29293d\",\r\n    },\r\n    text: {\r\n      primary: \"#fff\",\r\n      secondary: \"#f2ffcc\",\r\n    },\r\n    contrastThreshold: 3,\r\n  },\r\n  typography: {\r\n    fontFamily: \"Raleway, Arial\",\r\n  },\r\n  overrides: {\r\n    MuiMenu: {\r\n      paper: {\r\n        backgroundColor: \"#29293d\"\r\n      },\r\n    },\r\n    MuiPickersCalendarHeader: {\r\n      switchHeader: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      day: {\r\n        color: \"#29293d\",\r\n      },\r\n      daySelected: {\r\n        backgroundColor: \"#29293d\",\r\n      },\r\n      dayDisabled: {\r\n        color: \"#29293d\",\r\n      },\r\n      current: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [dataStates, setDataStates] = useState([]);\r\n  const [selectedStates, setSelectedStates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // get COVID-19 state data\r\n    d3.csv(USStates).then((data) => {\r\n      // clean data\r\n      const dateParser = d3.timeParse(\"%Y-%m-%d\");\r\n\r\n      data.forEach((d) => {\r\n        d.date = dateParser(d.date);\r\n        d.fips = parseInt(d.fips);\r\n        d.cases = parseInt(d.cases);\r\n        d.deaths = parseInt(d.deaths);\r\n      });\r\n\r\n      // Filter data:\r\n      // Prior to 02-27-20, Washington had 1 or 2 cases from January.\r\n      // However, these were isolated cases and this graph is trying to track Covid-19 spread\r\n      // Also filter out territories Guam, Puerto Rico, etc.\r\n      data = data.filter(\r\n        (d) =>\r\n          d.date > new Date(2020, 1, 26) &&\r\n          Object.keys(stateInfo).includes(d.state)\r\n      );\r\n\r\n      // Normalize data:\r\n      // Add \"dayOfOutbreak\" to show elapsed time\r\n      // Add state population\r\n      // Add \"casesPerThousand\" and \"deathsPerThousand\"\r\n      Object.keys(stateInfo).forEach((state) => {\r\n        const stateData = data.filter((d) => d.state === state);\r\n        stateData.forEach((d) => {\r\n          d.dayOfOutbreak =\r\n            (d.date - stateData[0].date) / (24 * 60 * 60 * 10 * 10 * 10) + 1; // day - day one, convert ms to days\r\n          d.casesPerThousand = (d.cases / stateInfo[state].population) * 1000;\r\n          d.deathsPerThousand = (d.deaths / stateInfo[state].population) * 1000;\r\n        });\r\n      });\r\n      setDataStates(data);\r\n      console.log(\"imported dataset\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div minWidth=\"sm\">\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <dataContext.Provider value={{ dataStates, setDataStates }}>\r\n          <statesContext.Provider value={{ selectedStates, setSelectedStates }}>\r\n            <ThemeProvider theme={theme}>\r\n              <FilterBar className=\"header\" />\r\n              <ChartUSCompare className=\"chart\" />\r\n              <Footnotes />\r\n            </ThemeProvider>\r\n          </statesContext.Provider>\r\n        </dataContext.Provider>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/us-states.886e81a3.csv\";"],"sourceRoot":""}