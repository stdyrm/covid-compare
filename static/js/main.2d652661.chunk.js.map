{"version":3,"sources":["data/us-states.csv","components/Footnotes.js","components/appGapminder/appParams.js","context/dataContext.js","context/statesContext.js","context/selectionContext.js","components/appGapminder/chart/CirclesGapminder.js","components/appGapminder/interface/OpacitySlider.js","components/appGapminder/interface/DayCounterSlider.js","components/appGapminder/chart/ChartGapminder.js","components/appGapminder/pickers/FilterRegion.js","components/appGapminder/pickers/FilterGovernor.js","components/appGapminder/pickers/FilterPopulation.js","components/appGapminder/pickers/FilterGdp.js","components/appGapminder/pickers/FilterBatch.js","components/appGapminder/FilterDashboard.js","components/appGapminder/pickers/ParamPicker.js","components/appGapminder/interface/Navbar.js","components/appGapminder/gapminderData.js","components/appGapminder/styles/dimensions.js","components/appGapminder/AppGapminder.js","components/util/constants.js","components/util/MouseMove.js","components/appCovidCompare/chart/Line.js","components/appCovidCompare/chart/ChartCovidCompare.js","components/appCovidCompare/components/FilterValues.js","components/appCovidCompare/pickers/FilterCases.js","components/appCovidCompare/pickers/FilterPopulation.js","components/appCovidCompare/components/FilterCategories.js","components/appCovidCompare/pickers/FilterRegion.js","components/appCovidCompare/pickers/BatchSelect.js","components/appCovidCompare/pickers/Dashboard.js","components/appCovidCompare/interface/Navbar.js","components/appCovidCompare/appParams.js","components/appCovidCompare/AppCovidCompare.js","styles/dimensions.js","styles/theme.js","styles/colors.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footnotes","props","darkMode","setDarkMode","classes","makeStyles","theme","rootGrid","maxWidth","window","innerWidth","margin","footerButton","color","palette","text","secondary","marginRight","useStyles","useTheme","pathArray","location","href","split","queryID","length","Grid","container","className","item","Tooltip","title","placement","IconButton","onClick","saveSvgAsPng","document","querySelector","backgroundColor","background","default","encoderOptions","fonts","url","format","chartParams","chartType","toTimestamp","multiple","normalize","xParam","output","type","selected","alt1","options","yParam","zParam","cParam","tParam","dataContext","React","createContext","statesContext","selectionContext","CirclesGapminder","data","dayCounter","selector","scales","opacityNotSel","xScale","yScale","colorScale","infoStates","useContext","selectedCircles","setSelectedCircles","circlesRef","useRef","circle","stroke","opacity","circleSelected","strokeWidth","circleLabel","fill","primary","fontSize","bisectDay","d3","left","dataAt","day","map","d","state","region","valueAt","values","i","a","b","t","useEffect","current","selectAll","join","sort","attr","htmlFormat","includes","call","append","casesPerThousand","toFixed","cases","toLocaleString","deathsPerThousand","deaths","on","mouseOverCircle","style","mouseOutCircle","notSelected","filter","s","label","abbreviation","ref","OpacitySlider","setOpacityNotSel","Typography","variant","Slider","id","value","valueLabelDisplay","step","min","max","onChange","e","newVal","DayCounterSlider","setDayCounter","cParamCategories","division","governor","ChartGapminder","wrapper","bounds","wrapperWidth","wrapperHeight","width","height","dataStates","useState","setScales","mqSmall","useMediaQuery","breakpoints","down","rootSVG","display","position","verticalAlign","overflow","chartWrapper","top","axes","legend","fontWeight","sliderContainer","flexDirection","justifyContent","alignItems","slider","boundsRef","yAxisRef","xAxisRef","legendRef","domain","range","yAxisGenerator","scale","xAxisGenerator","axis","enter","transition","duration","update","exit","remove","renderChart","viewBox","transform","regionOptions","name","chartParam","FilterRegion","forwardRef","handleFilter","anchorEl","setAnchorEl","handleMenu","currentTarget","MenuItem","dense","marginLeft","Menu","open","Boolean","onClose","o","key","FilterGovernor","FilterPopulation","nStates","populationOptions","n","FilterGdp","gdpOptions","button","chipContainer","listStyle","main","chip","contrastText","padding","spacing","FilterBatch","filters","handleDeleteFilter","handleFilters","currSelection","forEach","newFilter","filtered","Object","keys","handleFilterCategories","slice","handleFilterValues","prevState","all","Button","MenuList","Paper","component","f","Chip","size","onDelete","dashboard","dashboardTitle","dashboardDivider","marginBottom","filterBatch","FilterDashboard","setFilters","setNStates","handleChange","target","FormGroup","FormControlLabel","control","TextField","InputProps","inputProps","defaultValue","Divider","deletedFilter","newFilterList","checked","Checkbox","rootContainer","minWidth","filterSelector","filterMenuItem","ParamPicker","handleSelector","p","FormControl","InputLabel","Select","root","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","tab","menuItem","Navbar","setOpen","handleDrawer","handleParamMenu","AppBar","clsx","Toolbar","edge","disableRipple","List","ClickAwayListener","onClickAway","x","y","Drawer","anchor","paper","gapminderData","stateInfo","newData","eachState","push","innerHeight","right","bottom","AppGapminder","setData","setSelector","navbar","then","res","Provider","param","date","dateFormatter","dateParser","dimensions","MouseMove","focus","overlay","linesStates","selectedStates","dayOfOutbreak","x0","invert","this","bisectDate","dataEachState","stateHTML","dataEachStateRangeY","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","frozen","select","Line","mqMedium","up","mqLarge","setLinesStates","filterStates","statesObject","lineGenerator","linesObject","lastDayOfOutbreak","lastCasesPerThousand","lockdownDay","lockdown","lockdownDayDatum","line","lineLabelX","lineLabelY","lockdownMarkerX","lockdownMarkerY","xShift","yShift","strokeLinejoin","strokeLinecap","r","cx","cy","fontFamily","ChartCovidCompare","axisLabel","footnotes","svgRef","textAnchor","FilterValues","filterOptions","handleSelectedFilter","FilterCases","FilterCategories","BatchSelect","setSelectedStates","selectedFilter","setSelectedFilter","newSelectedFilter","newSelection","info","aria-controls","aria-haspopup","Dashboard","handleSelectedStates","handleSelectAllStates","handleDeselectAllStates","handleFilterMenu","labelParams","chartTitle","xLabel","yLabel","AppCovidCompare","mqOrientPortrait","flexBasis","utils","DateFnsUtils","revisedStates","createMuiTheme","contrastThreshold","typography","overrides","MuiFormControlLabel","textColor","MuiButton","MuiBase","MuiInputBase","paddingLeft","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","daySelected","dayDisabled","getTheme","input","colors","App","setDataStates","setInfoStates","startsWith","lockdownEnd","nested","entries","lastIndex","latestCaseCount","latestCaseCountPerThou","population","USStates","fips","parseInt","Date","stateData","mortalityRate","console","log","ThemeProvider","CssBaseline","path","render","exact","from","to","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,uC,8lcCU9BC,EAAY,SAAAC,GAAU,IACvBC,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,YAYZC,EAVYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,SAAU,CACNC,SAAUC,OAAOC,WAC1BC,OAAQ,UAEHC,aAAc,CACVC,MAAOP,EAAMQ,QAAQC,KAAKC,UAC1BC,YAAa,WAGLC,GACVZ,EAAQa,cAERC,EAAYX,OAAOY,SAASC,KAAKC,MAAM,KACvCC,EAAO,WAAOJ,EAAUA,EAAUK,OAAS,IAkBjD,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWxB,EAAQG,UAC/B,kBAACmB,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CAASC,MAAM,sBAAsBC,UAAU,SAC3C,kBAACC,EAAA,EAAD,CACIC,QArBF,WACdC,uBAAaC,SAASC,cAAcb,GAAU,qBAAsB,CAChEc,gBAAiBhC,EAAMQ,QAAQyB,WAAWC,QAC1CC,eAAgB,EAChBC,MAAO,CACH,CACIC,IACI,yDACJC,OAAQ,wBACR7B,KACI,uOAYAa,UAAWxB,EAAQQ,cAEnB,kBAAC,IAAD,SAIZ,kBAACc,EAAA,EAAD,CAAMG,MAAI,GACN,kBAACC,EAAA,EAAD,CAASC,MAAM,0BAA0BC,UAAU,SAC/C,kBAACC,EAAA,EAAD,CACIC,QAAS,kBAAM/B,GAAaD,IAC5B0B,UAAWxB,EAAQQ,cAEnB,kBAAC,IAAD,W,QC/DXiC,EAAc,CAC1BC,UAAW,SACXC,YAAa,KACbC,UAAU,EACVC,WAAW,EACXC,OAAQ,CACPC,OAAQ,SACRC,KAAM,SACNR,OAAQ,OACRS,SAAU,mBACVC,KAAM,QACNC,QAAS,CACR,mBACA,QACA,oBACA,WAGFC,OAAQ,CACPL,OAAQ,SACRC,KAAM,SACNR,OAAQ,OACRS,SAAU,oBACVC,KAAM,SACNC,QAAS,CACR,mBACA,QACA,oBACA,WAGFE,OAAQ,CACPN,OAAQ,cACRC,KAAM,SACNR,OAAQ,OACRS,SAAU,aACVE,QAAS,CACR,aACA,oBACA,MACA,SAGFG,OAAQ,CACPP,OAAQ,iBACRC,KAAM,cACNC,SAAU,SACVE,QAAS,CACR,SACA,WACA,aAGFI,OAAQ,CACPR,OAAQ,OACRC,KAAM,OACNC,SAAU,gBACVE,QAAS,CACR,gBACA,UCzDGK,EAAcC,IAAMC,gB,QCApBC,EAAgBF,IAAMC,gBCAfE,EAAmBH,IAAMC,gBCQzBG,EAAmB,SAAChE,GAAW,IACnCiE,EAAsDjE,EAAtDiE,KAAMC,EAAgDlE,EAAhDkE,WAAYC,EAAoCnE,EAApCmE,SAAUC,EAA0BpE,EAA1BoE,OAAQC,EAAkBrE,EAAlBqE,cACpCpB,EAAmCkB,EAAnClB,OAAQM,EAA2BY,EAA3BZ,OAAQC,EAAmBW,EAAnBX,OAAQC,EAAWU,EAAXV,OACxBa,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,WAGhBC,EAAeC,qBAAWZ,GAA1BW,WANkC,EAOMC,qBAAWX,GAAnDY,EAPkC,EAOlCA,gBAAiBC,EAPiB,EAOjBA,mBACnBC,EAAaC,iBAAO,MAkBpB3E,EAfYC,aAAW,SAACC,GAAD,MAAY,CACxC0E,OAAQ,CACPC,OAAQ,OACRC,QAASZ,GAEVa,eAAgB,CACfF,OAAQ,UACRG,YAAa,EACbF,QAAS,IAEVG,YAAa,CACZC,KAAMhF,EAAMQ,QAAQC,KAAKwE,QACzBC,SAAU,YAGItE,GACVZ,EAAQa,cAERsE,EAAYC,KAAY,0CAAYC,KAE1C,SAASC,EAAOC,GACf,OAAO3B,EAAK4B,KAAI,SAAAC,GAAC,gBAChBC,MAAOD,EAAEC,MACTC,OAAQF,EAAEE,QAFM,cAGf/C,EAAOG,SAAW6C,EAAQH,EAAE7C,EAAOG,UAAWwC,IAH/B,cAIfrC,EAAOH,SAAW6C,EAAQH,EAAEvC,EAAOH,UAAWwC,IAJ/B,KAQlB,SAASK,EAAQC,EAAQN,GACxB,IAAMO,EAAIX,EAAUU,EAAQN,EAAK,EAAGM,EAAO1E,OAAS,GAC9C4E,EAAIF,EAAOC,GAEjB,GAAIA,EAAI,EAAG,CACV,IAAME,EAAIH,EAAOC,EAAI,GACfG,GAAKV,EAAMQ,EAAE,KAAOC,EAAE,GAAKD,EAAE,IACnC,OAAOA,EAAE,IAAM,EAAIE,GAAKD,EAAE,GAAKC,EAEhC,OAAOF,EAAE,GA6HV,OA1HAG,qBAAU,WACT,GAAItC,EAAM,CACT,IAAMc,EAASU,IAAUZ,EAAW2B,SAASC,UAAU,UACtDxC,KAAK0B,EAAOzB,IAAa,SAAA4B,GAAC,OAAIA,KAC9BY,KAAK,UAEJC,MAAK,SAACP,EAAEC,GAAH,OAASZ,IAAchB,EAAW2B,EAAEL,OAAOvC,EAAOJ,UAAWqB,EAAW4B,EAAEN,OAAOvC,EAAOJ,cAC7FwD,KAAK,KAAK,SAAAd,GAAC,MAAwB,eAApBtC,EAAOJ,SACpBqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IACnB,sBAApBI,EAAOJ,SACPqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IACnB,QAApBI,EAAOJ,SACPqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IACvC,KAEFwD,KAAK,MAAM,SAAAd,GAAC,OAAIxB,EAAOwB,EAAE7C,EAAOG,cAChCwD,KAAK,MAAM,SAAAd,GAAC,OAAIvB,EAAOuB,EAAEvC,EAAOH,cAChCwD,KAAK,QAAQ,SAAAd,GAAC,OAAItB,EAAWC,EAAWqB,EAAEC,OAAOtC,EAAOL,cACxDwD,KAAK,MAAM,SAAAd,GAAC,uBAAcrB,EAAWqB,EAAEC,OAAOc,eAC9CD,KAAK,SAAS,SAAAd,GAAC,OACfnB,EAAgBvB,SAAS0D,SAAShB,EAAEC,OACjC5F,EAAQ+E,eACR/E,EAAQ4E,UAEXgC,MAAK,SAAAhC,GAAM,OAAIA,EACdiC,OAAO,SACPlG,MAAK,SAAAgF,GAAC,MAAI,CACVA,EAAEC,MADQ,cAEH7B,GACa,qBAApBjB,EAAOG,SAAP,sBACkB0C,EAAEmB,kBAAoBnB,EAAEmB,iBAAiBC,QAAQ,IAC5C,UAApBjE,EAAOG,SAAP,iBACU0C,EAAEqB,OAASrB,EAAEqB,MAAMC,kBACT,sBAApBnE,EAAOG,SAAP,uBACgB0C,EAAEuB,mBAAqBvB,EAAEuB,kBAAkBH,QAAQ,IAC/C,WAApBjE,EAAOG,SAAP,kBACW0C,EAAEwB,QAAUxB,EAAEwB,OAAOF,kBAChC,QACiB,qBAApB7D,EAAOH,SAAP,sBACkB0C,EAAEmB,kBAAoBnB,EAAEmB,iBAAiBC,QAAQ,IAC5C,UAApB3D,EAAOH,SAAP,iBACU0C,EAAEqB,OAASrB,EAAEqB,MAAMC,kBACT,sBAApB7D,EAAOH,SAAP,uBACgB0C,EAAEuB,mBAAqBvB,EAAEuB,kBAAkBH,QAAQ,IAC/C,WAApB3D,EAAOH,SAAP,kBACW0C,EAAEwB,QAAUxB,EAAEwB,OAAOF,kBAChC,SACDV,KAAK,YAIV3B,EAAOwC,GAAG,aAAa,SAAAzB,GACtB,IAAM0B,EAAkB/B,IAAA,kBAAqBhB,EAAWqB,EAAEC,OAAOc,cAC3C,IAAlBxC,GAAuBM,EAAgBvB,SAAS0D,SAAShB,EAAEC,SAC9DyB,EACEZ,KAAK,SAAU,WACfa,MAAM,UAAW,IACjBA,MAAM,SAAU,WAChBA,MAAM,eAAgB,MAI1B1C,EAAOwC,GAAG,YAAY,SAAAzB,GACrB,IAAM4B,EAAiBjC,IAAA,kBAAqBhB,EAAWqB,EAAEC,OAAOc,aAC5DlC,EAAgBgD,YAAYb,SAAShB,EAAEC,QAC1C2B,EACED,MAAM,UAAWpD,GACjBoD,MAAM,SAAU,WAIpB1C,EAAOwC,GAAG,SAAS,SAAAzB,GACdnB,EAAgBvB,SAAS0D,SAAShB,EAAEC,QACvCnB,EAAmB,eACfD,EADc,CAEjBvB,SAAUuB,EAAgBvB,SAASwE,QAAO,SAAAC,GAAC,OAAIA,IAAM/B,EAAEC,SACvD4B,YAAY,GAAD,mBAAMhD,EAAgBgD,aAAtB,CAAmC7B,EAAEC,WAEjDN,IAAA,kBAAqBhB,EAAWqB,EAAEC,OAAOc,aACvCY,MAAM,UAAWpD,GACjBoD,MAAM,SAAU,UAElB7C,EAAmB,eACfD,EADc,CAEjBvB,SAAS,GAAD,mBAAMuB,EAAgBvB,UAAtB,CAAgC0C,EAAEC,QAC1C4B,YAAahD,EAAgBgD,YAAYC,QAAO,SAAAC,GAAC,OAAIA,IAAM/B,EAAEC,YAE9DN,IAAA,kBAAqBhB,EAAWqB,EAAEC,OAAOc,aACvCY,MAAM,UAAW,IACjBA,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAINhC,IAAUZ,EAAW2B,SAASC,UAAU,QAC1DxC,KAAK0B,EAAOzB,IAAa,SAAA4B,GAAC,OAAIA,KAC9BY,KAAK,QACJK,MAAK,SAAAe,GACL,IAAMtG,EAAS,SAAAsE,GACd,MAAwB,eAApBtC,EAAOJ,SACHqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IAChB,sBAApBI,EAAOJ,SACVqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IAChB,QAApBI,EAAOJ,SACVqB,EAAWqB,EAAEC,OAAOvC,EAAOJ,UAAY,IAEvC,GAGT0E,EACElB,KAAK,KAAK,SAAAd,GAAC,OAAIxB,EAAOwB,EAAE7C,EAAOG,WAAa5B,EAAOsE,MACnDc,KAAK,KAAK,SAAAd,GAAC,OAAIvB,EAAOuB,EAAEvC,EAAOH,WAAa5B,EAAOsE,SAErDc,KAAK,WAAW,SAAAd,GAAC,OAAInB,EAAgBvB,SAAS0D,SAAShB,EAAEC,OACvD,GACA,KACFa,KAAK,QAASzG,EAAQiF,aACtBwB,KAAK,SAAU,gBACf9F,MAAK,SAAAgF,GAAC,OAAIrB,EAAWqB,EAAEC,OAAOgC,mBAEhC,CAAC7D,EAAYC,EAAUC,EAAQO,EAAiBN,EAAehE,IAGjE,oCACC,uBAAG2H,IAAKnD,M,kBCvLEoD,EAAgB,SAACjI,GAAW,IAChCqE,EAAoCrE,EAApCqE,cAAe6D,EAAqBlI,EAArBkI,iBAEvB,OACC,oCACC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,wBACA,kBAACC,EAAA,EAAD,CACCC,GAAG,iBACHC,MAAOlE,EACPmE,kBAAkB,OAClBC,KAAM,GACNC,IAAK,EACLC,IAAK,EACLC,SAAU,SAACC,EAAGC,GAAJ,OAAeZ,EAAiBY,QCbjCC,EAAmB,SAAC/I,GAAW,IACnCkE,EAA8BlE,EAA9BkE,WAAY8E,EAAkBhJ,EAAlBgJ,cAEpB,OACC,oCACC,kBAACb,EAAA,EAAD,CAAYC,QAAQ,WAApB,mBACA,kBAACC,EAAA,EAAD,CACCC,GAAG,qBACHC,MAAOrE,EACPsE,kBAAkB,OAClBC,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,SAAU,SAACC,EAAGC,GAAJ,OAAeE,EAAcF,Q,SCDrCG,EAAmB,CACrBjD,OAAQ,CAAC,YAAa,UAAW,QAAS,QAC1CkD,SAAU,CACN,cACA,eACA,qBACA,qBACA,iBACA,qBACA,qBACA,WACA,WAEJC,SAAU,CAAC,aAAc,WAAY,QAG5BC,EAAiB,SAAApJ,GAAU,IAC5BiE,EAAoCjE,EAApCiE,KAAME,EAA8BnE,EAA9BmE,SAAUkF,EAAoBrJ,EAApBqJ,QAASC,EAAWtJ,EAAXsJ,OACzBrG,EAA2BkB,EAA3BlB,OAAQM,EAAmBY,EAAnBZ,OAAQE,EAAWU,EAAXV,OAChB8F,EAAwCF,EAAxCE,aAAcC,EAA0BH,EAA1BG,cAAe9I,EAAW2I,EAAX3I,OAChC+I,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OAEJC,EAAejF,qBAAWf,GAA1BgG,WAN2B,EAOPC,mBAAS,MAPF,mBAO5BxF,EAP4B,KAOpByF,EAPoB,OAQFD,mBAAS,GARP,mBAQ/B1F,EAR+B,KAQnB8E,EARmB,OASIY,mBAAS,IATb,mBAS/BvF,EAT+B,KAShB6D,EATgB,KAWhC7H,EAAQa,cACR4I,EAAUC,YAAc1J,EAAM2J,YAAYC,KAAK,OAsC5C9J,EArCSC,aAAW,SAAAC,GAAK,MAAK,CACtC6J,QAAS,CACRC,QAAS,eACTC,SAAU,WACVX,MAAO,OACPY,cAAe,SACfC,SAAU,UAEXC,aAAc,CACbJ,QAAS,eACTC,SAAU,WACVI,IAAK,EACL9E,KAAM,GAEP4D,OAAQ,CACPG,MAAOA,EACPC,OAAQA,GAETe,KAAM,CACL7J,MAAOP,EAAMQ,QAAQC,KAAKwE,SAE3BoF,OAAQ,CACPC,WAAY,IACZpF,SAAU,SAEXqF,gBAAiB,CAChBC,cAAe,kBAAOf,EAAU,SAAW,OAC3CgB,eAAgB,kBAAMhB,EAAU,SAAW,iBAC3CvJ,SAAUkJ,EACV/I,OAAQ,SACRqK,WAAY,UAEbC,OAAQ,CACPvB,MAAO,kBAAMK,EAAU,MAAQ,WAId7I,GAEVgK,EAAYnG,iBAAO,MACnBoG,EAAWpG,iBAAO,MAClBqG,EAAWrG,iBAAO,MAClBsG,EAAYtG,iBAAO,MA+HzB,OAZAyB,qBAAU,WACFoD,GAlHY,WAChB,IAQInF,EAREF,EAASmB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAE7C,EAAOG,cAC3CkI,MAAM,CAAC,EAAG7B,IACTlF,EAASkB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAEvC,EAAOH,cAC3CkI,MAAM,CAAC5B,EAAQ,IAGI,WAApBjG,EAAOL,SACPoB,EAAaiB,MAER4F,OAAOpC,EAAiBjD,QACxBsF,MAAM7F,KACgB,aAApBhC,EAAOL,SACdoB,EAAaiB,MAER4F,OAAOpC,EAAiBC,UACxBoC,MAAM7F,KACgB,aAApBhC,EAAOL,WACdoB,EAAaiB,MAER4F,OAAOpC,EAAiBE,UACxBmC,MAAM,CAAC,UAAW,UAAW,aAGtCzB,EAAU,CACNvF,OAAQA,EACRC,OAAQA,EACRC,WAAYA,IAIhB,IAAM+G,EAAiB9F,MAAc+F,MAAMjH,GACrCkH,EAAiBhG,MAAgB+F,MAAMlH,GAE/BmB,IACF0F,EAAS3E,SAChBO,KAAK0E,GACL1E,MAAK,SAAA2E,GAAI,OAAIA,EAAK1E,OAAO,QAAQJ,KAAK,QAAS,aAG/CH,UAAU,WACVxC,KAAKhB,EAAOG,UAAU,SAAA0C,GAAC,OAAIA,KAC3BY,KAAK,QACLE,KAAK,IAAK6C,GACV7C,KAAK,IAAK,IACVA,KAAK,QAAS,UACdA,KAAK,cAAe,OACpBA,KAAK,OAAQ,SACb9F,KAAKmC,EAAOG,UAEHqC,IACFyF,EAAS1E,SAChBO,KAAKwE,GACLxE,MAAK,SAAA2E,GAAI,OAAIA,EAAK1E,OAAO,QAAQJ,KAAK,QAAS,aAG/CH,UAAU,WACVxC,KAAKV,EAAOH,UAAU,SAAA0C,GAAC,OAAIA,KAC3BY,KAAK,QACLE,KAAK,IAAK,GACVA,KAAK,KAAM,IACXA,KAAK,QAAS,UACdA,KAAK,cAAe,OACpBA,KAAK,YAAa,eAClBA,KAAK,OAAQ,SACb9F,KAAKyC,EAAOH,UAGjBqC,IAAU2F,EAAU5E,SACfC,UAAU,QACVxC,KAAKgF,EAAiBxF,EAAOL,WAAW,SAAA0C,GAAC,OAAIA,KAC7CY,MACG,SAAAiF,GAAK,OACDA,EACK3E,OAAO,QACPJ,KAAK,IAAK,QACVA,KAAK,KAAM,KACXA,KAAK,QAAQ,SAAAd,GAAC,OAAItB,EAAWsB,MAC7Bc,KAAK,cAAe,SACpB9F,MAAK,SAAAgF,GAAC,OAAIA,KACViB,MAAK,SAAA4E,GAAK,OACPA,EACKC,aACAC,SAAS,KACTjF,KAAK,KAAK,SAACd,EAAGK,GAAJ,OAAoB,GAATuD,EAAc,GAAKvD,WAEzD,SAAA2F,GAAM,OACFA,EACK9E,OAAO,QACPJ,KAAK,QAAQ,SAAAd,GAAC,OAAItB,EAAWsB,MAC7Bc,KAAK,cAAe,SACpBA,KAAK,IAAK,IACV9F,MAAK,SAAAgF,GAAC,OAAIA,KACViB,MAAK,SAAA+E,GAAM,OAAIA,EAAOF,aAAaC,SAAS,WACrD,SAAAE,GAAI,OACAA,EACKnF,KAAK,OAAQ,QACbA,KAAK,cAAe,SACpB9F,MAAK,SAAAgF,GAAC,OAAIA,KACViB,MAAK,SAAAgF,GAAI,OACNA,EACKH,aACAC,SAAS,KACTjF,KAAK,IAAK,GACVoF,eAOrBC,KAEL,CAACtC,EAAYxF,IAEhBoC,qBAAU,WACZd,IAAU,oBACRiB,KAAK,QACL5F,KAFF,cAEcoD,MACT,CAACA,IAGA,oCACL,6BACC,yBACCoE,GAAG,gBACHoB,OAAQF,EACRC,MAAOF,EACP5H,UAAWxB,EAAQ+J,QACnBgC,QAAO,cAAS3C,EAAT,YAAyBC,IAEhC,uBACCxB,IAAKiD,EACLtJ,UAAWxB,EAAQmJ,OACnB6C,UAAS,oBAAezL,EAAOgF,KAAtB,aAA+BhF,EAAO8J,IAAtC,MAET,uBACCxC,IAAKmD,EACLgB,UAAS,uBAAkBzC,EAAlB,KACT/H,UAAWxB,EAAQsK,OAEpB,uBAAGzC,IAAKkD,EAAUvJ,UAAWxB,EAAQsK,OACrC,uBACCzC,IAAKoD,EACLe,UAAS,uBAAkBzC,EAAlB,KACT/H,UAAWxB,EAAQuK,SAEnBzG,GAAQG,EACR,kBAAC,EAAD,iBACKpE,EADL,CAECoE,OAAQA,EACRF,WAAYA,EACZG,cAAeA,KAGhB,wCAKK,kBAAC5C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWxB,EAAQyK,iBAC/B,kBAACnJ,EAAA,EAAD,CAAMG,MAAI,EAACD,UAAWxB,EAAQ6K,QACzC,kBAAC,EAAD,CACC9G,WAAYA,EACZ8E,cAAeA,KAGjB,kBAACvH,EAAA,EAAD,CAAMG,MAAI,EAACD,UAAWxB,EAAQ6K,QAC7B,kBAAC,EAAD,CACC3G,cAAeA,EACf6D,iBAAkBA,Q,uFC7PlBkE,EAAgB,CACrB,CAAC9D,GAAI,YAAa+D,KAAM,YAAalJ,KAAM,SAAUmJ,WAAY,UACjE,CAAChE,GAAI,UAAW+D,KAAM,UAAWlJ,KAAM,SAAUmJ,WAAY,UAC7D,CAAChE,GAAI,QAAS+D,KAAM,QAASlJ,KAAM,SAAUmJ,WAAY,UACzD,CAAChE,GAAI,OAAQ+D,KAAM,OAAQlJ,KAAM,SAAUmJ,WAAY,WAG3CC,EAAeC,sBAAW,SAACxM,EAAOgI,GAAS,IAC/CyE,EAAiBzM,EAAjByM,aAEAhI,EAAeC,qBAAWZ,GAA1BW,WAH8C,EAItBmF,mBAAS,MAJa,mBAI/C8C,EAJ+C,KAIrCC,EAJqC,KAMhDC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAG3B,OACC,kBAACC,EAAA,EAAD,CAAUxE,GAAG,aAAaN,IAAKA,EAAK+E,OAAO,EAAM9K,QAAS2K,GAA1D,SAEC,kBAAC,IAAD,CAAkBnF,MAAO,CAACuF,WAAY,UACtC,kBAACC,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,eAAhBT,EAASpE,IAClC8E,QAASR,GAERnI,GACG2H,EAAcvG,KAAI,SAAAwH,GACpB,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNrG,QAAS,kBAAMwK,EAAaY,IAC5BD,QAASR,GAERS,EAAEhB,cCnCLD,EAAgB,CACrB,CAAC9D,GAAI,WAAY+D,KAAM,WAAYlJ,KAAM,WAAYmJ,WAAY,YACjE,CAAChE,GAAI,aAAc+D,KAAM,aAAclJ,KAAM,WAAYmJ,WAAY,aAIzDiB,GAAiBf,sBAAW,SAACxM,EAAOgI,GAAS,IACjDyE,EAAiBzM,EAAjByM,aAEAhI,EAAeC,qBAAWZ,GAA1BW,WAHgD,EAIxBmF,mBAAS,MAJe,mBAIjD8C,EAJiD,KAIvCC,EAJuC,KAMlDC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAG3B,OACC,kBAACC,EAAA,EAAD,CAAUxE,GAAG,eAAeyE,OAAO,EAAM9K,QAAS2K,GAAlD,aAEC,kBAAC,IAAD,CAAkBnF,MAAO,CAACuF,WAAY,UACtC,kBAACC,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,iBAAhBT,EAASpE,IAClC8E,QAASR,GAERnI,GACG2H,EAAcvG,KAAI,SAAAwH,GACpB,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNrG,QAAS,kBAAMwK,EAAaY,IAC5BD,QAASR,GAERS,EAAEhB,cCrCEmB,GAAmBhB,sBAAW,SAACxM,EAAOgI,GAAS,IACnDyE,EAA0BzM,EAA1ByM,aAAcgB,EAAYzN,EAAZyN,QADoC,EAG1B7D,mBAAS,MAHiB,mBAGnD8C,EAHmD,KAGzCC,EAHyC,KAKpDC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAGrBa,EAAoB,CACzB,CAACpF,GAAI,WAAY+D,KAAK,OAAD,OAASoB,EAAT,iBAAiCtK,KAAM,OAAQmJ,WAAY,aAAc3F,KAAM,aAAcgH,EAAGF,GACrH,CAACnF,GAAI,UAAW+D,KAAK,UAAD,OAAYoB,EAAZ,iBAAoCtK,KAAM,OAAQmJ,WAAY,aAAc3F,KAAM,YAAagH,EAAGF,GACtH,CAACnF,GAAI,mBAAoB+D,KAAK,OAAD,OAASoB,EAAT,mBAAmCtK,KAAM,OAAQmJ,WAAY,oBAAqB3F,KAAM,aAAcgH,EAAGF,GACtI,CAACnF,GAAI,kBAAmB+D,KAAK,UAAD,OAAYoB,EAAZ,mBAAsCtK,KAAM,OAAQmJ,WAAY,oBAAqB3F,KAAM,YAAagH,EAAGF,IAGxI,OACC,kBAACX,EAAA,EAAD,CAAUxE,GAAG,UAAUyE,OAAO,EAAM9K,QAAS2K,GAA7C,aAEC,kBAAC,IAAD,CAAkBnF,MAAO,CAACuF,WAAY,UACtC,kBAACC,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,YAAhBT,EAASpE,IAClC8E,QAASR,GAERc,EAAkB7H,KAAI,SAAAwH,GACtB,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNrG,QAAS,kBAAMwK,EAAaY,IAC5BD,QAASR,GAERS,EAAEhB,cCjCGuB,GAAYpB,sBAAW,SAACxM,EAAOgI,GAAS,IAC5CyE,EAA0BzM,EAA1ByM,aAAcgB,EAAYzN,EAAZyN,QAD6B,EAGnB7D,mBAAS,MAHU,mBAG5C8C,EAH4C,KAGlCC,EAHkC,KAK7CC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAGrBgB,EAAa,CAClB,CAACvF,GAAI,WAAY+D,KAAK,OAAD,OAASoB,EAAT,eAA+BtK,KAAM,MAAOmJ,WAAY,MAAO3F,KAAM,aAAcgH,EAAGF,GAC3G,CAACnF,GAAI,UAAW+D,KAAK,UAAD,OAAYoB,EAAZ,eAAkCtK,KAAM,MAAOmJ,WAAY,MAAO3F,KAAM,YAAagH,EAAGF,IAG7G,OACC,kBAACX,EAAA,EAAD,CAAUxE,GAAG,UAAUyE,OAAO,EAAM9K,QAAS2K,GAA7C,MAEE,kBAAC,IAAD,CAAkBnF,MAAO,CAACuF,WAAY,UAEvC,kBAACC,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,YAAhBT,EAASpE,IAClC8E,QAASR,GAERiB,EAAWhI,KAAI,SAAAwH,GACf,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNrG,QAAS,kBAAMwK,EAAaY,IAC5BD,QAASR,GAERS,EAAEhB,c,wCCrBJpL,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCyN,OAAQ,CACJ,UAAW,CACPzL,gBAAiB,gBAGzB0L,cAAe,CACXC,UAAW,OACX3L,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,MAE3CC,KAAM,CACRtN,MAAOP,EAAMQ,QAAQyE,QAAQ2I,KACvB5L,gBAAiBhC,EAAMQ,QAAQyE,QAAQ6I,aACvCC,QAAS/N,EAAMgO,QAAQ,IACvB3N,OAAQL,EAAMgO,QAAQ,IACtB9I,SAAU,aAIL+I,GAAc,SAAAtO,GAAU,IAE7BuO,EAIAvO,EAJAuO,QACAC,EAGAxO,EAHAwO,mBACA/B,EAEAzM,EAFAyM,aACAgB,EACAzN,EADAyN,QAEI7I,EAAuBF,qBAC3BX,GADIa,mBAGAH,EAAeC,qBAAWZ,GAA1BW,WAVwB,EAWAmF,mBAAS,MAXT,mBAWzB8C,EAXyB,KAWfC,EAXe,KAY1BxM,EAAUc,KAEV2L,EAAa,SAAA/D,GAC4B8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBA4BxB4B,EAAgB,WAClB,IAAIrL,EAAW,GACXsL,EAAgB,GACpBH,EAAQI,SAAQ,SAAC7I,EAAGK,GACD,WAAXL,EAAE3C,MAAgC,aAAX2C,EAAE3C,KACzBuL,EA9BmB,SAAAE,GAC3B,IAAMC,EAAWC,OAAOC,KAAKtK,GAAYmD,QACrC,SAAAC,GAAC,OAAIpD,EAAWoD,GAAG+G,EAAUtC,cAAgBsC,EAAUvC,QAI3D,OADAM,EAAY,MACLkC,EAwBiBG,CAAuBlJ,GACrB,SAAXA,EAAE3C,MAA8B,QAAX2C,EAAE3C,OAC9BuL,EAvBe,SAAAE,GACvB,IAAMjB,EAAIiB,EAAUjB,EACdkB,EAAWC,OAAOC,KAAKtK,GACxBkC,MAAK,SAACP,EAAGC,GAAJ,MACiB,eAAnBuI,EAAUjI,KACJlC,EAAW4B,GAAGuI,EAAUtC,YACxB7H,EAAW2B,GAAGwI,EAAUtC,YACxB7H,EAAW2B,GAAGwI,EAAUtC,YACxB7H,EAAW4B,GAAGuI,EAAUtC,eAEjC2C,MAAM,EAAGtB,GAGd,OADAhB,EAAY,MACLkC,EAUiBK,CAAmBpJ,IAGvC1C,EACIA,EAAS5B,OAAS,EACZkN,EACAA,EAAc9G,QAAO,SAAAC,GAAC,OAAIzE,EAAS0D,SAASe,SAG1DjD,GAAmB,SAAAuK,GAAS,sBACrBA,EADqB,CAExB/L,SAAUA,EACVuE,YAAawH,EAAUC,IAAIxH,QAAO,SAAAC,GAAC,OAAKzE,EAAS0D,SAASe,YAclE,OAVAtB,qBAAU,WACNgI,EAAQ/M,OAAS,EACXiN,IACA7J,GAAmB,SAAAuK,GAAS,sBACrBA,EADqB,CAExB/L,SAAU,GACVuE,YAAawH,EAAUC,WAElC,CAACb,IAGA,oCACI,kBAACc,GAAA,EAAD,CACI/G,GAAG,gBACHrG,QAAS2K,EACTjL,UAAWxB,EAAQ2N,QAHvB,aAMI,kBAAC,IAAD,CAAkBrG,MAAO,CAAEuF,WAAY,WAG3C,kBAACC,EAAA,EAAD,CACIP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,kBAAhBT,EAASpE,IAClC8E,QAASR,GAErB,kBAAC0C,GAAA,EAAD,KACC,kBAAC,EAAD,CAAc7C,aAAcA,IAC5B,kBAACc,GAAD,CAAgBd,aAAcA,IAC9B,kBAAC,GAAD,CAAkBA,aAAcA,EAAcgB,QAASA,IACvD,kBAACG,GAAD,CAAWnB,aAAcA,EAAcgB,QAASA,MAIzC,kBAAC8B,GAAA,EAAD,CAAOC,UAAU,KAAK7N,UAAWxB,EAAQ4N,eACpCQ,EAAQ/M,OAAS,EACd+M,EAAQ1I,KAAI,SAAA4J,GACR,OACI,wBAAInC,IAAKmC,EAAEnH,IACP,kBAACoH,GAAA,EAAD,CACIC,KAAK,QACLhO,UAAWxB,EAAQ+N,KACnBpG,MAAO2H,EAAEpD,KACTuD,SAAU,kBAAMpB,EAAmBiB,UAMnD,kBAACtH,EAAA,EAAD,sB,oBClIdlH,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCwP,UAAW,CACP9E,WAAY,OACZ1I,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,KACvCrN,MAAOP,EAAMQ,QAAQC,KAAKwE,SAEjCwK,eAAgB,CACflP,MAAOP,EAAMQ,QAAQyE,QAAQ6I,aAC7BxD,WAAY,IACZpF,SAAU,UAEXwK,iBAAkB,CACjB1N,gBAAiBhC,EAAMQ,QAAQyE,QAAQ6I,aACvC6B,aAAc,SAEfC,YAAa,CACZnF,eAAgB,aAChBlK,MAAOP,EAAMQ,QAAQC,KAAKwE,aAIf4K,GAAkB,SAAClQ,GAAW,IAAD,EACU0E,qBAAWX,GAAnDY,EAD8B,EAC9BA,gBAAiBC,EADa,EACbA,mBACtBzE,EAAUc,KACVZ,EAAQa,cAH2B,EAKX0I,mBAAS,IALE,mBAKlC2E,EALkC,KAKzB4B,EALyB,OAMXvG,mBAAS,IANE,mBAMlC6D,EANkC,KAMzB2C,EANyB,KAQhCC,EAAe,SAAAxH,GACjB,IAAM9C,EAAQ8C,EAAEyH,OAAOjE,KAEnB1H,EAAgBvB,SAAS0D,SAASf,GAClCnB,EAAmB,eACZD,EADW,CAEdvB,SAAUuB,EAAgBvB,SAASwE,QAAO,SAAA9B,GAAC,OAAIA,IAAMC,KACrD4B,YAAY,GAAD,mBAAMhD,EAAgBgD,aAAtB,CAAmC5B,OAGlDnB,EAAmB,eACZD,EADW,CAEdvB,SAAS,GAAD,mBAAMuB,EAAgBvB,UAAtB,CAAgC2C,IACxC4B,YAAahD,EAAgBgD,YAAYC,QACrC,SAAA9B,GAAC,OAAIA,IAAMC,SA4B3B,OACI,oCACI,kBAACwK,EAAA,EAAD,CAAW5O,UAAWxB,EAAQ0P,WACtC,kBAACW,EAAA,EAAD,CACgBlI,GAAG,eACHR,MAAM,eACNuE,KAAK,eACLpK,QAhBU,WAC5BkO,EAAW,IACLvL,GAAmB,SAAAuK,GAAS,sBACrBA,EADqB,CAExB/L,SAAU,GACVuE,YAAawH,EAAUC,UAYfqB,QACI,kBAACzO,EAAA,EAAD,CACIsG,GAAG,iBACH+D,KAAK,eACL5E,MAAO,CAAE7G,MAAO,QAEhB,kBAAC,KAAD,SAGV,6BAEd,kBAAC8P,EAAA,EAAD,CACCpI,GAAG,WACHF,QAAQ,WACRuH,KAAK,QACLxM,KAAK,SACL2E,MAAM,kBACN6I,WAAY,CACXC,WAAY,CACXlI,IAAK,EACLC,IAAK,KAGPkI,aAAcpD,EACd7E,SAAU,SAACC,GAAD,OAAOuH,EAAWvH,EAAEyH,OAAO/H,UAGtC,kBAACJ,EAAA,EAAD,CAAYxG,UAAWxB,EAAQ2P,gBAA/B,WAGA,kBAACgB,EAAA,EAAD,CAASnP,UAAWxB,EAAQ4P,mBAC5B,kBAAC,GAAD,CACCpO,UAAWxB,EAAQ8P,YACnBxC,QAASA,EACT2C,WAAYA,EACZ7B,QAASA,EACT4B,WAAYA,EACZ3B,mBA3DuB,SAAAuC,GACpB,IAAMC,EAAgBzC,EAAQ3G,QAAO,SAAA6H,GAAC,OAAIA,EAAEnH,KAAOyI,EAAczI,MACjE6H,EAAWa,IA0DdvE,aApEiB,SAACmC,GACjBL,EAAQ/M,OAAS,EACpB2O,GAAW,SAAAhB,GAAS,4BAAQA,GAAR,CAAmBP,OAEvCuB,EAAW,CAACvB,OAmEC,kBAACzG,EAAA,EAAD,CAAYxG,UAAWxB,EAAQ2P,gBAA/B,YAGA,kBAACgB,EAAA,EAAD,CAASnP,UAAWxB,EAAQ4P,mBAC3BpL,EAAgBvB,SACbuB,EAAgBvB,SAASuD,OAAOd,KAAI,SAACE,EAAOI,GACxC,OACI,kBAACqK,EAAA,EAAD,CACIlD,IAAKnH,EACLkG,KAAMtG,EACNkL,QAAStM,EAAgBvB,SAAS0D,SAC9Bf,GAEJ6C,SAAUyH,EACVI,QAAS,kBAACS,EAAA,EAAD,CAAU7E,KAAMtG,EAAO0B,MAAO,CAAC7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,gBACrErG,MAAO/B,OAKnB,8BAEJ,6BAEA,kBAACoC,EAAA,EAAD,CAAYxG,UAAWxB,EAAQ2P,gBAA/B,gBAGA,kBAACgB,EAAA,EAAD,CAASnP,UAAWxB,EAAQ4P,mBAC3BpL,EAAgBgD,YACbhD,EAAgBgD,YAAYhB,OAAOd,KAAI,SAACE,EAAOI,GAC3C,OACI,kBAACqK,EAAA,EAAD,CACIlD,IAAKnH,EACLkG,KAAMtG,EACNkL,QAAStM,EAAgBvB,SAAS0D,SAC9Bf,GAEJ6C,SAAUyH,EACVI,QAAS,kBAACS,EAAA,EAAD,CAAU7E,KAAMtG,EAAO0B,MAAO,CAAC7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,gBACrErG,MAAO/B,OAKnB,iC,8BClLd9E,GAAYb,aAAW,SAACC,GAAD,MAAY,CACxC8Q,cAAe,CACd5Q,SAAU,IACV6Q,SAAU,IACVtG,eAAgB,eAChBsD,QAAS,EACT1N,OAAQ,GAET2Q,eAAgB,CACTD,SAAU,IACVzG,WAAY,IACZpF,SAAU,SAEd+L,eAAgB,CACZ1Q,MAAOP,EAAMQ,QAAQC,KAAKwE,QAC1BqF,WAAY,IACZpF,SAAU,aAILgM,GAAc,SAACvR,GAAW,IAC9BmE,EAA6BnE,EAA7BmE,SAAUqN,EAAmBxR,EAAnBwR,eACZnR,EAAQa,cAER4I,EAAUC,YAAc1J,EAAM2J,YAAYC,KAAK,OAC/C9J,EAAUc,KAEb,OACF,kBAACQ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWxB,EAAQgR,cAAe1J,MAAOqC,EACtD,CAACe,cAAe,SAAUE,WAAY,UACtC,CAACF,cAAe,QAERiE,OAAOC,KAAK5K,GAAU0B,KAAI,SAAC4L,GACxB,OACI,kBAACC,GAAA,EAAD,CAAapE,IAAKnJ,EAASsN,GAAGvO,QAC1B,kBAACyO,GAAA,EAAD,KAAaxN,EAASsN,GAAGvO,QACzB,kBAAC0O,GAAA,EAAD,CACIvF,KAAMoF,EACNlJ,MAAOpE,EAASsN,GAAGrO,SACnBwF,SAAU4I,EACV7P,UAAWxB,EAAQkR,gBAElBlN,EAASsN,GAAGnO,QAAQuC,KAAI,SAACwH,GACtB,OACI,kBAACP,EAAA,EAAD,CACIQ,IAAKD,EACL9E,MAAO8E,EACP1L,UAAWxB,EAAQmR,gBAElBjE,a,sJC5BnCpM,GAAYb,aAAW,SAACC,GAAD,MAAY,CACrCwR,KAAM,CACF1H,QAAS,QAEb2H,OAAQ,CACVzP,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,KACjCrN,MAAOP,EAAMQ,QAAQyE,QAAQ6I,aAC7BvC,WAAYvL,EAAM0R,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ5R,EAAM0R,YAAYE,OAAOC,MACjCrG,SAAUxL,EAAM0R,YAAYlG,SAASsG,iBAG7CC,YAAa,CACT3I,MAAM,eAAD,OAfO,IAeP,OACLuD,WAhBY,IAiBZpB,WAAYvL,EAAM0R,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ5R,EAAM0R,YAAYE,OAAOI,QACjCxG,SAAUxL,EAAM0R,YAAYlG,SAASyG,kBAG7CC,WAAY,CACR3R,MAAOP,EAAMQ,QAAQyE,QAAQ6I,aAC7B,UAAW,CACP9L,gBAAiB,gBAGzBmQ,KAAM,CACFrI,QAAS,QAEbsI,OAAQ,CACJhJ,MAhCY,IAiCZiJ,WAAY,GAEhBC,YAAa,CACTlJ,MApCY,KAsChBmJ,aAAa,aACTzI,QAAS,OACTY,WAAY,SACZqD,QAAS/N,EAAMgO,QAAQ,EAAG,IACvBhO,EAAMwS,OAAOC,QAJR,CAKRhI,eAAgB,WAChBzI,gBAAiBhC,EAAMQ,QAAQyB,WAAWC,UAE9CwQ,IAAK,CACD9N,QAAS,IAEb+N,SAAU,CACN/N,QAAS,GACT,UAAW,CACPA,QAAS,GAEnB6N,QAAS,CACR3I,QAAS,OACTW,eAAgB,mBAKNmI,GAAS,SAACjT,GAAW,IACtBiE,EAAmCjE,EAAnCiE,KAAME,EAA6BnE,EAA7BmE,SAAUqN,EAAmBxR,EAAnBwR,eADK,EAGR5H,oBAAS,GAHD,mBAGzBsD,EAHyB,KAGnBgG,EAHmB,OAIAtJ,mBAAS,MAJT,mBAIzB8C,EAJyB,KAIfC,EAJe,KAMvBxM,EAAUc,KACVZ,EAAQa,cACX4I,EAAUC,YAAc1J,EAAM2J,YAAYC,KAAK,OAE5CkJ,EAAe,WACjBD,GAAShG,IAGVkG,EAAkB,SAACvK,GACmB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBASxB,OACI,oCACI,kBAACwG,GAAA,EAAD,CACIjJ,SAAS,WACTzI,UAAW2R,YAAKnT,EAAQ2R,OAAT,eACV3R,EAAQiS,YAAclF,KAG3B,kBAACqG,GAAA,EAAD,CAAS5R,UAAWxB,EAAQ2S,SACxB,kBAAC9Q,EAAA,EAAD,CACIC,QAASkR,EACTK,KAAK,QACLC,eAAa,EACb9R,UAAW2R,YACPnT,EAAQoS,WACRrF,GAAQ/M,EAAQqS,OAGpB,kBAAC,KAAD,CAAU7Q,UAAWxB,EAAQoS,cAE/CzI,EACE,8BACA,kBAACjI,EAAA,EAAD,CAASC,MAAM,oBACd,kBAACE,EAAA,EAAD,CACCsG,GAAG,iBACH3G,UAAWxB,EAAQoS,WACnBtQ,QAASmR,GAET,kBAAC,KAAD,QAGF,kBAACnG,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,mBAAhBT,EAASpE,IAClC8E,QAASgG,GAET,kBAACM,GAAA,EAAD,KACC,kBAAC,GAAD,CACCzP,KAAMA,EACNE,SAAUA,EACVqN,eAAgBA,OAKnB,kBAAC,GAAD,CACDvN,KAAMA,EACNE,SAAUA,EACVqN,eAAgBA,IAGlB,0BAAM/J,MAAO,CAACuF,WAAY,SACzB,kBAACnL,EAAA,EAAD,CAASC,MAAM,cACd,kBAACE,EAAA,EAAD,CAAYwN,UAAU,IAAInO,KAAK,2BAA2BM,UAAWxB,EAAQoS,YAC5E,kBAAC,KAAD,QAGF,kBAAC1Q,EAAA,EAAD,CAASC,MAAM,mBACd,kBAACE,EAAA,EAAD,CAAYwN,UAAU,IAAInO,KAAK,gCAAgCM,UAAWxB,EAAQoS,YACjF,kBAAC,KAAD,UAKQ,kBAACoB,GAAA,EAAD,CAAmBC,YAtEP,SAAC/K,GACjBA,EAAEgL,EAhFM,KAgFahL,EAAEiL,EAAI,IAAM5G,GACjCgG,GAAQ,KAqEA,kBAACa,GAAA,EAAD,CACIpS,UAAWxB,EAAQsS,OACnBrK,QAAQ,aACR4L,OAAO,OACP9G,KAAMA,EACN/M,QAAS,CACL8T,MAAO9T,EAAQwS,cAGnB,yBACIhR,UAAWxB,EAAQyS,aACnBnL,MAAO,CACHpF,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,OAG3C,kBAACjM,EAAA,EAAD,CACIpB,MAAM,UACN4S,KAAK,MACLvR,QAASkR,EACT1L,MAAO,CACH7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,eAGjC,kBAAC,KAAD,QAGR,kBAAC,GAAD,CAAiBlK,KAAMA,S,8BC1MlCiQ,GAAa,yCAAG,WAAOjQ,EAAMkQ,EAAWvR,GAAxB,sBAAAwD,EAAA,6DACpBnD,EAA2BL,EAA3BK,OAAQM,EAAmBX,EAAnBW,OAAQG,EAAWd,EAAXc,OACpB0Q,EAAU,GACdtF,OAAOC,KAAKoF,GAAWxF,SAAQ,SAAC5I,EAAMI,GAAO,IAAD,EACvCkO,GAAS,GACZtO,MAAOA,EACPC,OAAQmO,EAAUpO,GAAOC,QAFb,cAGXtC,EAAON,SAAW,IAHP,cAIXH,EAAOG,SAAW,IAJP,cAKXH,EAAOI,KAAO,IALH,cAMXE,EAAOH,SAAW,IANP,cAOXG,EAAOF,KAAO,IAPH,GAUIY,EAAK2D,QAAO,SAAA9B,GAAC,OAAIA,EAAEC,QAAUA,KACrC4I,SAAQ,SAAC7I,EAAEK,GACnBkO,EAAU3Q,EAAON,UAAUkR,KAAK,CAACxO,EAAEpC,EAAON,UAAW0C,EAAEpC,EAAON,YAC9DiR,EAAUpR,EAAOG,UAAUkR,KAAK,CAACxO,EAAEpC,EAAON,UAAW0C,EAAE7C,EAAOG,YAC9DiR,EAAU9Q,EAAOH,UAAUkR,KAAK,CAACxO,EAAEpC,EAAON,UAAW0C,EAAEvC,EAAOH,YAC9DiR,EAAUpR,EAAOI,MAAMiR,KAAK,CAACxO,EAAEpC,EAAON,UAAW0C,EAAE7C,EAAOI,QAC1DgR,EAAU9Q,EAAOF,MAAMiR,KAAK,CAACxO,EAAEpC,EAAON,UAAW0C,EAAEvC,EAAOF,WAE3D+Q,EAAQE,KAAKD,MAtBc,kBAyBrBD,GAzBqB,2CAAH,0DCAb/K,GAAU,CACtBE,aAAkC,GAApB/I,OAAOC,WACrB+I,cAAoC,GAArBhJ,OAAO+T,YACtB7T,OAAQ,CACP8J,IAAK,GACLgK,MAAO,GACPC,OAAQ,GACR/O,KAAM,KAIK4D,GAAS,CACrBG,MAAOJ,GAAQE,aAAeF,GAAQ3I,OAAOgF,KAAO2D,GAAQ3I,OAAO8T,MACnE9K,OAAQL,GAAQG,cAAgBH,GAAQ3I,OAAO8J,IAAMnB,GAAQ3I,OAAO+T,QCQxDC,GAAe,WAAO,IAC1BhU,EAAW2I,GAAX3I,OACA+I,EAAUH,GAAVG,MAEDE,EAAcjF,qBAAWf,GAAzBgG,WAJ0B,EAKTC,mBAAS,MALA,mBAK1B3F,EAL0B,KAKpB0Q,EALoB,OAMD/K,mBAAS,CACxC3G,OAAQL,EAAYK,OACpBM,OAAQX,EAAYW,OACpBC,OAAQZ,EAAYY,OACpBC,OAAQb,EAAYa,SAVY,mBAM1BU,EAN0B,KAMhByQ,EANgB,OAYahL,mBAAS,CACtDxG,SAAU,GACVuE,YAAamH,OAAOC,KAAKoF,GACzB/E,IAAKN,OAAOC,KAAKoF,KAfe,mBAY1BxP,EAZ0B,KAYTC,EAZS,KA2B3BzE,EARYC,aAAW,SAACC,GAAD,MAAY,CACxCwU,OAAQ,CACPpL,MAAOA,EACPuD,WAAYtM,EAAOgF,KACnByE,QAAS,OACTW,eAAgB,iBAGF7J,GAqBhB,OAPAsF,qBAAU,WACLoD,EAAWnI,OAAS,GACvB0S,GAAcvK,EAAYwK,EAAWvR,GACnCkS,MAAK,SAAAC,GAAG,OAAIJ,EAAQI,QAErB,CAACpL,IAGH,kBAAC5F,EAAiBiR,SAAlB,CAA2BzM,MAAO,CAAC5D,kBAAiBC,uBACnD,kBAAC,GAAD,CACCX,KAAMA,EACNE,SAAUA,EACVqN,eAxBoB,SAAC3I,GACvB,IAAMoM,EAAQpM,EAAEyH,OAAOjE,KAEvBuI,EAAY,eACRzQ,EADO,eAET8Q,EAFS,eAGN9Q,EAAS8Q,GAHH,CAIT7R,SAAUyF,EAAEyH,OAAO/H,YAkBnB5G,UAAWxB,EAAQ0U,SAEpB,yBAAK1I,UAAS,oBAAezL,EAAOgF,KAAtB,aAA+BhF,EAAO8J,IAAtC,MACZvG,GACG,kBAAC,EAAD,CACFE,SAAUA,EACVF,KAAMA,EACNoF,QAASA,GACTC,OAAQA,QCjFR4L,GAAO,CACXC,cAAe1P,IAAc,YAC7B2P,WAAY3P,IAAa,aAGrB4P,GAEI,IAFJA,GAGI,CACN7K,IAAK,GACLgK,MAAO,IACPC,OAAQ,IACR/O,KAAM,KCLG4P,IDDJ9U,OAAOC,WAWY4U,GAAkB3P,KAAO2P,GAAkBb,MACzCa,GAAkB7K,IAAM6K,GAAkBZ,OCX/C,SAACzU,GAAW,IAC5BuV,EAAwDvV,EAAxDuV,MAAOC,EAAiDxV,EAAjDwV,QAASC,EAAwCzV,EAAxCyV,YAAaC,EAA2B1V,EAA3B0V,eAAgBpM,EAAWtJ,EAAXsJ,OAC1CG,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OACVC,EAAejF,qBAAWf,GAA1BgG,WAECrF,EAASmB,MAAiB4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAE6P,kBAAgBrK,MAAM,CAAC,EAAG7B,IACxFlF,EAASkB,MAAiB4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAEmB,qBAAmBqE,MAAM,CAAC5B,EAAQ,IAyDtG,OAvDAnD,qBAAU,WACN,GAAIiP,GAAWE,EAAgB,CAE3BF,EAAQjO,GAAG,aAIX,WACI,IAAIqO,EAAKtR,EAAOuR,OAAOpQ,IAASqQ,MAAM,IAC5CC,EAAatQ,KAAY,SAAAK,GAAC,OAAIA,EAAE6P,iBAAejQ,KAEzCoJ,OAAOC,KAAK2G,GAAgB/O,OACvBiB,QAAO,SAAAC,GAAC,OAAmC,IAA/B6N,EAAe7N,GAAGzE,YAC9BuL,SAAQ,SAAA5I,GACL,IAAMiQ,EAAgBrM,EAAW/B,QAAO,SAAA9B,GAAC,OAAIA,EAAEC,QAAUA,KACnDkQ,EAAYP,EAAe3P,GAAOc,WAClCV,EAAI4P,EAAWC,EAAeJ,EAAI,GAEpCM,EAAsBF,EAAc7P,GAClC6P,EAAc7P,GAAGc,iBACjB+O,EAAcA,EAAcxU,OAAS,GAAGyF,iBAC1CkP,EAAsBH,EAAc7P,GAClC6P,EAAc7P,GAAGwP,cACjBK,EAAcA,EAAcxU,OAAS,GAAGmU,cAC1CS,EAAyBJ,EAAc7P,GACrC+O,GAAKC,cAAca,EAAc7P,GAAG+O,MACpCA,GAAKC,cAAca,EAAcA,EAAcxU,OAAS,GAAG0T,MAC7DmB,EAA0BL,EAAc7P,GACtC6P,EAAc7P,GAAGgB,MACjB6O,EAAcA,EAAcxU,OAAS,GAAG2F,MAM9CqO,EAAQjO,GAAG,SAJU,WACtC+O,GAAUA,KAKYA,IACDf,EAAMgB,OAAN,kBAAwBN,IACnBrP,KAAK,KAAMrC,EAAO2R,IAClBtP,KAAK,KAAMtC,EAAO6R,IAEvBZ,EAAMgB,OAAN,mBAAyBN,IACpBnV,KADL,UACa4U,EAAe3P,GAAOgC,aADnC,mBAC0DoO,EAD1D,aACkFC,EAAuB9U,MAAM,KAAK2N,MAAM,EAAE,GAAGvI,KAAK,KADpI,MAEnBE,KAAK,OAAQ8O,EAAe3P,GAAOnF,OAEhB2U,EAAMgB,OAAN,qBAA2BN,IACtBnV,KADL,UACaoV,EAAoBhP,QAAQ,GADzC,aACgDmP,EADhD,WAEKzP,KAAK,OAAQ8O,EAAe3P,GAAOnF,cA3CxD,IAAI0V,GAAS,KAgDrB,CAACb,IAEM,OC1DEe,GAAO,SAAAxW,GAAU,IAEtBuV,EAIAvV,EAJAuV,MACNC,EAGMxV,EAHNwV,QACME,EAEA1V,EAFA0V,eACNpM,EACMtJ,EADNsJ,OAEUG,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OAGPC,EAAejF,qBAAWf,GAA1BgG,WACHlF,EAAeC,qBAAWZ,GAA1BW,WAGCpE,EAAQa,cACXuV,EAAW1M,YAAc1J,EAAM2J,YAAY0M,GAAG,OAC9CC,EAAU5M,YAAc1J,EAAM2J,YAAY0M,GAAG,OAhBvB,EAkBU9M,mBAAS,IAlBnB,mBAkBrB6L,EAlBqB,KAkBRmB,EAlBQ,KAoBtBC,EAAe,SAAAC,GAIpB,OAHehI,OAAOC,KAAK+H,GACzBnQ,OACAiB,QAAO,SAAAC,GAAC,OAAiC,IAA7BiP,EAAajP,GAAGzE,aAgI5B,OA5HAmD,qBAAU,WACN,GAAImP,GAAkB/L,EAAWnI,OAAS,EAAG,CAEzC,IAAM8C,EAASmB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAE6P,kBACpCrK,MAAM,CAAC,EAAG7B,IACTlF,EAASkB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAEmB,qBACpCqE,MAAM,CAAC5B,EAAQ,IAGdqN,EAAgBtR,MAEjBoO,GAAE,SAAA/N,GAAC,OAAIxB,EAAOwB,EAAE6P,kBAChB7B,GAAE,SAAAhO,GAAC,OAAIvB,EAAOuB,EAAEmB,qBAEf+P,EAAc,GAEZH,EAAanB,GAEhB/G,SAAQ,SAAC5I,EAAOI,GACb,IAAM6P,EAAgBrM,EAAW/B,QAC7B,SAAA9B,GAAC,OAAIA,EAAEC,QAAUA,KAGfkR,EACFjB,EAAcA,EAAcxU,OAAS,GAAGmU,cACtCuB,EACFlB,EAAcA,EAAcxU,OAAS,GAChCyF,iBAIHkQ,GADezB,EAAe3P,GAAOqR,SAEvBpB,EAAc,GAAGd,MAAjC,MAEA,EACEmC,EAAmBrB,EAAcpO,QACnC,SAAA9B,GAAC,OAAIA,EAAE6P,gBAAkBwB,KAC3B,GAGEH,EAAYjR,GADZsR,EACqB,CACjBC,KAAMP,EAAcf,GACpBuB,WAAYjT,EAAO2S,GAAqB,EACxCO,WAAYjT,EAAO2S,GACnBO,gBAAiBnT,EAAO6S,GACxBO,gBAAiBnT,EACb8S,EAAiBpQ,mBAIJ,CACjBqQ,KAAMP,EAAcf,GACpBuB,WAAYjT,EAAO2S,GAAqB,EACxCO,WAAYjT,EAAO2S,OAInCN,EAAeI,MAEvB,CAACrN,EAAY+L,EAAgBrV,IAEhCkG,qBAAU,WACLmP,GACcmB,EAAanB,GAG7B/G,SAAQ,SAAC5I,EAAOI,GAChB,IAAM8P,EAAYxR,EAAWsB,GAAOc,WAEhC8Q,EAAS,EACTC,EAAS,EAETzR,EAAI,KACHwQ,GACHgB,EAAS,IACTC,EAAS,KACCnB,IACVkB,EAAS,IACTC,EAAS,MAIXrC,EACEvO,OAAO,UACPJ,KAAK,KAFP,iBAEuBqP,IACrBrP,KAAK,IAAK,GACVA,KAAK,OAAQ8O,EAAe3P,GAAOnF,OACnCgG,KAAK,SAAUvG,EAAMQ,QAAQC,KAAKwE,UAEhCmR,EAAWtQ,EAAI,GAAKA,EAAI,MAC3BoP,EACEvO,OAAO,QACPJ,KAAK,KAFP,kBAEwBqP,IACtBrP,KAAK,IAAK,GAAK+Q,GACf/Q,KAAK,KAAK,SAAAd,GAAC,OAAI2Q,EAAW,GAAS,GAAJtQ,EAASyR,EAAS,GAAS,GAAJzR,KACtDsB,MAAM,aAAa,SAAA3B,GAAC,OAAI6Q,EAAU,QAAU,WAC5ClP,MACA,cACA,+CAGF8N,EACEvO,OAAO,QACPJ,KAAK,KAFP,oBAE0BqP,IACxBrP,KAAK,IAAK,GAAK+Q,GACf/Q,KAAK,KAAK,SAAAd,GAAC,OAAI2Q,EAAW,GAAS,GAAJtQ,EAASyR,EAAS,GAAS,GAAJzR,KACtDsB,MAAM,aAAa,SAAA3B,GAAC,OAAI6Q,EAAU,QAAU,WAC5ClP,MACA,cACA,mDAKL,OAAO,WACN8N,EAAM9O,UAAU,UAAUuF,SAC1BuJ,EAAM9O,UAAU,QAAQuF,YAEvB,CAACyJ,IAGG,oCACI,kBAAC,GAAD,eACIF,MAAOA,EACnBC,QAASA,EACTC,YAAaA,EACbnM,OAAQA,GACQtJ,IAEP2J,EAAWnI,OAAS,EACjBsN,OAAOC,KAAK0G,GACP9O,OACAd,KAAI,SAACE,EAAOI,GACT,IAAM8P,EAAYxR,EAAWsB,GAAOc,WAEpC,OACjB,kBAAC,WAAD,CAAUyG,IAAKvH,GACd,uBAAGuC,GAAE,wBAAmB2N,IACvB,0BACC5Q,KAAK,OACLL,OAAQ0Q,EAAe3P,GAAOnF,MAC9BuE,YAAa,IACb0S,eAAe,QACfC,cAAc,QACdhS,EAAG2P,EAAY1P,GAAOuR,OAEvB,4BACChP,GAAG,uBACHyP,EAAG,EACH1S,KACCoQ,EAAY1P,GAAO0R,gBAChB/B,EAAe3P,GAAOnF,MACtB,OAEJoX,GAAIvC,EAAY1P,GAAO0R,gBACvBQ,GAAIxC,EAAY1P,GAAO2R,kBAExB,0BACCpP,GAAE,qBAAgB2N,GAClBtU,UAAU,aACV8F,MAAO,CACNpC,KAAMhF,EAAMQ,QAAQC,KAAKwE,QACzBC,SAAU,OACV2S,WACC,+CAEFrE,EAAG4B,EAAY1P,GAAOwR,WACtBzD,EAAG2B,EAAY1P,GAAOyR,YAErB9B,EAAe3P,GAAOgC,mBAOjB,8BCjNHoQ,GAAoB,SAAAnY,GAAU,IAClCqJ,EAAoBrJ,EAApBqJ,QAASC,EAAWtJ,EAAXsJ,OACTC,EAAwCF,EAAxCE,aAAcC,EAA0BH,EAA1BG,cAAe9I,EAAW2I,EAAX3I,OAC7B+I,EAAkBH,EAAlBG,MAAOC,EAAWJ,EAAXI,OACPC,EAAejF,qBAAWf,GAA1BgG,WA8BJxJ,EA5BcC,aAAW,SAAAC,GAAK,MAAK,CACtC6J,QAAS,CACRC,QAAS,eACTC,SAAU,WACVX,MAAO,OACPY,cAAe,SACfC,SAAU,UAEXhB,OAAQ,CACPG,MAAOA,EACPC,OAAQA,GAET5H,MAAO,CACNuD,KAAMhF,EAAMQ,QAAQC,KAAKwE,QACzBC,SAAU,UAEXkF,KAAM,CACLpF,KAAMhF,EAAMQ,QAAQC,KAAKwE,SAE1B8S,UAAW,CACV/S,KAAMhF,EAAMQ,QAAQC,KAAKwE,QACzBC,SAAU,SAEX8S,UAAW,CACVhT,KAAMhF,EAAMQ,QAAQC,KAAKwE,QACzBC,SAAU,YAGEtE,GAELiK,EAAWpG,iBAAO,MAClBqG,EAAWrG,iBAAO,MAClBwT,EAASxT,iBAAO,MACnBmG,EAAYnG,iBAAO,MASnByQ,EANE9P,IACEwF,EAAUzE,SACjBQ,OAAO,KACPJ,KAAK,QAAS,SACda,MAAM,UAAW,QAcd+N,EATE/P,IACEwF,EAAUzE,SACjBQ,OAAO,QACPJ,KAAK,QAAS,WACdA,KAAK,QAAS6C,GACd7C,KAAK,SAAU8C,GACf9C,KAAK,UAAW,KAChBW,GAAG,aAAa,kBAAMgO,EAAM9N,MAAM,UAAW,SAsB7C,OAlBAlB,qBAAU,WAEN,IAAMjC,EAASmB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAE6P,kBACpCrK,MAAM,CAAC,EAAG7B,IACTlF,EAASkB,MAEV4F,OAAO5F,IAAUkE,GAAY,SAAA7D,GAAC,OAAIA,EAAEmB,qBACpCqE,MAAM,CAAC5B,EAAQ,IAGd6B,EAAiB9F,MAAc+F,MAAMjH,GACrCkH,EAAiBhG,MAAgB+F,MAAMlH,GAC7CmB,IAAU0F,EAAS3E,SAASO,KAAK0E,GACjChG,IAAUyF,EAAS1E,SAASO,KAAKwE,KACrC,CAAC5B,IAGH,oCACC,yBACCrB,GAAG,WACHoB,OAAQF,EACRC,MAAOF,EACPvB,IAAKsQ,EACL3W,UAAWxB,EAAQ+J,QACnBgC,QAAO,cAAS3C,EAAT,YAAyBC,IAGpB,0BACI7H,UAAWxB,EAAQ2B,MACnB2F,MAAO,CAACyQ,WAAY,+CACpBK,WAAW,SACXpM,UAAS,qBACLzL,EAAOgF,KAAO+D,EAAQ,EADjB,aAEJ/I,EAAO8J,IAAM,EAFT,MAJb,gCAUA,0BACI7I,UAAWxB,EAAQiY,UACnB3Q,MAAO,CAACyQ,WAAY,+CACpBK,WAAW,SACXpM,UAAS,oBAAezL,EAAOgF,KAAO+D,EAAQ,EAArC,aACLC,EAAShJ,EAAO8J,IAAM,GADjB,MAJb,mBAUA,0BACI7I,UAAWxB,EAAQiY,UACnB3Q,MAAO,CAACyQ,WAAY,+CACpBK,WAAW,SACXpM,UAAS,oBACS,GAAdzL,EAAOgF,KADF,aAEJgE,EAAS,EAFL,kBAJb,yBAUA,0BACI/H,UAAWxB,EAAQkY,UACnBE,WAAW,OACX9Q,MAAO,CAACyQ,WAAY,+CACpB/L,UAAS,oBAAezL,EAAOgF,KAAtB,aACLgE,EAAShJ,EAAO8J,IAAM,GADjB,MAJb,yFAWA,0BACI7I,UAAWxB,EAAQkY,UACnBE,WAAW,OACX9Q,MAAO,CAACyQ,WAAY,+CACpB/L,UAAS,oBAAezL,EAAOgF,KAAtB,aACLgE,EAAShJ,EAAO8J,IAAM,GADjB,MAJb,mDAUA,0BACI7I,UAAWxB,EAAQkY,UACnBE,WAAW,OACX9Q,MAAO,CAACyQ,WAAY,+CACpB/L,UAAS,oBAAezL,EAAOgF,KAAtB,aACLgE,EAAShJ,EAAO8J,IAAM,IADjB,MAJb,uHAWA,0BACI7I,UAAWxB,EAAQkY,UACnBE,WAAW,OACX9Q,MAAO,CAACyQ,WAAY,+CACpB/L,UAAS,oBAAezL,EAAOgF,KAAtB,aACLgE,EAAShJ,EAAO8J,IAAM,IADjB,MAJb,kEAUA,uBACIlC,GAAG,SACH6D,UAAS,oBAAezL,EAAOgF,KAAtB,aAA+BhF,EAAO8J,IAAtC,KACTxC,IAAKiD,GAEL,uBACIjD,IAAKkD,EACL5C,GAAG,SACHb,MAAO,CAACyQ,WAAY,iDAExB,uBACIlQ,IAAKmD,EACL7C,GAAG,SACH6D,UAAS,sBAAiBzC,EAAjB,KACTjC,MAAO,CAACyQ,WAAY,iDAExB,kBAAC,GAAD,eAAM3C,MAAOA,EAAOC,QAASA,GAAaxV,QCxLjDwY,GAAehM,sBAAW,SAACxM,EAAOgI,GAAS,IAC/CyQ,EAAoDzY,EAApDyY,cAAeC,EAAqC1Y,EAArC0Y,qBAAsB9L,EAAe5M,EAAf4M,WAO7C,OACC,oCACE6L,EAAc5S,KAAI,SAAAwH,GAClB,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNN,IAAKA,EACL/F,QAAS,kBAbW2M,EAaWvB,EAZnCT,SACA8L,EAAqB9J,GAFE,IAACA,IAepBvB,EAAEhB,aClBKsM,GAAc,SAAC3Y,GAAW,IAC9ByN,EAAkCzN,EAAlCyN,QAASiL,EAAyB1Y,EAAzB0Y,qBADoB,EAEL9O,mBAAS,MAFJ,mBAE9B8C,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAGrB4L,EAAgB,CACrB,CAACnQ,GAAI,aAAc+D,KAAK,OAAD,OAASoB,EAAT,YAA4BtK,KAAM,QAASmJ,WAAY,kBAAmB3F,KAAM,aAAcgH,EAAGF,GACxH,CAACnF,GAAI,YAAa+D,KAAK,UAAD,OAAYoB,EAAZ,YAA+BtK,KAAM,QAASmJ,WAAY,kBAAmB3F,KAAM,YAAagH,EAAGF,GACzH,CAACnF,GAAI,sBAAuB+D,KAAK,OAAD,OAASoB,EAAT,eAA+BtK,KAAM,QAASmJ,WAAY,yBAA0B3F,KAAM,aAAcgH,EAAGF,GAC3I,CAACnF,GAAI,qBAAsB+D,KAAK,UAAD,OAAYoB,EAAZ,eAAkCtK,KAAM,QAASmJ,WAAY,yBAA0B3F,KAAM,YAAagH,EAAGF,IAG7I,OACC,oCACC,kBAAC4B,GAAA,EAAD,CAAQ/G,GAAG,YAAYrG,QAAS2K,GAAhC,kBAGA,kBAACK,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,cAAhBT,EAASpE,IAClC8E,QAASR,GAET,kBAAC4L,GAAD,CACCC,cAAeA,EACfC,qBAAsBA,EACtB9L,WAAYA,OC5BJY,GAAmB,SAACxN,GAAW,IACnCyN,EAAkCzN,EAAlCyN,QAASiL,EAAyB1Y,EAAzB0Y,qBADyB,EAGV9O,mBAAS,MAHC,mBAGnC8C,EAHmC,KAGzBC,EAHyB,KAKpCC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAGrB4L,EAAgB,CACrB,CAACnQ,GAAI,WAAY+D,KAAK,OAAD,OAASoB,EAAT,iBAAiCtK,KAAM,OAAQmJ,WAAY,aAAc3F,KAAM,aAAcgH,EAAGF,GACrH,CAACnF,GAAI,UAAW+D,KAAK,UAAD,OAAYoB,EAAZ,iBAAoCtK,KAAM,OAAQmJ,WAAY,aAAc3F,KAAM,YAAagH,EAAGF,GACtH,CAACnF,GAAI,mBAAoB+D,KAAK,OAAD,OAASoB,EAAT,mBAAmCtK,KAAM,OAAQmJ,WAAY,oBAAqB3F,KAAM,aAAcgH,EAAGF,GACtI,CAACnF,GAAI,kBAAmB+D,KAAK,UAAD,OAAYoB,EAAZ,mBAAsCtK,KAAM,OAAQmJ,WAAY,oBAAqB3F,KAAM,YAAagH,EAAGF,IAGxI,OACC,oCACC,kBAAC4B,GAAA,EAAD,CAAQ/G,GAAG,iBAAiBrG,QAAS2K,GAArC,wBAGA,kBAACK,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,mBAAhBT,EAASpE,IAClC8E,QAASR,GAET,kBAAC4L,GAAD,CACCC,cAAeA,EACfC,qBAAsBA,EACtB9L,WAAYA,OC7BJgM,GAAmBpM,sBAAW,SAACxM,EAAOgI,GAAS,IACnDyQ,EAAoDzY,EAApDyY,cAAeC,EAAqC1Y,EAArC0Y,qBAAsB9L,EAAe5M,EAAf4M,WAO7C,OACC,oCACE6L,EAAc5S,KAAI,SAAAwH,GAClB,OACC,kBAACP,EAAA,EAAD,CACCQ,IAAKD,EAAE/E,GACPA,GAAI+E,EAAE/E,GACNN,IAAKA,EACL/F,QAAS,kBAbW2M,EAaWvB,EAZnCT,SACA8L,EAAqB9J,GAFE,IAACA,IAepBvB,EAAEhB,aChBKE,GAAe,SAACvM,GAAW,IAC/B0Y,EAAyB1Y,EAAzB0Y,qBAD8B,EAGN9O,mBAAS,MAHH,mBAG/B8C,EAH+B,KAGrBC,EAHqB,KAKhCC,EAAa,SAAC/D,GACwB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAU3B,OACC,oCACC,kBAACwC,GAAA,EAAD,CAAQ/G,GAAG,aAAarG,QAAS2K,GAAjC,oBAGA,kBAACK,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,eAAhBT,EAASpE,IAClC8E,QAASR,GAET,kBAACgM,GAAD,CACCH,cAlBkB,CACrB,CAACnQ,GAAI,YAAa+D,KAAM,YAAalJ,KAAM,SAAUmJ,WAAY,UACjE,CAAChE,GAAI,UAAW+D,KAAM,UAAWlJ,KAAM,SAAUmJ,WAAY,UAC7D,CAAChE,GAAI,QAAS+D,KAAM,QAASlJ,KAAM,SAAUmJ,WAAY,UACzD,CAAChE,GAAI,OAAQ+D,KAAM,OAAQlJ,KAAM,SAAUmJ,WAAY,WAepDoM,qBAAsBA,EACtB9L,WAAYA,OCxBX3L,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACtC8Q,cAAe,CACd5Q,SAAU,IACV6Q,SAAU,IACVtG,eAAgB,eAChBsD,QAAS,EACT1N,OAAQ,GAENqS,IAAK,CACD9N,QAAS,IAEb+N,SAAU,CACN/N,QAAS,GACT,UAAW,CACPA,QAAS,QAKR4T,GAAc,SAAA7Y,GAAU,IACzB0V,EAAsC1V,EAAtC0V,eAAgBoD,EAAsB9Y,EAAtB8Y,kBAGnBrU,EAAeC,qBAAWZ,GAA1BW,WAJ2B,EAOAmF,mBAAS,MAPT,mBAOf+C,GAPe,aAQY/C,mBAAS,MARrB,mBAQzBmP,EARyB,KAQTC,EARS,KAW7B3Y,EAAQa,cACRf,EAAUc,KACV6I,EAAUC,YAAc1J,EAAM2J,YAAYC,KAAK,OAM/CyO,EAAuB,SAACO,GAC7BD,EAAkBC,GAClBtM,EAAY,OAuDV,OATHpG,qBAAU,WACT,GAAIwS,EAAgB,CACnB,IAAMG,EAAeH,EAAepL,EA5BR,SAACiB,EAAWuK,GACzC,IACItK,EADElB,EAAIiB,EAAUjB,EAGpBkB,EAAWC,OAAOC,KAAKoK,GACtBxS,MAAK,SAACP,EAAGC,GAAJ,MACc,eAAnBuI,EAAUjI,KACPwS,EAAK9S,GAAGuI,EAAUtC,YACnB6M,EAAK/S,GAAGwI,EAAUtC,YACjB6M,EAAK/S,GAAGwI,EAAUtC,YACnB6M,EAAK9S,GAAGuI,EAAUtC,eAEpB2C,MAAM,EAAGtB,GAEV,IAAIuL,EAAe,GASb,OARNpK,OAAOC,KAAKoK,GAAMxK,SAAQ,SAAA9G,GACrBgH,EAAS/H,SAASe,GACrBqR,EAAarR,GAAb,eAAsBsR,EAAKtR,GAA3B,CAA+BzE,UAAU,IAEzC8V,EAAarR,GAAb,eAAsBsR,EAAKtR,GAA3B,CAA+BzE,UAAU,OAI9B8V,EAMThK,CAAmB6J,EAAgBtU,GA9CT,SAACmK,EAAWuK,GACpC,IAAMtK,EAAWC,OAAOC,KAAKoK,GAAMvR,QAC/B,SAAAC,GAAC,OAAIsR,EAAKtR,GAAG+G,EAAUtC,cAAgBsC,EAAUvC,QAGvD6M,EAAe,GASb,OARNpK,OAAOC,KAAKoK,GAAMxK,SAAQ,SAAA9G,GACrBgH,EAAS/H,SAASe,GACrBqR,EAAarR,GAAb,eAAsBsR,EAAKtR,GAA3B,CAA+BzE,UAAU,IAEzC8V,EAAarR,GAAb,eAAsBsR,EAAKtR,GAA3B,CAA+BzE,UAAU,OAI9B8V,EAiCTlK,CAAuB+J,EAAgBtU,GAC1CqU,EAAkBI,MAElB,CAACH,IAGF,kBAACtX,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWxB,EAAQgR,cAClC1J,MAAOqC,EACL,CAACe,cAAe,SAAUE,WAAY,UACtC,CAACF,cAAe,QAElB,kBAAC,GAAD,CACCuO,gBAAc,YACdC,gBAAc,OACd1X,UAAWxB,EAAQ4S,IACnBtF,QAAS,GACTiI,eAAgBA,EAChBoD,kBAAmBA,EACnBJ,qBAAsBA,IAEvB,kBAAC,GAAD,CACCU,gBAAc,iBACdC,gBAAc,OACd1X,UAAWxB,EAAQ4S,IACnBtF,QAAS,GACTiI,eAAgBA,EAChBoD,kBAAmBA,EACnBJ,qBAAsBA,IAEvB,kBAAC,GAAD,CACCU,gBAAc,aACdC,gBAAc,OACd1X,UAAWxB,EAAQ4S,IACnB2C,eAAgBA,EAChBoD,kBAAmBA,EACnBJ,qBAAsBA,M,qBC5HbY,GAAY,SAAAtZ,GAAU,IAE3B0V,EAIA1V,EAJA0V,eACA6D,EAGAvZ,EAHAuZ,qBACAC,EAEAxZ,EAFAwZ,sBACAC,EACAzZ,EADAyZ,wBAGEpZ,EAAQa,cAEd,OACI,6BACI,kBAACqP,EAAA,EAAD,CACI9I,MAAO,CACHsD,WAAY,OACZ1I,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,KACvCrN,MAAOP,EAAMQ,QAAQC,KAAKwE,UAG9B,kBAACkL,EAAA,EAAD,CACIlI,GAAG,aACHR,MAAM,aACNuE,KAAK,aACLpK,QAASuX,EACT/I,QACI,kBAACzO,EAAA,EAAD,CACIsG,GAAG,eACH+D,KAAK,aACL5E,MAAO,CAAE7G,MAAO,UAEhB,kBAAC,KAAD,SAIZ,kBAAC4P,EAAA,EAAD,CACIlI,GAAG,eACHR,MAAM,eACNuE,KAAK,eACLpK,QAASwX,EACThJ,QACI,kBAACzO,EAAA,EAAD,CACIsG,GAAG,iBACH+D,KAAK,eACL5E,MAAO,CAAE7G,MAAO,QAEhB,kBAAC,KAAD,SAIZ,6BACA,kBAACuH,EAAA,EAAD,CACIC,QAAQ,KACRX,MAAO,CAAE7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,eAF1C,YAMA,kBAAC2C,EAAA,EAAD,CACIrJ,MAAO,CACHpF,gBAAiBhC,EAAMQ,QAAQyE,QAAQ6I,gBAG9CuH,EACG5G,OAAOC,KAAK2G,GACP/O,OACAiB,QAAO,SAAAC,GAAC,OAAmC,IAA/B6N,EAAe7N,GAAGzE,YAC9ByC,KAAI,SAACE,EAAOI,GACT,OACI,kBAACqK,EAAA,EAAD,CACIlD,IAAKnH,EACLmC,GAAIoN,EAAe3P,GAAOc,WAC1BwF,KAAMtG,EACNkL,QAASyE,EAAe3P,GAAO3C,SAC/BwF,SAAU2Q,EACV9I,QACI,kBAACS,EAAA,EAAD,CACI7E,KAAMtG,EACN0B,MAAO,CACH7G,MACI8U,EAAe3P,GAAOnF,SAItCkH,MAAK,UAAK/B,EAAL,aAAe2P,EAAe3P,GAAOgC,aAArC,UAKrB,8BAEJ,6BACA,kBAACI,EAAA,EAAD,CACIC,QAAQ,KACRX,MAAO,CAAE7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,eAF1C,gBAMA,kBAAC2C,EAAA,EAAD,CACIrJ,MAAO,CACHpF,gBAAiBhC,EAAMQ,QAAQyE,QAAQ6I,gBAG9CuH,EACG5G,OAAOC,KAAK2G,GACP/O,OACAiB,QAAO,SAAAC,GAAC,OAAmC,IAA/B6N,EAAe7N,GAAGzE,YAC9ByC,KAAI,SAACE,EAAOI,GACT,OACI,kBAACqK,EAAA,EAAD,CACIlD,IAAKnH,EACLmC,GAAIoN,EAAe3P,GAAOc,WAC1BwF,KAAMtG,EACNkL,QAASyE,EAAe3P,GAAO3C,SAC/BwF,SAAU2Q,EACV9I,QACI,kBAACS,EAAA,EAAD,CACI7E,KAAMtG,EACN0B,MAAO,CACH7G,MACI8U,EAAe3P,GAAOnF,SAItCkH,MAAK,UAAK/B,EAAL,aAAe2P,EAAe3P,GAAOgC,aAArC,UAKrB,iCClHd9G,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCwR,KAAM,CACR1H,QAAS,QAEP2H,OAAQ,CACVzP,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,KACvCrN,MAAOP,EAAMQ,QAAQyE,QAAQ6I,aACvBvC,WAAYvL,EAAM0R,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ5R,EAAM0R,YAAYE,OAAOC,MACjCrG,SAAUxL,EAAM0R,YAAYlG,SAASsG,iBAG7CC,YAAa,CACT3I,MAAM,eAAD,OAfO,IAeP,OACLuD,WAhBY,IAiBZpB,WAAYvL,EAAM0R,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQ5R,EAAM0R,YAAYE,OAAOI,QACjCxG,SAAUxL,EAAM0R,YAAYlG,SAASyG,kBAG7CC,WAAY,CACR3R,MAAOP,EAAMQ,QAAQyE,QAAQ6I,aAC7B,UAAW,CACP9L,gBAAiB,gBAGzBmQ,KAAM,CACFrI,QAAS,QAEbsI,OAAQ,CACJhJ,MAhCY,IAiCZiJ,WAAY,GAEhBC,YAAa,CACTlJ,MApCY,KAsChBmJ,aAAa,aACTzI,QAAS,OACTY,WAAY,SACZqD,QAAS/N,EAAMgO,QAAQ,EAAG,IACvBhO,EAAMwS,OAAOC,QAJR,CAKRhI,eAAgB,WAChBzI,gBAAiBhC,EAAMQ,QAAQyB,WAAWC,UAE9CwQ,IAAK,CACD9N,QAAS,IAEb+N,SAAU,CACN/N,QAAS,GACT,UAAW,CACPA,QAAS,QAKRgO,GAAS,SAAAjT,GAAU,IAAD,EACH4J,oBAAS,GADN,mBACpBsD,EADoB,KACdgG,EADc,OAEKtJ,mBAAS,MAFd,mBAEpB8C,EAFoB,KAEVC,EAFU,KAIxBtM,EAAQa,cACRf,EAAUc,KACV6I,EAAUC,YAAc1J,EAAM2J,YAAYC,KAAK,OAgB5CyP,EAAmB,SAAA7Q,GACsB8D,EAA1CD,EAAsD,KAA/B7D,EAAEgE,gBAG9B,OACI,yBAAKlL,UAAWxB,EAAQ0R,MACpB,kBAACwB,GAAA,EAAD,CACIjJ,SAAS,WACTzI,UAAW2R,YAAKnT,EAAQ2R,OAAT,eACV3R,EAAQiS,YAAclF,KAG3B,kBAACqG,GAAA,EAAD,KACI,kBAACvR,EAAA,EAAD,CACIC,QA5BK,WACrBiR,GAAQ,IA4BQvR,UAAW2R,YACPnT,EAAQoS,WACRrF,GAAQ/M,EAAQqS,MAEpBiB,eAAa,GAEb,kBAAC,KAAD,CAAU9R,UAAWxB,EAAQoS,cAE/CzI,EACE,oCACD,kBAACjI,EAAA,EAAD,CAASC,MAAM,iBACd,kBAACE,EAAA,EAAD,CACCsG,GAAG,iBACHrG,QAASyX,EACT/X,UAAWxB,EAAQoS,YAEnB,kBAAC,KAAD,QAGF,kBAACtF,EAAA,EAAD,CACCP,SAAUA,EACVQ,OAAMR,GAAWS,QAAwB,mBAAhBT,EAASpE,IAClC8E,QAASsM,GAET,kBAAC,GAAD,eAAaA,iBAAkBA,GAAsB1Z,MAGrD,kBAAC,GAAgBA,GAEpB,0BAAMyH,MAAO,CAACuF,WAAY,SACzB,kBAACnL,EAAA,EAAD,CAASC,MAAM,cACd,kBAACE,EAAA,EAAD,CAAYwN,UAAU,IAAInO,KAAK,2BAA2BM,UAAWxB,EAAQoS,YAC5E,kBAAC,KAAD,QAGF,kBAAC1Q,EAAA,EAAD,CAASC,MAAM,mBACd,kBAACE,EAAA,EAAD,CAAYwN,UAAU,IAAInO,KAAK,gCAAgCM,UAAWxB,EAAQoS,YACjF,kBAAC,KAAD,WAMI,kBAACoB,GAAA,EAAD,CAAmBC,YAhEH,SAAA/K,GAChBA,EAAEgL,EA1EM,KA0EahL,EAAEiL,EAAI,IAAM5G,GACjCgG,GAAQ,KA+DJ,kBAACa,GAAA,EAAD,CACIpS,UAAWxB,EAAQsS,OACnBrK,QAAQ,aACR4L,OAAO,OACP9G,KAAMA,EACN/M,QAAS,CACL8T,MAAO9T,EAAQwS,aAEnBlL,MAAO,CAAE7G,MAAOP,EAAMQ,QAAQC,KAAKwE,UAEnC,yBACI3D,UAAWxB,EAAQyS,aACnBnL,MAAO,CAAEpF,gBAAiBhC,EAAMQ,QAAQyE,QAAQ2I,OAEhD,kBAACjM,EAAA,EAAD,CACIpB,MAAM,UACN4S,KAAK,MACLvR,QAtFE,WACtBiR,GAAQ,IAsFYzL,MAAO,CACH7G,MAAOP,EAAMQ,QAAQyE,QAAQ6I,eAGjC,kBAAC,KAAD,QAGR,kBAAC2C,EAAA,EAAD,MACA,kBAAC,GAAc9Q,OC7LtB4C,GAAc,CAC1BC,UAAW,OACXC,YAAa,KACbC,UAAU,EACVC,WAAW,EACXC,OAAQ,CACPE,KAAM,SACNR,OAAQ,SACRS,SAAU,gBACVC,KAAM,KACNC,QAAS,CACR,kBAGFC,OAAQ,CACPJ,KAAM,SACNR,OAAQ,SACRS,SAAU,mBACVC,KAAM,oBACNC,QAAS,CACR,mBACA,QACA,oBACA,WAGFE,OAAQ,CACPL,KAAM,KACNR,OAAQ,KACRS,SAAU,KACVE,QAAS,CACR,OAGFG,OAAQ,CACPN,KAAM,cACNC,SAAU,SACVE,QAAS,CACR,SACA,WACA,aAGFI,OAAQ,CACPP,KAAM,KACNC,SAAU,KACVE,QAAS,CACR,QAMUqW,GAAc,CAC1BC,WAAY,4BACZC,OAAQ,qBACRC,OAAQ,uBCvCIC,GAAkB,SAAC,GAAyB,IAAvB1Q,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAClC7E,EAAeC,qBAAWZ,GAA1BW,WAD+C,EAGXmF,mBAAS,MAHE,mBAGhD8L,EAHgD,KAGhCoD,EAHgC,KAKjDkB,EAAmBjQ,YAAc,2BAmBjC5J,EAjBYC,aAAW,SAACC,GAAD,MAAY,CACxCqB,UAAW,CACV0M,QAAS,EACT3E,MAAO,OACPC,OAAQ,OACRS,QAAS,OACTU,cAAe,kBAAMmP,EACjB,MACA,UACJlP,eAAgB,UAEjBlJ,KAAM,CACL6H,MAAO,OACPwQ,UAAW,WAIGhZ,GAwCf,OANDsF,qBAAU,WACL9B,GACHqU,EAAkBrU,KAEhB,CAACA,IAGF,kBAAChD,EAAA,EAAD,CAAME,UAAWxB,EAAQuB,WAC3B,kBAAC,IAAD,CAAyBwY,MAAOC,KAC/B,kBAAC1Y,EAAA,EAAD,CAAMG,MAAI,EAACD,UAAWxB,EAAQyB,MAC7B,kBAAC,GAAD,CACC6F,MAAO,CAACgC,MAAO,QACf7G,YAAaA,GACb8S,eAAgBA,EAChBoD,kBAAmBA,EACnBS,qBA/CyB,SAAC1Q,GACvBiQ,EAAkB,eACXpD,EADU,eAEZ7M,EAAEyH,OAAOjE,KAFG,eAGNqJ,EAAe7M,EAAEyH,OAAOjE,MAHlB,CAITjJ,SAAUyF,EAAEyH,OAAOW,cA2C9BuI,sBAtC6B,SAAC3Q,GAC3B,IAAMuR,EAAgB,GACtBtL,OAAOC,KAAK2G,GAAgB/G,SAAQ,SAAC9G,EAAE1B,GACnCiU,EAAcvS,GAAd,eACO6N,EAAe7N,GADtB,CAEIzE,UAAU,OAGlB0V,EAAkBsB,IA+BrBX,wBA5B+B,SAAC5Q,GAC7B,IAAMuR,EAAgB,GACtBtL,OAAOC,KAAK2G,GAAgB/G,SAAQ,SAAC9G,EAAE1B,GACnCiU,EAAcvS,GAAd,eACO6N,EAAe7N,GADtB,CAEIzE,UAAU,OAGlB0V,EAAkBsB,MAsBtB,kBAAC,GAAD,CACCxX,YAAaA,GACb+W,YAAaA,GACbjE,eAAgBA,EAChBoD,kBAAmBA,EACnBzP,QAASA,EACTC,OAAQA,QCrGAD,GAAU,CACtBE,aAAkC,GAApB/I,OAAOC,WACrB+I,cAAoC,GAArBhJ,OAAO+T,YACtB7T,OAAQ,CACP8J,IAAK,GACLgK,MAAO,GACPC,OAAQ,IACR/O,KAAM,KAIK4D,GAAS,CACrBG,MAAOJ,GAAQE,aAAeF,GAAQ3I,OAAOgF,KAAO2D,GAAQ3I,OAAO8T,MACnE9K,OAAQL,GAAQG,cAAgBH,GAAQ3I,OAAO8J,IAAMnB,GAAQ3I,OAAO+T,Q,UCDxDpU,GAAQga,aAAe,CAChCxZ,QAAS,CACLsC,KAAM,OACNmC,QAAS,CACL2I,KAAM,UACNE,aAAc,QAElBpN,UAAW,CACPkN,KAjBU,UAkBVE,aAjBK,QAmBTrN,KAAM,CACFwE,QAAS,OACTvE,UAAW,QAErBuB,WAAY,CACXC,QAvBoB,WAyBf+X,kBAAmB,GAEvBC,WAAY,CACRrC,WAAY,CAAC,gBAAiB,YAAa,QAAS,cAAcxR,KAC9D,MAGR8T,UAAW,CACPC,oBAAqB,CACjB5I,KAAM,CACFjR,MAAO,OACP8Z,UAAW,QAEf5S,MAAO,CACHlH,MAAO,OACP8Z,UAAW,SAGnBC,UAAW,CACP9I,KAAM,CACFjR,MAAO,QAEXkH,MAAO,CACHlH,MAAO,QAEXE,KAAM,CACFF,MAAO,SAGfga,QAAS,CACL/I,KAAM,CACFjR,MAAO,SAGfia,aAAc,CACVhJ,KAAM,CACdjR,MAAO,OACKL,SAAU,IACVua,YAAa,KAGrBC,yBAA0B,CACtBC,aAAc,CACV3Y,gBAvEI,YA0EZ4Y,cAAe,CACXrV,IAAK,CACDhF,MAAO,WAEXsa,YAAa,CACT7Y,gBAAiB,WAErB8Y,YAAa,CACTva,MAAO,WAEX4F,QAAS,CACL5F,MAAO,eAMVwa,GAAW,SAAC/a,EAAOJ,GAC/B,OAAIA,EACKoa,aAAe,eACnBha,EADkB,CAErBQ,QAAQ,eACJR,EAAMQ,QADH,CAENsC,KAAM,OACNmC,QAAS,CACR2I,KAAM,UACNE,aAAc,QAEf7L,WAAY,CACXC,QAAS,WAEVzB,KAAM,CACLwE,QAAS,OACTvE,UAAW,UAGbyZ,UAAU,eACNna,EAAMma,UADD,CAERG,UAAW,CACV9I,KAAM,CACLjR,MAAO,QAERkH,MAAO,CACNlH,MAAO,QAERE,KAAM,CACLF,MAAO,cAMJyZ,aAAe,eAClBha,EADiB,CAEpBQ,QAAQ,eACJR,EAAMQ,QADH,CAENsC,KAAM,QACNmC,QAAS,CACR2I,KAAM,UACNE,aAAc,QAEf7L,WAAY,CACXC,QAAS,QAEVzB,KAAM,CACLwE,QAAS,UACTvE,UAAW,aAGbyZ,UAAU,eACNna,EAAMma,UADD,CAERG,UAAW,CACV9I,KAAM,CACLjR,MAAO,WAERkH,MAAO,CACNlH,MAAO,WAERE,KAAM,CACLF,MAAO,YAGTia,aAAc,CACbQ,MAAO,CACNza,MAAO,kBChKA0a,GAAS,CACrB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,oBCuGcC,OAhIf,WAAgB,IAAD,EACyB3R,mBAAS,IADlC,mBACJD,EADI,KACQ6R,EADR,OAEyB5R,mBAAS,MAFlC,mBAEJnF,EAFI,KAEQgX,EAFR,OAGkB7R,oBAAS,GAH3B,mBAGP3J,EAHO,KAGGC,EAHH,KA4FX,OAvFAqG,qBAAU,WAEN,IAAM6O,EAAa3P,IAAa,YAC1B2U,EAAgB,GAEtBtL,OAAOC,KAAKoF,GAAWxF,SAAQ,SAAC9G,EAAG1B,GAC/BiU,EAAcvS,GAAd,eACOsM,EAAUtM,GADjB,CAEIuP,SAAUjD,EAAUtM,GAAGuP,SAASsE,WAAW,QACrCvH,EAAUtM,GAAGuP,SACbhC,EAAWjB,EAAUtM,GAAGuP,UAC9BuE,YAAaxH,EAAUtM,GAAG8T,YAAYD,WAAW,QAC3CvH,EAAUtM,GAAG8T,YACbvG,EAAWjB,EAAUtM,GAAG8T,aAC9B/a,MAAO0a,GAAOnV,QAItB,IAAMyV,EAASnW,MAEV6H,KAAI,SAAAxH,GAAC,OAAIA,EAAEC,SACX8V,QAAQlS,GAEbmF,OAAOC,KAAK6M,GAAQjN,SAAQ,SAAAxI,GACxB,IAAM0B,EAAI+T,EAAOzV,GAAGmH,IAEdwO,EAAYF,EAAOzV,GAAGD,OAAO1E,OAAS,EACtCua,EAAkBH,EAAOzV,GAAGD,OAAO4V,GAAW3U,MAC9C6U,EACDJ,EAAOzV,GAAGD,OAAO4V,GAAW3U,MAAQgN,EAAUtM,GAAGoU,WAClD,IAEJ7B,EAAcvS,GAAd,eACOuS,EAAcvS,GADrB,CAEIkU,gBAAiBA,EACjBC,uBAAwBA,OAGhCP,EAAcrB,KACf,CAACzQ,IAEJpD,qBAAU,WAENd,IAAOyW,KAAUpH,MAAK,SAAA7Q,GAElB,IAAMmR,EAAa3P,IAAa,YAEhCxB,EAAK0K,SAAQ,SAAA7I,GACTA,EAAEoP,KAAOE,EAAWtP,EAAEoP,MACtBpP,EAAEqW,KAAOC,SAAStW,EAAEqW,MACpBrW,EAAEqB,MAAQiV,SAAStW,EAAEqB,OACrBrB,EAAEwB,OAAS8U,SAAStW,EAAEwB,WAO1BrD,EAAOA,EAAK2D,QACR,SAAA9B,GAAC,OACGA,EAAEoP,KAAO,IAAImH,KAAK,KAAM,EAAG,KAC3BvN,OAAOC,KAAKoF,GAAWrN,SAAShB,EAAEC,UAO1C+I,OAAOC,KAAKoF,GAAWxF,SAAQ,SAAA5I,GAC3B,IAAMuW,EAAYrY,EAAK2D,QAAO,SAAA9B,GAAC,OAAIA,EAAEC,QAAUA,KAC/CuW,EAAU3N,SAAQ,SAAA7I,GACdA,EAAE6P,eACG7P,EAAEoP,KAAOoH,EAAU,GAAGpH,MAAvB,MAEA,EACJpP,EAAEmB,iBACGnB,EAAEqB,MAAQgN,EAAUpO,GAAOkW,WAAc,IAC9CnW,EAAEuB,kBACGvB,EAAEwB,OAAS6M,EAAUpO,GAAOkW,WAAc,IAC/CnW,EAAEyW,cAAiBzW,EAAEwB,OAASxB,EAAEqB,MAAS,UAGjDqU,EAAcvX,GACduY,QAAQC,IAAI,yBAEpB,IAGI,oCACI,kBAACC,GAAA,EAAD,CAAerc,MAAO+a,GAAS/a,GAAOJ,IAClC,kBAAC0c,GAAA,EAAD,MACA,kBAAC,IAAD,CAAyBzC,MAAOC,KAC5B,kBAACxW,EAAYqR,SAAb,CAAsBzM,MAAO,CAAEoB,aAAY6R,kBACvC,kBAAC1X,EAAckR,SAAf,CACIzM,MAAO,CAAE9D,aAAYgX,kBAE1C,kBAAC,IAAD,CACCmB,KAAK,YACLjb,UAAU,WACV6N,UAAW,kBAAM,kBAAC,GAAD,CAAiBnG,QAASA,GAASC,OAAQA,QAE7D,kBAAC,IAAD,CACCsT,KAAK,iBACLjb,UAAU,gBACVkb,OAAQ,kBAAM,kBAAC,GAAD,SAEf,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAG,oBAE7B,kBAAC,EAAD,CACC/c,SAAUA,EACVC,YAAaA,EACbmJ,QAASA,GACTC,OAAQA,WCpII6D,QACW,cAA7B3M,OAAOY,SAAS6b,UAEe,UAA7Bzc,OAAOY,SAAS6b,UAEhBzc,OAAOY,SAAS6b,SAASC,MACvB,2D,aCZNC,IAASN,OACL,kBAAC,KAAD,KACI,kBAAC,GAAD,OAEJ1a,SAASib,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzI,MAAK,SAAA0I,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnB,QAAQmB,MAAMA,EAAMC,c","file":"static/js/main.2d652661.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us-states.03de8a7a.csv\";","import React from \"react\";\r\nimport { saveSvgAsPng } from \"save-svg-as-png\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport \"../styles/styles.css\";\r\nimport { IconButton, Tooltip, Grid } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\n\r\nexport const Footnotes = props => {\r\n    const { darkMode, setDarkMode } = props;\r\n\t\r\n    const useStyles = makeStyles(theme => ({\r\n        rootGrid: {\r\n            maxWidth: window.innerWidth,\r\n\t\t\tmargin: \"0 auto\",\r\n        },\r\n        footerButton: {\r\n            color: theme.palette.text.secondary,\r\n            marginRight: \"auto\",\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const pathArray = window.location.href.split(\"/\");\r\n    const queryID = `#${pathArray[pathArray.length - 1]}`;\r\n\r\n    const saveImage = () => {\r\n        saveSvgAsPng(document.querySelector(queryID), \"covid-19_chart.png\", {\r\n            backgroundColor: theme.palette.background.default,\r\n            encoderOptions: 1,\r\n            fonts: [\r\n                {\r\n                    url:\r\n                        \"../../styles/ralewaymedium/raleway-medium-webfont.woff\",\r\n                    format: \"application/font-woff\",\r\n                    text:\r\n                        \"@font-face {font-family: 'ralewaymedium'; src: url('./ralewaymedium/raleway-medium-webfont.woff2') format('woff2'), url('./ralewaymedium/raleway-medium-webfont.woff') format('woff'); font-weight: normal;font-style: normal;}\",\r\n                },\r\n            ],\r\n        });\r\n\t};\r\n\r\n    return (\r\n        <Grid container className={classes.rootGrid}>\r\n            <Grid item>\r\n                <Tooltip title=\"Save chart as image\" placement=\"right\">\r\n                    <IconButton\r\n                        onClick={saveImage}\r\n                        className={classes.footerButton}\r\n                    >\r\n                        <SaveIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\r\n                    <IconButton\r\n                        onClick={() => setDarkMode(!darkMode)}\r\n                        className={classes.footerButton}\r\n                    >\r\n                        <Brightness7Icon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","export const chartParams = {\r\n\tchartType: \"bubble\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\toutput: 'x-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'cases',\r\n\t\toptions: [\r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\toutput: 'y-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'deathsPerThousand',\r\n\t\talt1: 'deaths',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t], \r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\toutput: 'circle-area',\r\n\t\ttype: \"linear\",\r\n\t\tformat: \"none\",\r\n\t\tselected: \"population\",\r\n\t\toptions: [ \r\n\t\t\t\"population\",\r\n\t\t\t\"populationDensity\",\r\n\t\t\t\"gdp\",\r\n\t\t\t\"none\"\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\toutput: 'color-grouping',\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\toutput: 'time',\r\n\t\ttype: 'time',\r\n\t\tselected: \"dayOfOutbreak\",\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t\t\"date\"\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nexport const labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};","import React from 'react';\r\n\r\nconst dataContext = React.createContext();\r\n\r\nexport { dataContext };","import React from 'react';\r\n\r\nconst statesContext = React.createContext();\r\n\r\nexport { statesContext };","import React from 'react';\r\n\r\nexport const selectionContext = React.createContext();\r\n","import React, { useEffect, useContext, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\nimport { selectionContext } from '../../../context/selectionContext';\r\n\r\n// style \r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nexport const CirclesGapminder = (props) => {\r\n\tconst { data, dayCounter, selector, scales, opacityNotSel } = props;\r\n\tconst { xParam, yParam, zParam, cParam } = selector;\r\n\tconst { xScale, yScale, colorScale } = scales;\r\n\r\n\t// context and ref\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst { selectedCircles, setSelectedCircles } = useContext(selectionContext); \r\n\tconst circlesRef = useRef(null);\r\n\r\n\t// styles\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tcircle: {\r\n\t\t\tstroke: 'none',\r\n\t\t\topacity: opacityNotSel\r\n\t\t},\r\n\t\tcircleSelected: {\r\n\t\t\tstroke: \"#e91e63\",\r\n\t\t\tstrokeWidth: 2,\r\n\t\t\topacity: .8,\r\n\t\t},\r\n\t\tcircleLabel: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \".6rem\",\r\n\t\t},\r\n\t}));\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst bisectDay = d3.bisector(([d]) => d).left;\r\n\r\n\tfunction dataAt(day) {\r\n\t\treturn data.map(d => ({\r\n\t\t\tstate: d.state,\r\n\t\t\tregion: d.region,\r\n\t\t\t[xParam.selected]: valueAt(d[xParam.selected], day),\r\n\t\t\t[yParam.selected]: valueAt(d[yParam.selected], day)\r\n\t\t}));\r\n\t};\r\n\r\n\tfunction valueAt(values, day) {\r\n\t\tconst i = bisectDay(values, day, 0, values.length - 1);\r\n\t\tconst a = values[i];\r\n\r\n\t\tif (i > 0) {\r\n\t\t\tconst b = values[i - 1];\r\n\t\t\tconst t = (day - a[0]) / (b[0] - a[0]);\r\n\t\t\treturn a[1] * (1 - t) + b[1] * t;\r\n\t\t}\r\n\t\treturn a[1];\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst circle = d3.select(circlesRef.current).selectAll('circle')\r\n\t\t\t.data(dataAt(dayCounter), d => d)\r\n\t\t\t.join('circle')\r\n\t\t\t\t// .sort((a,b) => d3.descending(a[zParam.selected], b[zParam.selected]))\r\n\t\t\t\t.sort((a,b) => d3.descending(infoStates[a.state][zParam.selected], infoStates[b.state][zParam.selected]))\r\n\t\t\t\t.attr('r', d => zParam.selected === \"population\" \r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 1000000 \r\n\t\t\t\t\t: zParam.selected === \"populationDensity\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100\r\n\t\t\t\t\t: zParam.selected === \"gdp\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100000\r\n\t\t\t\t\t: 5\r\n\t\t\t\t)\r\n\t\t\t\t.attr('cx', d => xScale(d[xParam.selected]))\r\n\t\t\t\t.attr('cy', d => yScale(d[yParam.selected]))\r\n\t\t\t\t.attr('fill', d => colorScale(infoStates[d.state][cParam.selected]))\r\n\t\t\t\t.attr('id', d => `circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t.attr('class', d =>\r\n\t\t\t\t\tselectedCircles.selected.includes(d.state) \r\n\t\t\t\t\t\t? classes.circleSelected\r\n\t\t\t\t\t\t: classes.circle\r\n\t\t\t\t)\r\n\t\t\t\t.call(circle => circle\r\n\t\t\t\t\t.append('title')\r\n\t\t\t\t\t.text(d => [\r\n\t\t\t\t\t\td.state,\r\n\t\t\t\t\t\t`Day ${dayCounter}`,\r\n\t\t\t\t\t\txParam.selected === \"casesPerThousand\"\r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\",\r\n\t\t\t\t\t\tyParam.selected === \"casesPerThousand\" \r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\"\r\n\t\t\t\t\t\t].join(\"\\n\")\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\tcircle.on('mouseover', d => {\r\n\t\t\t\tconst mouseOverCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\t\t\t\r\n\t\t\t\tif (opacityNotSel !== 0 || selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tmouseOverCircle\r\n\t\t\t\t\t\t.attr('cursor', 'pointer')\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('mouseout', d => { \r\n\t\t\t\tconst mouseOutCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\tif (selectedCircles.notSelected.includes(d.state)) {\r\n\t\t\t\t\tmouseOutCircle\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('click', d => { \r\n\t\t\t\tif (selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: selectedCircles.selected.filter(s => s !== d.state),\r\n\t\t\t\t\t\tnotSelected: [...selectedCircles.notSelected, d.state]\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: [...selectedCircles.selected, d.state],\r\n\t\t\t\t\t\tnotSelected: selectedCircles.notSelected.filter(s => s !== d.state)\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst circleLabel = d3.select(circlesRef.current).selectAll(\"text\")\r\n\t\t\t\t.data(dataAt(dayCounter), d => d)\r\n\t\t\t\t.join(\"text\")\r\n\t\t\t\t\t.call(label => {\r\n\t\t\t\t\t\tconst length = d => {\r\n\t\t\t\t\t\t\tif (zParam.selected === \"population\") {\r\n\t\t\t\t\t\t\t\treturn infoStates[d.state][zParam.selected] / 1000000\r\n\t\t\t\t\t\t\t} else if (zParam.selected === \"populationDensity\") {\r\n\t\t\t\t\t\t\t\treturn infoStates[d.state][zParam.selected] / 100\r\n\t\t\t\t\t\t\t} else if (zParam.selected === \"gdp\") {\r\n\t\t\t\t\t\t\t\treturn infoStates[d.state][zParam.selected] / 100000\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn 4 \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t.attr(\"x\", d => xScale(d[xParam.selected]) + length(d))\r\n\t\t\t\t\t\t\t.attr(\"y\", d => yScale(d[yParam.selected]) - length(d))\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.attr(\"opacity\", d => selectedCircles.selected.includes(d.state)\r\n\t\t\t\t\t\t? .8\r\n\t\t\t\t\t\t: 0)\r\n\t\t\t\t\t.attr(\"class\", classes.circleLabel)\r\n\t\t\t\t\t.attr('cursor', 'context-menu')\r\n\t\t\t\t\t.text(d => infoStates[d.state].abbreviation);\r\n\t\t};\r\n\t}, [dayCounter, selector, scales, selectedCircles, opacityNotSel, theme]);\r\n\r\n\treturn (\r\n\t\t<>\t\t\r\n\t\t\t<g ref={circlesRef} />\r\n\t\t</>\r\n\t)\r\n};","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const OpacitySlider = (props) => {\r\n\tconst { opacityNotSel, setOpacityNotSel } = props;\r\n\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Typography variant=\"caption\">Non-selected opacity</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"opacity-slider\"\r\n\t\t\t\tvalue={opacityNotSel}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={.1}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={1}\r\n\t\t\t\tonChange={(e, newVal) => setOpacityNotSel(newVal)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const DayCounterSlider = (props) => {\r\n\tconst { dayCounter, setDayCounter } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant=\"caption\">Day of Outbreak</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"day-counter-slider\"\r\n\t\t\t\tvalue={dayCounter}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={1}\r\n\t\t\t\tmin={1}\r\n\t\t\t\tmax={60}\r\n\t\t\t\tonChange={(e, newVal) => setDayCounter(newVal)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// components\r\nimport { CirclesGapminder } from \"./CirclesGapminder\";\r\nimport { OpacitySlider } from \"../interface/OpacitySlider\";\r\nimport { DayCounterSlider } from \"../interface/DayCounterSlider\";\r\n\r\n// style\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst cParamCategories = {\r\n    region: [\"Northeast\", \"Midwest\", \"South\", \"West\"],\r\n    division: [\r\n        \"New England\",\r\n        \"Mid-Atlantic\",\r\n        \"East North Central\",\r\n        \"West North Central\",\r\n        \"South Atlantic\",\r\n        \"East South Central\",\r\n        \"West South Central\",\r\n        \"Mountain\",\r\n        \"Pacific\",\r\n    ],\r\n    governor: [\"Republican\", \"Democrat\", \"n/a\"],\r\n};\r\n\r\nexport const ChartGapminder = props => {\r\n    const { data, selector, wrapper, bounds } = props;\r\n    const { xParam, yParam, cParam } = selector;\r\n    const { wrapperWidth, wrapperHeight, margin } = wrapper;\r\n\tconst { width, height } = bounds;\r\n\r\n    const { dataStates } = useContext(dataContext);\r\n    const [scales, setScales] = useState(null);\r\n\tconst [dayCounter, setDayCounter] = useState(1);\r\n\tconst [opacityNotSel, setOpacityNotSel] = useState(0.6);\r\n\r\n\tconst theme = useTheme();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\trootSVG: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tverticalAlign: \"middle\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tchartWrapper: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t\tbounds: {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t},\r\n\t\taxes: {\r\n\t\t\tcolor: theme.palette.text.primary,\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tfontWeight: 700,\r\n\t\t\tfontSize: \".8rem\",\r\n\t\t},\r\n\t\tsliderContainer: {\r\n\t\t\tflexDirection: ()  => mqSmall ? \"column\" : \"row\",\r\n\t\t\tjustifyContent: () => mqSmall ? \"center\" : \"space-between\",\r\n\t\t\tmaxWidth: width,\r\n\t\t\tmargin: \"0 auto\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t\tslider: {\r\n\t\t\twidth: () => mqSmall ? \"95%\" : \"45%\",\r\n\t\t},\r\n\t}));\r\n\r\n    const classes = useStyles();\r\n\r\n    const boundsRef = useRef(null);\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const legendRef = useRef(null);\r\n\r\n    const renderChart = () => {\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[xParam.selected]))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[yParam.selected]))\r\n            .range([height, 0]);\r\n        let colorScale;\r\n\r\n        if (cParam.selected === \"region\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.region)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"division\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.division)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"governor\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.governor)\r\n                .range([\"#B61515\", \"#2E84D5\", \"#009C72\"]);\r\n        }\r\n\r\n        setScales({\r\n            xScale: xScale,\r\n            yScale: yScale,\r\n            colorScale: colorScale,\r\n        });\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n\r\n        const xAxis = d3\r\n            .select(xAxisRef.current)\r\n            .call(xAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"xLabel\"));\r\n\r\n        xAxis\r\n            .selectAll(\".xLabel\")\r\n            .data(xParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", width)\r\n            .attr(\"y\", 40)\r\n            .attr(\"class\", \"xLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(xParam.selected);\r\n\r\n        const yAxis = d3\r\n            .select(yAxisRef.current)\r\n            .call(yAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"yLabel\"));\r\n\r\n        yAxis\r\n            .selectAll(\".yLabel\")\r\n            .data(yParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", -40)\r\n            .attr(\"class\", \"yLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(yParam.selected);\r\n\r\n        // legend\r\n        d3.select(legendRef.current)\r\n            .selectAll(\"text\")\r\n            .data(cParamCategories[cParam.selected], d => d)\r\n            .join(\r\n                enter =>\r\n                    enter\r\n                        .append(\"text\")\r\n                        .attr(\"x\", \"1rem\")\r\n                        .attr(\"y\", -1000)\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(enter =>\r\n                            enter\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", (d, i) => -height + 10 + 20 * i)\r\n                        ),\r\n                update =>\r\n                    update\r\n                        .append(\"text\")\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .attr(\"y\", 60)\r\n                        .text(d => d)\r\n                        .call(update => update.transition().duration(750)),\r\n                exit =>\r\n                    exit\r\n                        .attr(\"fill\", \"gray\")\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(exit =>\r\n                            exit\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", 0)\r\n                                .remove()\r\n                        )\r\n            );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dataStates) {\r\n            renderChart();\r\n        }\r\n    }, [dataStates, selector]);\r\n\r\n    useEffect(() => {\r\n\t\td3.select(\".counter-display\")\r\n\t\t\t.join(\"text\")\r\n\t\t\t.text(`Day ${dayCounter}`);\r\n    }, [dayCounter]);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<div>\t\t\t\r\n\t\t\t\t<svg\r\n\t\t\t\t\tid=\"gapminder-app\"\r\n\t\t\t\t\theight={wrapperHeight}\r\n\t\t\t\t\twidth={wrapperWidth}\r\n\t\t\t\t\tclassName={classes.rootSVG}\r\n\t\t\t\t\tviewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<g\r\n\t\t\t\t\t\tref={boundsRef}\r\n\t\t\t\t\t\tclassName={classes.bounds}\r\n\t\t\t\t\t\ttransform={`translate(${margin.left}, ${margin.top})`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<g\r\n\t\t\t\t\t\t\tref={xAxisRef}\r\n\t\t\t\t\t\t\ttransform={`translate(0, ${height})`}\r\n\t\t\t\t\t\t\tclassName={classes.axes}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<g ref={yAxisRef} className={classes.axes} />\r\n\t\t\t\t\t\t<g\r\n\t\t\t\t\t\t\tref={legendRef}\r\n\t\t\t\t\t\t\ttransform={`translate(0, ${height})`}\r\n\t\t\t\t\t\t\tclassName={classes.legend}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{data && scales ? (\r\n\t\t\t\t\t\t\t<CirclesGapminder\r\n\t\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\t\tscales={scales}\r\n\t\t\t\t\t\t\t\tdayCounter={dayCounter}\r\n\t\t\t\t\t\t\t\topacityNotSel={opacityNotSel}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n            <Grid container className={classes.sliderContainer}>\r\n                <Grid item className={classes.slider}>\r\n\t\t\t\t\t<DayCounterSlider \r\n\t\t\t\t\t\tdayCounter={dayCounter}\r\n\t\t\t\t\t\tsetDayCounter={setDayCounter}\r\n\t\t\t\t\t/>\r\n                </Grid>\r\n\t\t\t\t<Grid item className={classes.slider}>\r\n\t\t\t\t\t<OpacitySlider \r\n\t\t\t\t\t\topacityNotSel={opacityNotSel} \r\n\t\t\t\t\t\tsetOpacityNotSel={setOpacityNotSel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext, forwardRef } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n];\r\n\r\nexport const FilterRegion = forwardRef((props, ref) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"region-btn\" ref={ref} dense={true} onClick={handleMenu}>\r\n\t\t\t\tRegion\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n});","import React, { useState, useContext, forwardRef } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"democrat\", name: \"Democrat\", type: \"Governor\", chartParam: \"governor\"},\r\n\t{id: \"republican\", name: \"Republican\", type: \"Governor\", chartParam: \"governor\"},\r\n];\r\n\r\n\r\nexport const FilterGovernor = forwardRef((props, ref) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"governor-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tGov. party\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"governor-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n});","import React, { useState, forwardRef } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem, Button } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterPopulation = forwardRef((props, ref) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\tconst populationOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"pop-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tPopulation\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"pop-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{populationOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id}\r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n});","import React, { useState, forwardRef } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterGdp = forwardRef((props, ref) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\tconst gdpOptions = [\r\n\t\t{id: \"gdp-high\", name: `Top ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"gdp-low\", name: `Bottom ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<MenuItem id=\"gdp-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tGDP\r\n\t\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"gdp-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{gdpOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n});","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../../context/selectionContext\";\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// components\r\nimport { FilterRegion } from \"./FilterRegion\";\r\nimport { FilterGovernor } from \"./FilterGovernor\";\r\nimport { FilterPopulation } from \"./FilterPopulation\";\r\nimport { FilterGdp } from \"./FilterGdp\";\r\n\r\n// style\r\nimport { Typography, Menu, Button, Chip, Paper, MenuList } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    chipContainer: {\r\n        listStyle: \"none\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    chip: {\r\n\t\tcolor: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.primary.contrastText,\r\n        padding: theme.spacing(0.5),\r\n        margin: theme.spacing(0.5),\r\n        fontSize: \".7rem\",\r\n    },\r\n}));\r\n\r\nexport const FilterBatch = props => {\r\n    const {\r\n        filters,\r\n        handleDeleteFilter,\r\n        handleFilter,\r\n        nStates,\r\n    } = props;\r\n    const { setSelectedCircles } = useContext(\r\n        selectionContext\r\n    );\r\n    const { infoStates } = useContext(statesContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = useStyles();\r\n\r\n    const handleMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    const handleFilterCategories = newFilter => {\r\n        const filtered = Object.keys(infoStates).filter(\r\n            s => infoStates[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilterValues = newFilter => {\r\n        const n = newFilter.n;\r\n        const filtered = Object.keys(infoStates)\r\n            .sort((a, b) =>\r\n                newFilter.sort === \"descending\"\r\n                    ? infoStates[b][newFilter.chartParam] -\r\n                      infoStates[a][newFilter.chartParam]\r\n                    : infoStates[a][newFilter.chartParam] -\r\n                      infoStates[b][newFilter.chartParam]\r\n            )\r\n            .slice(0, n);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilters = () => {\r\n        let selected = [];\r\n        let currSelection = [];\r\n        filters.forEach((d, i) => {\r\n            if (d.type === \"Region\" || d.type === \"Governor\") {\r\n                currSelection = handleFilterCategories(d);\r\n            } else if (d.type === \"Pop.\" || d.type === \"GDP\") {\r\n                currSelection = handleFilterValues(d);\r\n            }\r\n\r\n            selected =\r\n                selected.length < 1\r\n                    ? currSelection\r\n                    : currSelection.filter(s => selected.includes(s));\r\n        });\r\n\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: selected,\r\n            notSelected: prevState.all.filter(s => !selected.includes(s)),\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        filters.length > 0\r\n            ? handleFilters()\r\n            : setSelectedCircles(prevState => ({\r\n                  ...prevState,\r\n                  selected: [],\r\n                  notSelected: prevState.all,\r\n              }));\r\n    }, [filters]);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                id=\"select-filter\"\r\n                onClick={handleMenu}\r\n                className={classes.button}\r\n            >\r\n                New Filter\r\n                <ChevronRightIcon style={{ marginLeft: \"auto\" }} />\r\n            </Button>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={anchorEl ? Boolean(anchorEl.id === \"select-filter\") : false}\r\n                onClose={handleMenu}\r\n            >\r\n\t\t\t\t<MenuList>\r\n\t\t\t\t\t<FilterRegion handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterGovernor handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterPopulation handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t\t<FilterGdp handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t</MenuList>\r\n            </Menu>\r\n\r\n            <Paper component=\"ul\" className={classes.chipContainer}>\r\n                {filters.length > 0 ? (\r\n                    filters.map(f => {\r\n                        return (\r\n                            <li key={f.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    className={classes.chip}\r\n                                    label={f.name}\r\n                                    onDelete={() => handleDeleteFilter(f)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Typography>No filters</Typography>\r\n                )}\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n\tDivider,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\n\r\n// components\r\nimport {FilterBatch} from \"./pickers/FilterBatch\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../context/selectionContext\";\r\n\r\n// styles\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dashboard: {\r\n        alignItems: \"left\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.primary,\r\n\t},\r\n\tdashboardTitle: {\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: \"1.2rem\" \r\n\t},\r\n\tdashboardDivider: {\r\n\t\tbackgroundColor: theme.palette.primary.contrastText,\r\n\t\tmarginBottom: \".2rem\",\r\n\t},\r\n\tfilterBatch: {\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: theme.palette.text.primary,\r\n\t},\r\n}));\r\n\r\nexport const FilterDashboard = (props) => {\r\n    const { selectedCircles, setSelectedCircles } = useContext(selectionContext);\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst [filters, setFilters] = useState([]);\r\n\tconst [nStates, setNStates] = useState(12);\r\n\r\n    const handleChange = e => {\r\n        const state = e.target.name;\r\n\r\n        if (selectedCircles.selected.includes(state)) {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: selectedCircles.selected.filter(d => d !== state),\r\n                notSelected: [...selectedCircles.notSelected, state],\r\n            });\r\n        } else {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: [...selectedCircles.selected, state],\r\n                notSelected: selectedCircles.notSelected.filter(\r\n                    d => d !== state\r\n                ),\r\n            });\r\n        }\r\n\t};\r\n\r\n\tconst handleFilter = (newFilter) => {\r\n\t\tif (filters.length > 0) {\r\n\t\t\tsetFilters(prevState => [...prevState, newFilter])\r\n\t\t} else (\r\n\t\t\tsetFilters([newFilter])\r\n\t\t)\t\r\n\t};\r\n\t\r\n\tconst handleDeleteFilter = deletedFilter => {\r\n        const newFilterList = filters.filter(f => f.id !== deletedFilter.id);\r\n        setFilters(newFilterList);\r\n    };\r\n\r\n    const handleDeselectAll = () => {\r\n\t\tsetFilters([]);\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: [],\r\n            notSelected: prevState.all,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormGroup className={classes.dashboard}>\r\n\t\t\t\t<FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAll}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                /><br />\r\n\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tid=\"n-states\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tlabel=\"Filter n states\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tinputProps: {\r\n\t\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\t\tmax: 50\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdefaultValue={nStates}\r\n\t\t\t\t\tonChange={(e) => setNStates(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<Typography className={classes.dashboardTitle}>\r\n\t\t\t\t\tFilters\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider className={classes.dashboardDivider} />\r\n\t\t\t\t<FilterBatch \r\n\t\t\t\t\tclassName={classes.filterBatch}\r\n\t\t\t\t\tnStates={nStates}\r\n\t\t\t\t\tsetNStates={setNStates}\r\n\t\t\t\t\tfilters={filters}\r\n\t\t\t\t\tsetFilters={setFilters}\r\n\t\t\t\t\thandleDeleteFilter={handleDeleteFilter}\r\n\t\t\t\t\thandleFilter={handleFilter}\r\n\t\t\t\t/>\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.selected ? (\r\n                    selectedCircles.selected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.notSelected ? (\r\n                    selectedCircles.notSelected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n// style\r\nimport { FormControl, InputLabel, Select, MenuItem, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\trootContainer: {\r\n\t\tmaxWidth: 750,\r\n\t\tminWidth: 175,\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t},\r\n\tfilterSelector: {\r\n        minWidth: 150,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n    },\r\n    filterMenuItem: {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n    },\r\n}));\r\n\r\nexport const ParamPicker = (props) => {\r\n\tconst { selector, handleSelector } = props;\r\n\tconst theme = useTheme();\r\n\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\tconst classes = useStyles();\r\n\r\n    return (\r\n\t\t<Grid container className={classes.rootContainer} style={mqSmall \r\n\t\t\t? {flexDirection: \"column\", alignItems: \"center\"} \r\n\t\t\t: {flexDirection: \"row\"}}\r\n\t\t>\r\n            {Object.keys(selector).map((p) => {\r\n                return (\r\n                    <FormControl key={selector[p].output}>\r\n                        <InputLabel>{selector[p].output}</InputLabel>\r\n                        <Select\r\n                            name={p}\r\n                            value={selector[p].selected}\r\n                            onChange={handleSelector}\r\n                            className={classes.filterSelector}\r\n                        >\r\n                            {selector[p].options.map((o) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={o}\r\n                                        value={o}\r\n                                        className={classes.filterMenuItem}\r\n                                    >\r\n                                        {o}\r\n                                    </MenuItem>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { FilterDashboard } from \"../FilterDashboard\";\r\nimport { ParamPicker } from \"../pickers/ParamPicker\";\r\n\r\n// style\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Drawer,\r\n\tClickAwayListener,\r\n\tTooltip,\r\n\tuseMediaQuery,\r\n\tMenu,\r\n\tList\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n \r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n\t\ttoolbar: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tjustifyContent: \"flex-start\",\r\n\t\t},\r\n    },\r\n}));\r\n\r\nexport const Navbar = (props) => {\r\n    const { data, selector, handleSelector } = props;\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleDrawer = () => {\r\n        setOpen(!open);\r\n\t};\r\n\t\r\n\tconst handleParamMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n    const handleClickAway = (e) => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        disableRipple\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n\t\t\t\t\t{mqSmall \r\n\t\t\t\t\t\t? <span>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Chart parameters\">\r\n\t\t\t\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\t\t\t\tid=\"parameters-btn\" \r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuButton} \r\n\t\t\t\t\t\t\t\t\t\tonClick={handleParamMenu}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<AssessmentIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"parameters-btn\") : false}\r\n\t\t\t\t\t\t\t\t\tonClose={handleParamMenu}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\t\t<ParamPicker\r\n\t\t\t\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\t\t\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t: <ParamPicker\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/line-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/gapminder-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={classes.drawerHeader}\r\n                            style={{\r\n                                backgroundColor: theme.palette.primary.main,\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                edge=\"end\"\r\n                                onClick={handleDrawer}\r\n                                style={{\r\n                                    color: theme.palette.primary.contrastText,\r\n                                }}\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <FilterDashboard data={data} />\r\n                    </Drawer>\r\n                </ClickAwayListener>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n","export const gapminderData = async (data, stateInfo, chartParams) => {\r\n\tconst { xParam, yParam, tParam } = chartParams;\r\n\tlet newData = [];\r\n\tObject.keys(stateInfo).forEach((state,i) => {\r\n\t\tlet eachState = {\r\n\t\t\tstate: state,\r\n\t\t\tregion: stateInfo[state].region,\r\n\t\t\t[tParam.selected]: [],\r\n\t\t\t[xParam.selected]: [],\r\n\t\t\t[xParam.alt1]: [],\r\n\t\t\t[yParam.selected]: [],\r\n\t\t\t[yParam.alt1]: [],\r\n\t\t};\r\n\r\n\t\tconst filtered = data.filter(d => d.state === state);\r\n\t\tfiltered.forEach((d,i) => {\r\n\t\t\teachState[tParam.selected].push([d[tParam.selected], d[tParam.selected]]);\r\n\t\t\teachState[xParam.selected].push([d[tParam.selected], d[xParam.selected]]);\r\n\t\t\teachState[yParam.selected].push([d[tParam.selected], d[yParam.selected]]);\r\n\t\t\teachState[xParam.alt1].push([d[tParam.selected], d[xParam.alt1]]);\r\n\t\t\teachState[yParam.alt1].push([d[tParam.selected], d[yParam.alt1]]);\r\n\t\t});\r\n\t\tnewData.push(eachState);\r\n\t});\r\n\r\n\treturn newData;\r\n};","export const wrapper = {\r\n\twrapperWidth: window.innerWidth * .8,\r\n\twrapperHeight: window.innerHeight * .8,\r\n\tmargin: { \r\n\t\ttop: 40,\r\n\t\tright: 40,\r\n\t\tbottom: 60,\r\n\t\tleft: 60\r\n\t}\r\n  };\r\n  \r\nexport const bounds = {\r\n\twidth: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\r\n\theight: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\r\n};","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n// params\r\nimport { chartParams } from \"./appParams\";\r\n\r\n// components\r\nimport { ChartGapminder } from './chart/ChartGapminder'; \r\nimport { Navbar } from './interface/Navbar';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { selectionContext } from '../../context/selectionContext';\r\n\r\n// data\r\nimport stateInfo from '../../data/stateInfo.json';\r\nimport { gapminderData } from './gapminderData';\r\n\r\n// style\r\nimport { wrapper, bounds } from \"./styles/dimensions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const AppGapminder = () => {\r\n\tconst { margin } = wrapper;\r\n\tconst { width } = bounds;\r\n\r\n\tconst {dataStates} = useContext(dataContext);\r\n\tconst [data, setData] = useState(null);\r\n\tconst [selector, setSelector] = useState({\r\n\t\txParam: chartParams.xParam, \r\n\t\tyParam: chartParams.yParam, \r\n\t\tzParam: chartParams.zParam, \r\n\t\tcParam: chartParams.cParam, \r\n\t});\r\n\tconst [selectedCircles, setSelectedCircles] = useState({\r\n\t\tselected: [], \r\n\t\tnotSelected: Object.keys(stateInfo), \r\n\t\tall: Object.keys(stateInfo)\r\n\t});\r\n\r\n\t// style\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tnavbar: {\r\n\t\t\twidth: width,\r\n\t\t\tmarginLeft: margin.left,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'flex-start',\r\n\t\t}\r\n\t}));\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleSelector = (e) => {\r\n\t\tconst param = e.target.name;\r\n\r\n\t\tsetSelector({\r\n\t\t\t...selector,\r\n\t\t\t[param]: {\r\n\t\t\t\t...selector[param],\r\n\t\t\t\tselected: e.target.value\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataStates.length > 0) {\r\n\t\t\tgapminderData(dataStates, stateInfo, chartParams)\r\n\t\t\t\t.then(res => setData(res))\r\n\t\t}\r\n\t}, [dataStates]);\r\n\r\n\treturn (\r\n\t\t<selectionContext.Provider value={{selectedCircles, setSelectedCircles}}>\r\n\t\t\t<Navbar \t\t\t\t\t\t\t\t\r\n\t\t\t\tdata={data} \r\n\t\t\t\tselector={selector} \r\n\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\tclassName={classes.navbar}\r\n\t\t\t/>\r\n\t\t\t<div transform={`translate(${margin.left}, ${margin.top})`}>\r\n\t\t\t\t{data \r\n\t\t\t\t\t&& <ChartGapminder \r\n\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\twrapper={wrapper} \r\n\t\t\t\t\t\tbounds={bounds} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</selectionContext.Provider>\r\n\t)\r\n};\r\n","import * as d3 from \"d3\";\r\n\r\nconst date = {\r\n  dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\r\n  dateParser: d3.timeParse(\"%m-%d-%y\"),\r\n};\r\n\r\nconst dimensions = {\r\n  width: window.innerWidth,\r\n  height: 750,\r\n  margin: {\r\n    top: 80,\r\n    right: 100,\r\n    bottom: 140,\r\n    left: 100,\r\n  },\r\n};\r\n\r\nconst bounded = {\r\n  width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\r\n  height: dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\r\n};\r\n\r\nexport { date, dimensions, bounded };\r\n","import { useEffect, useContext } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\n\r\n// constants\r\nimport { date } from '../util/constants';\r\n\r\nexport const MouseMove = (props) => {\r\n\tconst { focus, overlay, linesStates, selectedStates, bounds } = props;\r\n    const { width, height } = bounds;\r\n\tconst { dataStates } = useContext(dataContext);\r\n\t\r\n    const xScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.dayOfOutbreak)).range([0, width]);\r\n    const yScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.casesPerThousand)).range([height, 0]);\r\n\r\n    useEffect(() => {\r\n        if (overlay && selectedStates) {\r\n\t\t\t\r\n            overlay.on('mousemove', mousemove);\r\n\r\n            let frozen = false;\r\n\r\n            function mousemove() {\r\n                let x0 = xScale.invert(d3.mouse(this)[0]);\r\n\t\t\t\tconst bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\r\n\r\n                Object.keys(selectedStates).sort()\r\n                    .filter(s => selectedStates[s].selected === true)\r\n                    .forEach(state => {\r\n                        const dataEachState = dataStates.filter(d => d.state === state);\r\n                        const stateHTML = selectedStates[state].htmlFormat;\r\n                        const i = bisectDate(dataEachState, x0, 0);\r\n\r\n                        let dataEachStateRangeY = dataEachState[i]\r\n                            ? dataEachState[i].casesPerThousand \r\n                            : dataEachState[dataEachState.length - 1].casesPerThousand;\r\n                        let dataEachStateRangeX = dataEachState[i] \r\n                            ? dataEachState[i].dayOfOutbreak \r\n                            : dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                        let dataEachStateRangeDate = dataEachState[i] \r\n                            ? date.dateFormatter(dataEachState[i].date) \r\n                            : date.dateFormatter(dataEachState[dataEachState.length - 1].date);\r\n                        let dataEachStateRangeCases = dataEachState[i]\r\n                            ? dataEachState[i].cases \r\n                            : dataEachState[dataEachState.length - 1].cases;\r\n\r\n                        const toggleFreeze = () => {\r\n\t\t\t\t\t\t\tfrozen = !frozen;\r\n                        };\r\n\r\n                        overlay.on('click', toggleFreeze);\r\n\r\n                        if (!frozen) {\r\n                            focus.select(`#circle-${stateHTML}`)\r\n                                .attr('cy', yScale(dataEachStateRangeY))\r\n                                .attr('cx', xScale(dataEachStateRangeX));\r\n\r\n                            focus.select(`#d-label-${stateHTML}`)\r\n                                .text(`${selectedStates[state].abbreviation} => Day ${dataEachStateRangeX} (${dataEachStateRangeDate.split(\"-\").slice(0,2).join(\"-\")})`)\r\n\t\t\t\t\t\t\t\t.attr('fill', selectedStates[state].color)\r\n\r\n                            focus.select(`#d-label-b-${stateHTML}`)\r\n                                .text(`${dataEachStateRangeY.toFixed(3)} (${dataEachStateRangeCases} tot.)`)\r\n                                .attr('fill', selectedStates[state].color)\r\n                        } \r\n                    });\r\n                }\r\n\t\t\t}\r\n\t}, [linesStates]);\r\n\t\r\n    return null;\r\n};","import React, { useState, useContext, useEffect, Fragment } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// functions\r\nimport { MouseMove } from \"../../util/MouseMove\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// style\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\nexport const Line = props => {\r\n    const {\r\n        focus,\r\n\t\toverlay,\r\n        selectedStates,\r\n\t\tbounds,\r\n    } = props;\r\n    const { width, height } = bounds;\r\n\r\n    // context\r\n    const { dataStates } = useContext(dataContext);\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n    // style\r\n    const theme = useTheme();\r\n\tconst mqMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\tconst mqLarge = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n\tconst [linesStates, setLinesStates] = useState([]);\r\n\r\n\tconst filterStates = statesObject => {\r\n\t\tlet filtered = Object.keys(statesObject)\r\n\t\t\t.sort()\r\n\t\t\t.filter(s => statesObject[s].selected === true);\r\n\t\treturn filtered;\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if (selectedStates && dataStates.length > 0) {\r\n\t\t\t// Scales\r\n            const xScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n                .range([0, width]);\r\n            const yScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n                .range([height, 0]);\r\n\r\n            // Lines\r\n            const lineGenerator = d3\r\n                .line()\r\n                .x(d => xScale(d.dayOfOutbreak))\r\n                .y(d => yScale(d.casesPerThousand));\r\n\r\n            const linesObject = {};\r\n\r\n\t\t\tconst filtered = filterStates(selectedStates)\r\n\t\t\tfiltered\r\n                .forEach((state, i) => {\r\n                    const dataEachState = dataStates.filter(\r\n                        d => d.state === state\r\n                    );\r\n                    // Line label placement\r\n                    const lastDayOfOutbreak =\r\n                        dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                    const lastCasesPerThousand =\r\n                        dataEachState[dataEachState.length - 1]\r\n                            .casesPerThousand;\r\n\r\n                    // markers for lockdown date\r\n                    const lockdownDate = selectedStates[state].lockdown;\r\n                    const lockdownDay =\r\n                        (lockdownDate - dataEachState[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1;\r\n                    const lockdownDayDatum = dataEachState.filter(\r\n                        d => d.dayOfOutbreak === lockdownDay\r\n                    )[0];\r\n\r\n                    if (lockdownDayDatum) {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                            lockdownMarkerX: xScale(lockdownDay),\r\n                            lockdownMarkerY: yScale(\r\n                                lockdownDayDatum.casesPerThousand\r\n                            ),\r\n                        };\r\n                    } else {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                        };\r\n                    }\r\n                });\r\n            setLinesStates(linesObject);\r\n        };\r\n\t}, [dataStates, selectedStates, theme]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedStates) {\r\n\t\t\tconst filtered = filterStates(selectedStates);\r\n\r\n\t\t\tfiltered\r\n\t\t\t.forEach((state, i) => {\r\n\t\t\t\tconst stateHTML = infoStates[state].htmlFormat;\r\n\t\t\t\t// for mousemove\r\n\t\t\t\tlet xShift = 0;\r\n\t\t\t\tlet yShift = 0;\r\n\r\n\t\t\t\tif (i > 11) {\r\n\t\t\t\t\tif (mqLarge) {\r\n\t\t\t\t\t\txShift = 180;\r\n\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t} else if (mqMedium) {\r\n\t\t\t\t\t\txShift = 120;\r\n\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\r\n\t\t\t\tfocus\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"id\", `circle-${stateHTML}`)\r\n\t\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t\t\t.attr(\"fill\", selectedStates[state].color)\r\n\t\t\t\t\t.attr(\"stroke\", theme.palette.text.primary);\r\n\r\n\t\t\t\tif (mqMedium ? i < 24 : i < 12) {\r\n\t\t\t\t\tfocus\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"id\", `d-label-${stateHTML}`)\r\n\t\t\t\t\t\t.attr(\"x\", 10 + xShift)\r\n\t\t\t\t\t\t.attr(\"y\", d => mqMedium ? 10 + i * 40 - yShift : 10 + i * 30)\r\n\t\t\t\t\t\t.style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n\t\t\t\t\t\t.style(\r\n\t\t\t\t\t\t\t\"font-family\",\r\n\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfocus\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"id\", `d-label-b-${stateHTML}`)\r\n\t\t\t\t\t\t.attr(\"x\", 10 + xShift)\r\n\t\t\t\t\t\t.attr(\"y\", d => mqMedium ? 25 + i * 40 - yShift : 25 + i * 30)\r\n\t\t\t\t\t\t.style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n\t\t\t\t\t\t.style(\r\n\t\t\t\t\t\t\t\"font-family\",\r\n\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tfocus.selectAll(\"circle\").remove();\r\n\t\t\tfocus.selectAll(\"text\").remove();\r\n        };\r\n\t}, [linesStates]);\r\n\r\n    return (\r\n        <>\t\r\n            <MouseMove\r\n                focus={focus}\r\n\t\t\t\toverlay={overlay}\r\n\t\t\t\tlinesStates={linesStates}\r\n\t\t\t\tbounds={bounds}\r\n                {...props}\r\n            />\r\n            {dataStates.length > 0 ? (\r\n                Object.keys(linesStates)\r\n                    .sort()\r\n                    .map((state, i) => {\r\n                        const stateHTML = infoStates[state].htmlFormat;\r\n\r\n                        return (\r\n\t\t\t\t\t\t\t<Fragment key={state}>\r\n\t\t\t\t\t\t\t\t<g id={`bounds-render-${stateHTML}`}>\r\n\t\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\t\t\tstroke={selectedStates[state].color}\r\n\t\t\t\t\t\t\t\t\t\tstrokeWidth={2.5}\r\n\t\t\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\r\n\t\t\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\t\t\t\t\t\td={linesStates[state].line}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<circle\r\n\t\t\t\t\t\t\t\t\t\tid=\"line-marker-lockdown\"\r\n\t\t\t\t\t\t\t\t\t\tr={4}\r\n\t\t\t\t\t\t\t\t\t\tfill={\r\n\t\t\t\t\t\t\t\t\t\t\tlinesStates[state].lockdownMarkerX\r\n\t\t\t\t\t\t\t\t\t\t\t\t? selectedStates[state].color\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"none\"\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcx={linesStates[state].lockdownMarkerX}\r\n\t\t\t\t\t\t\t\t\t\tcy={linesStates[state].lockdownMarkerY}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<text\r\n\t\t\t\t\t\t\t\t\t\tid={`line-label-${stateHTML}`}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"line-label\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tfill: theme.palette.text.primary,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"14px\",\r\n\t\t\t\t\t\t\t\t\t\t\tfontFamily:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tx={linesStates[state].lineLabelX}\r\n\t\t\t\t\t\t\t\t\t\ty={linesStates[state].lineLabelY}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{selectedStates[state].abbreviation}\r\n\t\t\t\t\t\t\t\t\t</text>\r\n\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t</Fragment>\r\n                        );\r\n                    })\r\n            ) : (\r\n                <g></g>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// Components\r\nimport { Line } from \"./Line\";\r\n\r\n// Context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// Styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const ChartCovidCompare = props => {\r\n\tconst { wrapper, bounds } = props;\r\n\tconst { wrapperWidth, wrapperHeight, margin } = wrapper;\r\n\tconst { width, height } = bounds;\r\n\tconst { dataStates } = useContext(dataContext);\r\n\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\trootSVG: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tverticalAlign: \"middle\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tbounds: {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \"1.2rem\",\r\n\t\t},\r\n\t\taxes: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t},\r\n\t\taxisLabel: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \".8rem\",\r\n\t\t},\r\n\t\tfootnotes: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \".6rem\",\r\n\t\t},\r\n\t}));\r\n\tlet classes = useStyles();\r\n\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const svgRef = useRef(null);\r\n\tconst boundsRef = useRef(null);\r\n\r\n\tconst getFocus = () => {\r\n\t\treturn d3\r\n\t\t\t.select(boundsRef.current)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"focus\")\r\n\t\t\t.style(\"display\", \"none\");\r\n\t};\r\n\tconst focus = getFocus();\r\n\r\n\tconst getOverlay = () => {\r\n\t\treturn d3\r\n\t\t\t.select(boundsRef.current)\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"overlay\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.attr(\"opacity\", \"0\")\r\n\t\t\t.on(\"mouseover\", () => focus.style(\"display\", null));\r\n\t};\r\n\tconst overlay = getOverlay();\r\n\r\n    useEffect(() => {\r\n        // Scales\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n            .range([height, 0]);\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n        d3.select(xAxisRef.current).call(xAxisGenerator);\r\n        d3.select(yAxisRef.current).call(yAxisGenerator);\r\n\t}, [dataStates]);\r\n\r\n    return (\r\n\t\t<>\r\n\t\t\t<svg \r\n\t\t\t\tid=\"line-app\" \r\n\t\t\t\theight={wrapperHeight} \r\n\t\t\t\twidth={wrapperWidth} \r\n\t\t\t\tref={svgRef}\r\n\t\t\t\tclassName={classes.rootSVG}\r\n\t\t\t\tviewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\r\n\t\t\t\t// preserveAspectRatio=\"xMinYMin meet\"\r\n\t\t\t>\r\n                <text\r\n                    className={classes.title}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate (${\r\n                        margin.left + width / 2\r\n                    }, ${margin.top / 2})`}\r\n                >\r\n                    COVID-19 US State Comparison\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${margin.left + width / 2}, ${\r\n                        height + margin.top + 40\r\n                    })`}\r\n                >\r\n                    Day of Outbreak\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${\r\n                        margin.left * .6\r\n                    }, ${height / 2}) rotate(-90)`}\r\n                >\r\n                    Cases per 1000 people\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 60\r\n                    })`}\r\n                >\r\n                    *Data from The New York Times, based on reports from state\r\n                    and local health agencies.\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 80\r\n                    })`}\r\n                >\r\n                    **Population data from US Census Bureau (2019).\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 100\r\n                    })`}\r\n                >\r\n                    ***2/27 is earliest possible 'Day 1,' since prior cases were\r\n                    isolated and may skew insights of \"community spread\"\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 120\r\n                    })`}\r\n                >\r\n                    †Legend will display up to 24 states (alphabetical order)\r\n                </text>\r\n                <g\r\n                    id=\"bounds\"\r\n                    transform={`translate(${margin.left}, ${margin.top})`}\r\n                    ref={boundsRef}\r\n                >\r\n                    <g\r\n                        ref={yAxisRef}\r\n                        id=\"y-axis\"\r\n                        style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    />\r\n                    <g\r\n                        ref={xAxisRef}\r\n                        id=\"x-axis\"\r\n                        transform={`translate(0,${height})`}\r\n                        style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    />\r\n                    <Line focus={focus} overlay={overlay} {...props} />\r\n                </g>\r\n            </svg>\r\n\t\t</>\r\n    );\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React, { forwardRef } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterValues = forwardRef((props, ref) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id}\r\n\t\t\t\t\t\tref={ref} \r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nFilterValues.propTypes = {\r\n\tfilterOptions: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"GDP\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"realGDP2019\")\r\n\t\tn: PropTypes.number.isRequired, // number of cases (ie. rows or documents) to filter\r\n\t\tsort: PropTypes.string.isRequired // \"ascending or descending\"\r\n\t})),\r\n};","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterCases = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"cases-high\", name: `Top ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-low\", name: `Bottom ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-high\", name: `Top ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-low\", name: `Bottom ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"cases-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Case\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"cases-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterPopulation = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"population-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Population\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"population-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React, {forwardRef} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterCategories = forwardRef((props, ref) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t}; \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n});\r\n\r\nFilterCategories.propTypes = {\r\n\tfilterOptions: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"Region\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"region\")\r\n\t})),\r\n};","// WRAPPER COMPONENT (FilterCategories)\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// components\r\nimport { FilterCategories } from \"../components/FilterCategories\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterRegion = (props) => {\r\n\tconst { handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"region-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Region\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterCategories \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\r\n\r\n// components\r\nimport { FilterCases } from \"./FilterCases\";\r\nimport { FilterPopulation } from \"./FilterPopulation\";\r\nimport { FilterRegion } from \"./FilterRegion\";\r\n\r\n// context\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\trootContainer: {\r\n\t\tmaxWidth: 550,\r\n\t\tminWidth: 175,\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t},\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const BatchSelect = props => {\r\n    const { selectedStates, setSelectedStates } = props;\r\n\r\n    // ref and context\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n    // assign\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedFilter, setSelectedFilter] = useState(null);\r\n\r\n\t// style\r\n\tconst theme = useTheme();\r\n\tconst classes = useStyles();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleMenu = e => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\t\r\n\tconst handleSelectedFilter = (newSelectedFilter) => {\r\n\t\tsetSelectedFilter(newSelectedFilter);\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst handleFilterCategories = (newFilter, info) => {\r\n        const filtered = Object.keys(info).filter(\r\n            s => info[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n    const handleFilterValues = (newFilter, info) => {\r\n\t\tconst n = newFilter.n;\r\n\t\tlet filtered;\r\n\r\n\t\tfiltered = Object.keys(info)\r\n\t\t.sort((a, b) =>\r\n\t\t\tnewFilter.sort === \"descending\"\r\n\t\t\t\t? info[b][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[a][newFilter.chartParam]\r\n\t\t\t\t: info[a][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[b][newFilter.chartParam]\r\n\t\t)\r\n\t\t.slice(0, n);\r\n\t\t\t\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (selectedFilter) {\r\n\t\t\tconst newSelection = selectedFilter.n \r\n\t\t\t\t? handleFilterValues(selectedFilter, infoStates)\r\n\t\t\t\t: handleFilterCategories(selectedFilter, infoStates);\r\n\t\t\tsetSelectedStates(newSelection);\r\n\t\t}\r\n\t},[selectedFilter]);\r\n\r\n    return (\r\n\t\t<Grid container className={classes.rootContainer}\r\n\t\t\tstyle={mqSmall\r\n\t\t\t? {flexDirection: \"column\", alignItems: \"center\"}\r\n\t\t\t: {flexDirection: \"row\"}}\r\n\t\t>\r\n\t\t\t<FilterCases\r\n\t\t\t\taria-controls=\"cases-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n\t\t\t<FilterPopulation\r\n\t\t\t\taria-controls=\"population-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n\t\t\t<FilterRegion\r\n\t\t\t\taria-controls=\"region-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n        </Grid>\r\n    );\r\n};","import React from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\n\r\n// styles\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const Dashboard = props => {\r\n    const {\r\n        selectedStates,\r\n        handleSelectedStates,\r\n        handleSelectAllStates,\r\n        handleDeselectAllStates,\r\n    } = props;\r\n\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup\r\n                style={{\r\n                    alignItems: \"left\",\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.text.primary,\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    id=\"select-all\"\r\n                    label=\"Select All\"\r\n                    name=\"Select All\"\r\n                    onClick={handleSelectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"selector-all\"\r\n                            name=\"select-all\"\r\n                            style={{ color: \"white\" }}\r\n                        >\r\n                            <CheckIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === true)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === false)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    ClickAwayListener,\r\n    Drawer,\r\n    Divider,\r\n    Menu,\r\n\tTooltip,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { BatchSelect } from \"../pickers/BatchSelect\";\r\nimport { Dashboard } from \"../pickers/Dashboard\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n\t\tdisplay: \"flex\",\r\n    },\r\n    appBar: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const Navbar = props => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst theme = useTheme();\r\n\tconst classes = useStyles();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickAway = e => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleFilterMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                        disableRipple\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n\t\t\t\t\t{mqSmall\r\n\t\t\t\t\t\t? <>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Chart filters\"> \r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tid=\"filters-btn-cc\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleFilterMenu}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<AssessmentIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"filters-btn-cc\") : false}\r\n\t\t\t\t\t\t\t\tonClose={handleFilterMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BatchSelect handleFilterMenu={handleFilterMenu} {...props} />\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</> \r\n\t\t\t\t\t\t: <BatchSelect {...props} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/line-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/gapminder-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ color: theme.palette.text.primary }}\r\n                >\r\n                    <div\r\n                        className={classes.drawerHeader}\r\n                        style={{ backgroundColor: theme.palette.primary.main }}\r\n                    >\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            edge=\"end\"\r\n                            onClick={handleDrawerClose}\r\n                            style={{\r\n                                color: theme.palette.primary.contrastText,\r\n                            }}\r\n                        >\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <Dashboard {...props} />\r\n                </Drawer>\r\n            </ClickAwayListener>\r\n        </div>\r\n    );\r\n};\r\n","// Chart params: define params for drawing axes and chart\r\nexport const chartParams = {\r\n\tchartType: \"line\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'dayOfOutbreak',\r\n\t\talt1: null,\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'deathsPerThousand',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t],\r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\ttype: null,\r\n\t\tformat: null,\r\n\t\tselected: null,\r\n\t\toptions: [ \r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\ttype: null,\r\n\t\tselected: null,\r\n\t\toptions: [\r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nexport const labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// components\r\nimport { ChartCovidCompare } from \"./chart/ChartCovidCompare\";\r\nimport { Navbar } from './interface/Navbar';\r\n\r\n// params\r\nimport { chartParams, labelParams } from \"./appParams\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// styles\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const AppCovidCompare = ({ wrapper, bounds }) => {\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n\tconst [selectedStates, setSelectedStates] = useState(null);\r\n\r\n\tconst mqOrientPortrait = useMediaQuery(\"(orientation: portrait)\");\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tcontainer: {\r\n\t\t\tpadding: 0,\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexDirection: () => mqOrientPortrait\r\n\t\t\t\t\t? \"row\"\r\n\t\t\t\t\t: \"column\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t},\r\n\t\titem: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\tflexBasis: \"100%\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleSelectedStates = (e) => {\r\n        setSelectedStates({\r\n            ...selectedStates,\r\n            [e.target.name]: {\r\n                ...selectedStates[e.target.name],\r\n                selected: e.target.checked\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: true\r\n            }\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    const handleDeselectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: false\r\n            }\r\n         });\r\n        setSelectedStates(revisedStates);\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (infoStates) {\r\n\t\t\tsetSelectedStates(infoStates);\r\n\t\t}\r\n\t }, [infoStates]);\r\n\r\n  return (\r\n    <Grid className={classes.container}>\r\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t<Grid item className={classes.item}>\r\n\t\t\t\t<Navbar \r\n\t\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\thandleSelectedStates={handleSelectedStates}\r\n\t\t\t\t\thandleSelectAllStates={handleSelectAllStates}\r\n\t\t\t\t\thandleDeselectAllStates={handleDeselectAllStates}\r\n\t\t\t\t/>\r\n\t\t\t\t<ChartCovidCompare\r\n\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\tlabelParams={labelParams}\r\n\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\twrapper={wrapper}\r\n\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</MuiPickersUtilsProvider>\r\n    </Grid>\r\n  );\r\n};","export const wrapper = {\r\n\twrapperWidth: window.innerWidth * .9,\r\n\twrapperHeight: window.innerHeight * .9,\r\n\tmargin: { \r\n\t\ttop: 40,\r\n\t\tright: 40,\r\n\t\tbottom: 130,\r\n\t\tleft: 60\r\n\t}\r\n  };\r\n  \r\nexport const bounds = {\r\n\twidth: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\r\n\theight: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\r\n};","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst darkPrimary = \"#000018\";\r\nconst darkSecondary = \"#1c847f\";\r\nconst darkText = \"#fff\";\r\nconst darkBackground = \"#29293d\";\r\n\r\nconst lightPrimary = \"#1c847f\";\r\nconst lightText = \"#29293d\";\r\nconst lightBackground = \"#fff\";\r\n\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"#000018\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: darkSecondary,\r\n            contrastText: darkText,\r\n        },\r\n        text: {\r\n            primary: \"#fff\",\r\n            secondary: \"#fff\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: darkBackground,\r\n\t\t},\r\n        contrastThreshold: 3,\r\n    },\r\n    typography: {\r\n        fontFamily: [\"ralewaymedium\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\r\n            \",\"\r\n        ),\r\n    },\r\n    overrides: {\r\n        MuiFormControlLabel: {\r\n            root: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n            },\r\n            text: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiBase: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiInputBase: {\r\n            root: {\r\n\t\t\t\tcolor: \"#fff\",\r\n                maxWidth: 115,\r\n                paddingLeft: 10,\r\n            },\r\n        },\r\n        MuiPickersCalendarHeader: {\r\n            switchHeader: {\r\n                backgroundColor: darkPrimary,\r\n            },\r\n        },\r\n        MuiPickersDay: {\r\n            day: {\r\n                color: \"#29293d\",\r\n            },\r\n            daySelected: {\r\n                backgroundColor: \"#29293d\",\r\n            },\r\n            dayDisabled: {\r\n                color: \"#29293d\",\r\n            },\r\n            current: {\r\n                color: \"#29293d\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const getTheme = (theme, darkMode) => {\r\n\tif (darkMode) {\r\n \t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"dark\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#000018\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#29293d\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#fff\",\r\n\t\t\t\t\tsecondary: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\toverrides: {\r\n\t\t\t\t...theme.overrides,\r\n\t\t\t\tMuiButton: {\r\n\t\t\t\t\troot: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t} else {\r\n\t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"light\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#1c847f\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#29293d\",\r\n\t\t\t\t\tsecondary: \"#000018\",\r\n        \t\t},\r\n\t\t\t},\r\n\t\t\toverrides: {\r\n\t\t\t\t...theme.overrides,\r\n\t\t\t\tMuiButton: {\r\n\t\t\t\t\troot: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tMuiInputBase: {\r\n\t\t\t\t\tinput: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n  }","export const colors = [\r\n\t\"#7FFFD4\",\r\n\t\"#8EE5EE\",\r\n\t\"#76EE00\",\r\n\t\"#D2691E\",\r\n\t\"#FF7F50\",\r\n\t\"#00CDCD\",\r\n\t\"#DC143C\",\r\n\t\"#00EE00\",\r\n\t\"#00EE76\",\r\n\t\"#8B5A2B\",\r\n\t\"#EE5C42\",\r\n\t\"#00C5CD\",\r\n\t\"#EE3A8C\",\r\n\t\"#9ACD32\",\r\n\t\"#43CD80\",\r\n\t\"#EE0000\",\r\n\t\"#7D26CD\",\r\n\t\"#EE9A00\",\r\n\t\"#C71585\",\r\n\t\"#9F79EE\",\r\n\t\"#8B5742\",\r\n\t\"#CDC673\",\r\n\t\"#218868\",\r\n\t\"#CD5555\",\r\n\t\"#CD9B1D\",\r\n\t\"#79CDCD\",\r\n\t\"#9BCD9B\",\r\n\t\"#FF7F00\",\r\n\t\"#EE3B3B\",\r\n\t\"#BF3EFF\",\r\n\t\"#00CED1\",\r\n\t\"#EE1289\",\r\n\t\"#228B22\",\r\n\t\"#CDAD00\",\r\n\t\"#00CD00\",\r\n\t\"#EE6AA7\",\r\n\t\"#CD5555\",\r\n\t\"#CD8C95\",\r\n\t\"#20B2AA\",\r\n\t\"#CD8162\",\r\n\t\"#CDCDB4\",\r\n\t\"#CD00CD\",\r\n\t\"#E066FF\",\r\n\t\"#00FA9A\",\r\n\t\"#C71585\",\r\n\t\"#FF4500\",\r\n\t\"#EE799F\",\r\n\t\"#CD96CD\",\r\n\t\"#912CEE\",\r\n\t\"#EEB4B4\",\r\n\t\"#4EEE94\"\r\n  ];","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport * as d3 from \"d3\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// data\r\nimport USStates from \"./data/us-states.csv\";\r\nimport stateInfo from \"./data/stateInfo.json\";\r\n\r\n// components\r\nimport { Footnotes } from \"./components/Footnotes\";\r\nimport { AppGapminder } from \"./components/appGapminder/AppGapminder\";\r\nimport { AppCovidCompare } from \"./components/appCovidCompare/AppCovidCompare\";\r\n\r\n// context\r\nimport { dataContext } from \"./context/dataContext\";\r\nimport { statesContext } from \"./context/statesContext\";\r\n\r\n// styles\r\nimport { wrapper, bounds } from \"./styles/dimensions\";\r\nimport { theme, getTheme } from \"./styles/theme\";\r\nimport { colors } from \"./styles/colors\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n    const [dataStates, setDataStates] = useState([]);\r\n    const [infoStates, setInfoStates] = useState(null);\r\n\tconst [darkMode, setDarkMode] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // clean stateInfo data and assign selectedStates\r\n        const dateParser = d3.timeParse(\"%m-%d-%y\");\r\n        const revisedStates = {};\r\n\r\n        Object.keys(stateInfo).forEach((s, i) => {\r\n            revisedStates[s] = {\r\n                ...stateInfo[s],\r\n                lockdown: stateInfo[s].lockdown.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdown\r\n                    : dateParser(stateInfo[s].lockdown),\r\n                lockdownEnd: stateInfo[s].lockdownEnd.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdownEnd\r\n                    : dateParser(stateInfo[s].lockdownEnd),\r\n                color: colors[i],\r\n            };\r\n        });\r\n\r\n        const nested = d3\r\n            .nest()\r\n            .key(d => d.state)\r\n            .entries(dataStates);\r\n\r\n        Object.keys(nested).forEach(i => {\r\n            const s = nested[i].key;\r\n\r\n            const lastIndex = nested[i].values.length - 1;\r\n            const latestCaseCount = nested[i].values[lastIndex].cases;\r\n            const latestCaseCountPerThou =\r\n                (nested[i].values[lastIndex].cases / stateInfo[s].population) *\r\n                1000;\r\n\r\n            revisedStates[s] = {\r\n                ...revisedStates[s],\r\n                latestCaseCount: latestCaseCount,\r\n                latestCaseCountPerThou: latestCaseCountPerThou,\r\n            };\r\n        });\r\n        setInfoStates(revisedStates);\r\n    }, [dataStates]);\r\n\r\n    useEffect(() => {\r\n        // get COVID-19 state data\r\n        d3.csv(USStates).then(data => {\r\n            // clean data\r\n            const dateParser = d3.timeParse(\"%Y-%m-%d\");\r\n\r\n            data.forEach(d => {\r\n                d.date = dateParser(d.date);\r\n                d.fips = parseInt(d.fips);\r\n                d.cases = parseInt(d.cases);\r\n                d.deaths = parseInt(d.deaths);\r\n            });\r\n\r\n            // Filter data:\r\n            // Prior to 02-27-20, Washington had 1 or 2 cases from January.\r\n            // However, these were isolated cases and this graph is trying to track Covid-19 spread\r\n            // Also filter out territories Guam, Puerto Rico, etc.\r\n            data = data.filter(\r\n                d =>\r\n                    d.date > new Date(2020, 1, 26) &&\r\n                    Object.keys(stateInfo).includes(d.state)\r\n            );\r\n\r\n            // Normalize data:\r\n            // Add \"dayOfOutbreak\" to show elapsed time\r\n            // Add state population\r\n            // Add \"casesPerThousand\", \"deathsPerThousand\", \"mortalityRate\"\r\n            Object.keys(stateInfo).forEach(state => {\r\n                const stateData = data.filter(d => d.state === state);\r\n                stateData.forEach(d => {\r\n                    d.dayOfOutbreak =\r\n                        (d.date - stateData[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1; // day - day one, convert ms to days\r\n                    d.casesPerThousand =\r\n                        (d.cases / stateInfo[state].population) * 1000;\r\n                    d.deathsPerThousand =\r\n                        (d.deaths / stateInfo[state].population) * 1000;\r\n                    d.mortalityRate = (d.deaths / d.cases) * 100;\r\n                });\r\n            });\r\n            setDataStates(data);\r\n            console.log(\"imported dataset\");\r\n        });\r\n\t}, []);\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={getTheme(theme, darkMode)}>\r\n                <CssBaseline />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <dataContext.Provider value={{ dataStates, setDataStates }}>\r\n                        <statesContext.Provider\r\n                            value={{ infoStates, setInfoStates }}\r\n                        >\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/line-app\"\r\n\t\t\t\t\t\t\t\tclassName=\"line-app\"\r\n\t\t\t\t\t\t\t\tcomponent={() => <AppCovidCompare wrapper={wrapper} bounds={bounds} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/gapminder-app\"\r\n\t\t\t\t\t\t\t\tclassName=\"gapminder-app\"\r\n\t\t\t\t\t\t\t\trender={() => <AppGapminder />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/gapminder-app\" />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t<Footnotes\r\n\t\t\t\t\t\t\t\tdarkMode={darkMode}\r\n\t\t\t\t\t\t\t\tsetDarkMode={setDarkMode}\r\n\t\t\t\t\t\t\t\twrapper={wrapper}\r\n\t\t\t\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t\t\t\t/>\r\n                        </statesContext.Provider>\r\n                    </dataContext.Provider>\r\n                </MuiPickersUtilsProvider>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}