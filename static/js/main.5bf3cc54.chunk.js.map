{"version":3,"sources":["data/us-states.csv","components/Footnotes.js","components/appGapminder/appParams.js","context/dataContext.js","context/statesContext.js","context/selectionContext.js","components/appGapminder/chart/CirclesGapminder.js","components/appGapminder/interface/OpacitySlider.js","components/appGapminder/interface/DayCounterSlider.js","components/appGapminder/chart/ChartGapminder.js","components/appGapminder/pickers/FilterRegion.js","components/appGapminder/pickers/FilterGovernor.js","components/appGapminder/pickers/FilterPopulation.js","components/appGapminder/pickers/FilterGdp.js","components/appGapminder/pickers/FilterBatch.js","components/appGapminder/FilterDashboard.js","components/appGapminder/pickers/ParamPicker.js","components/appGapminder/interface/Navbar.js","components/appGapminder/gapminderData.js","components/appGapminder/styles/dimensions.js","components/appGapminder/AppGapminder.js","components/util/constants.js","components/util/MouseMove.js","components/appCovidCompare/chart/Line.js","components/appCovidCompare/chart/ChartCovidCompare.js","components/appCovidCompare/components/FilterValues.js","components/appCovidCompare/pickers/FilterCases.js","components/appCovidCompare/pickers/FilterPopulation.js","components/appCovidCompare/components/FilterCategories.js","components/appCovidCompare/pickers/FilterRegion.js","components/appCovidCompare/pickers/BatchSelect.js","components/appCovidCompare/pickers/Dashboard.js","components/appCovidCompare/interface/Navbar.js","components/appCovidCompare/appParams.js","components/appCovidCompare/AppCovidCompare.js","styles/dimensions.js","styles/theme.js","styles/colors.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footnotes","props","darkMode","setDarkMode","classes","bounds","width","makeStyles","theme","rootGrid","maxWidth","window","innerWidth","margin","footerButton","color","palette","text","secondary","marginRight","useStyles","useTheme","pathArray","location","href","split","queryID","length","Grid","container","className","item","Tooltip","title","placement","IconButton","onClick","saveSvgAsPng","document","querySelector","backgroundColor","background","default","encoderOptions","fonts","url","format","chartParams","chartType","toTimestamp","multiple","normalize","xParam","output","type","selected","alt1","options","yParam","zParam","cParam","tParam","dataContext","React","createContext","statesContext","selectionContext","CirclesGapminder","data","dayCounter","selector","scales","opacityNotSel","xScale","yScale","colorScale","infoStates","useContext","selectedCircles","setSelectedCircles","circlesRef","useRef","circle","stroke","opacity","circleSelected","strokeWidth","bisectDay","d3","left","valueAt","values","day","i","a","b","t","useEffect","current","selectAll","map","d","state","region","join","sort","attr","htmlFormat","includes","call","append","casesPerThousand","toFixed","cases","toLocaleString","deathsPerThousand","deaths","on","mouseOverCircle","style","mouseOutCircle","notSelected","filter","s","ref","OpacitySlider","setOpacityNotSel","Typography","variant","Slider","id","value","valueLabelDisplay","step","min","max","onChange","e","newVal","DayCounterSlider","setDayCounter","cParamCategories","division","governor","ChartGapminder","wrapper","wrapperWidth","wrapperHeight","height","dataStates","useState","setScales","mqSmall","useMediaQuery","breakpoints","down","rootSVG","display","position","verticalAlign","overflow","chartWrapper","top","axes","primary","legend","fontWeight","fontSize","sliderContainer","flexDirection","justifyContent","alignItems","slider","boundsRef","yAxisRef","xAxisRef","legendRef","domain","range","yAxisGenerator","scale","xAxisGenerator","axis","enter","transition","duration","update","exit","remove","renderChart","viewBox","preserveAspectRatio","transform","regionOptions","name","chartParam","FilterRegion","handleFilter","anchorEl","setAnchorEl","handleMenu","currentTarget","MenuItem","dense","marginLeft","Menu","open","Boolean","onClose","o","key","FilterGovernor","FilterPopulation","nStates","populationOptions","n","FilterGdp","gdpOptions","button","chipContainer","listStyle","main","chip","contrastText","padding","spacing","FilterBatch","filters","handleDeleteFilter","handleFilters","currSelection","forEach","newFilter","filtered","Object","keys","handleFilterCategories","slice","handleFilterValues","prevState","all","Button","MenuList","Paper","component","f","Chip","size","label","onDelete","dashboard","dashboardTitle","dashboardDivider","marginBottom","filterBatch","FilterDashboard","setFilters","setNStates","handleChange","target","FormGroup","FormControlLabel","control","TextField","InputProps","inputProps","defaultValue","Divider","deletedFilter","newFilterList","checked","Checkbox","rootContainer","minWidth","filterSelector","filterMenuItem","ParamPicker","handleSelector","p","FormControl","InputLabel","Select","root","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","tab","menuItem","Navbar","setOpen","handleDrawer","handleParamMenu","AppBar","clsx","Toolbar","edge","disableRipple","List","ClickAwayListener","onClickAway","x","y","Drawer","anchor","paper","gapminderData","stateInfo","newData","eachState","push","innerHeight","right","bottom","AppGapminder","setData","setSelector","navbar","then","res","Provider","param","date","dateFormatter","dateParser","dimensions","MouseMove","focus","overlay","linesStates","selectedStates","dayOfOutbreak","x0","invert","this","bisectDate","dataEachState","stateHTML","dataEachStateRangeY","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","frozen","select","abbreviation","Line","labelParams","mqMedium","up","mqLarge","setLinesStates","filterStates","statesObject","lineGenerator","linesObject","lastDayOfOutbreak","lastCasesPerThousand","lockdownDay","lockdown","lockdownDayDatum","line","lineLabelX","lineLabelY","lockdownMarkerX","lockdownMarkerY","xShift","yShift","fill","strokeLinejoin","strokeLinecap","r","cx","cy","fontFamily","ChartCovidCompare","axisLabel","footnotes","svgRef","textAnchor","FilterValues","filterOptions","handleSelectedFilter","FilterCases","FilterCategories","BatchSelect","setSelectedStates","selectedFilter","setSelectedFilter","newSelectedFilter","newSelection","info","aria-controls","aria-haspopup","Dashboard","handleSelectedStates","handleSelectAllStates","handleDeselectAllStates","handleFilterMenu","chartTitle","xLabel","yLabel","AppCovidCompare","mqOrientPortrait","mqOrientLandscape","flexBasis","utils","DateFnsUtils","revisedStates","createMuiTheme","contrastThreshold","typography","overrides","MuiFormControlLabel","textColor","MuiButton","MuiBase","MuiInputBase","paddingLeft","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","daySelected","dayDisabled","getTheme","input","colors","App","setDataStates","setInfoStates","orientation","setOrientation","startsWith","lockdownEnd","nested","entries","lastIndex","latestCaseCount","latestCaseCountPerThou","population","USStates","fips","parseInt","Date","stateData","mortalityRate","console","log","screen","addEventListener","angle","ThemeProvider","CssBaseline","path","render","exact","from","to","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5bf3cc54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us-states.c3702092.csv\";","import React from \"react\";\r\nimport { saveSvgAsPng } from \"save-svg-as-png\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport \"../styles/styles.css\";\r\nimport { IconButton, Tooltip, Grid } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\n\r\nexport const Footnotes = props => {\r\n    const { darkMode, setDarkMode, bounds } = props;\r\n\tconst { width } = bounds;\r\n\t\r\n    const useStyles = makeStyles(theme => ({\r\n        rootGrid: {\r\n            maxWidth: window.innerWidth,\r\n\t\t\tmargin: \"0 auto\",\r\n        },\r\n        footerButton: {\r\n            color: theme.palette.text.secondary,\r\n            marginRight: \"auto\",\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const pathArray = window.location.href.split(\"/\");\r\n    const queryID = `#${pathArray[pathArray.length - 1]}`;\r\n\r\n    const saveImage = () => {\r\n        saveSvgAsPng(document.querySelector(queryID), \"covid-19_chart.png\", {\r\n            backgroundColor: theme.palette.background.default,\r\n            encoderOptions: 1,\r\n            fonts: [\r\n                {\r\n                    url:\r\n                        \"../../styles/ralewaymedium/raleway-medium-webfont.woff\",\r\n                    format: \"application/font-woff\",\r\n                    text:\r\n                        \"@font-face {font-family: 'ralewaymedium'; src: url('./ralewaymedium/raleway-medium-webfont.woff2') format('woff2'), url('./ralewaymedium/raleway-medium-webfont.woff') format('woff'); font-weight: normal;font-style: normal;}\",\r\n                },\r\n            ],\r\n        });\r\n\t};\r\n\r\n    return (\r\n        <Grid container className={classes.rootGrid}>\r\n            <Grid item>\r\n                <Tooltip title=\"Save chart as image\" placement=\"right\">\r\n                    <IconButton\r\n                        onClick={saveImage}\r\n                        className={classes.footerButton}\r\n                    >\r\n                        <SaveIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n                <Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\r\n                    <IconButton\r\n                        onClick={() => setDarkMode(!darkMode)}\r\n                        className={classes.footerButton}\r\n                    >\r\n                        <Brightness7Icon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","export const chartParams = {\r\n\tchartType: \"bubble\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\toutput: 'x-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'cases',\r\n\t\toptions: [\r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\toutput: 'y-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'deathsPerThousand',\r\n\t\talt1: 'deaths',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t], \r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\toutput: 'circle-area',\r\n\t\ttype: \"linear\",\r\n\t\tformat: \"none\",\r\n\t\tselected: \"population\",\r\n\t\toptions: [ \r\n\t\t\t\"population\",\r\n\t\t\t\"populationDensity\",\r\n\t\t\t\"gdp\",\r\n\t\t\t\"none\"\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\toutput: 'color-grouping',\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\toutput: 'time',\r\n\t\ttype: 'time',\r\n\t\tselected: \"dayOfOutbreak\",\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t\t\"date\"\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nexport const labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};","import React from 'react';\r\n\r\nconst dataContext = React.createContext();\r\n\r\nexport { dataContext };","import React from 'react';\r\n\r\nconst statesContext = React.createContext();\r\n\r\nexport { statesContext };","import React from 'react';\r\n\r\nexport const selectionContext = React.createContext();\r\n","import React, { useEffect, useContext, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\nimport { selectionContext } from '../../../context/selectionContext';\r\n\r\n// style \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CirclesGapminder = (props) => {\r\n\tconst { data, dayCounter, selector, scales, opacityNotSel } = props;\r\n\tconst { xParam, yParam, zParam, cParam } = selector;\r\n\tconst { xScale, yScale, colorScale } = scales;\r\n\r\n\t// context and ref\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst { selectedCircles, setSelectedCircles } = useContext(selectionContext); \r\n\tconst circlesRef = useRef(null);\r\n\r\n\t// styles\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tcircle: {\r\n\t\t\tstroke: 'none',\r\n\t\t\topacity: opacityNotSel\r\n\t\t},\r\n\t\tcircleSelected: {\r\n\t\t\tstroke: \"#e91e63\",\r\n\t\t\tstrokeWidth: 2,\r\n\t\t\topacity: .8,\r\n\t\t}\r\n\t}));\r\n\tconst classes = useStyles();\r\n\r\n\tconst bisectDay = d3.bisector(([d]) => d).left;\r\n\r\n\tfunction dataAt(day) {\r\n\t\treturn data.map(d => ({\r\n\t\t\tstate: d.state,\r\n\t\t\tregion: d.region,\r\n\t\t\t[xParam.selected]: valueAt(d[xParam.selected], day),\r\n\t\t\t[yParam.selected]: valueAt(d[yParam.selected], day)\r\n\t\t}));\r\n\t};\r\n\r\n\tfunction valueAt(values, day) {\r\n\t\tconst i = bisectDay(values, day, 0, values.length - 1);\r\n\t\tconst a = values[i];\r\n\r\n\t\tif (i > 0) {\r\n\t\t\tconst b = values[i - 1];\r\n\t\t\tconst t = (day - a[0]) / (b[0] - a[0]);\r\n\t\t\treturn a[1] * (1 - t) + b[1] * t;\r\n\t\t}\r\n\t\treturn a[1];\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst circle = d3.select(circlesRef.current).selectAll('circle')\r\n\t\t\t.data(dataAt(dayCounter), d => d)\r\n\t\t\t.join('circle')\r\n\t\t\t\t.sort((a,b) => d3.descending(a[zParam], b[zParam]))\r\n\t\t\t\t.attr('r', d => zParam.selected === \"population\" \r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 1000000 \r\n\t\t\t\t\t: zParam.selected === \"populationDensity\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100\r\n\t\t\t\t\t: zParam.selected === \"gdp\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100000\r\n\t\t\t\t\t: 5\r\n\t\t\t\t)\r\n\t\t\t\t.attr('cx', d => xScale(d[xParam.selected]))\r\n\t\t\t\t.attr('cy', d => yScale(d[yParam.selected]))\r\n\t\t\t\t.attr('fill', d => colorScale(infoStates[d.state][cParam.selected]))\r\n\t\t\t\t.attr('id', d => `circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t.attr('class', d =>\r\n\t\t\t\t\tselectedCircles.selected.includes(d.state) \r\n\t\t\t\t\t\t? classes.circleSelected\r\n\t\t\t\t\t\t: classes.circle\r\n\t\t\t\t)\r\n\t\t\t\t.call(circle => circle\r\n\t\t\t\t\t.append('title')\r\n\t\t\t\t\t.text(d => [\r\n\t\t\t\t\t\td.state,\r\n\t\t\t\t\t\t`Day ${dayCounter}`,\r\n\t\t\t\t\t\txParam.selected === \"casesPerThousand\"\r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\",\r\n\t\t\t\t\t\tyParam.selected === \"casesPerThousand\" \r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\"\r\n\t\t\t\t\t\t].join(\"\\n\")\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\tcircle.on('mouseover', d => {\r\n\t\t\t\tconst mouseOverCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\t\t\t\r\n\t\t\t\tif (opacityNotSel !== 0 || selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tmouseOverCircle\r\n\t\t\t\t\t\t.attr('cursor', 'pointer')\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('mouseout', d => { \r\n\t\t\t\tconst mouseOutCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\tif (selectedCircles.notSelected.includes(d.state)) {\r\n\t\t\t\t\tmouseOutCircle\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('click', d => { \r\n\t\t\t\tif (selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: selectedCircles.selected.filter(s => s !== d.state),\r\n\t\t\t\t\t\tnotSelected: [...selectedCircles.notSelected, d.state]\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: [...selectedCircles.selected, d.state],\r\n\t\t\t\t\t\tnotSelected: selectedCircles.notSelected.filter(s => s !== d.state)\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t}, [dayCounter, selector, scales, selectedCircles, opacityNotSel]);\r\n\r\n\treturn (\r\n\t\t<>\t\t\r\n\t\t\t<g ref={circlesRef} />\r\n\t\t</>\r\n\t)\r\n};","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const OpacitySlider = (props) => {\r\n\tconst { opacityNotSel, setOpacityNotSel } = props;\r\n\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Typography variant=\"caption\">Non-selected opacity</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"opacity-slider\"\r\n\t\t\t\tvalue={opacityNotSel}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={.1}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={1}\r\n\t\t\t\tonChange={(e, newVal) => setOpacityNotSel(newVal)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const DayCounterSlider = (props) => {\r\n\tconst { dayCounter, setDayCounter } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant=\"caption\">Day of Outbreak</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"day-counter-slider\"\r\n\t\t\t\tvalue={dayCounter}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={1}\r\n\t\t\t\tmin={1}\r\n\t\t\t\tmax={60}\r\n\t\t\t\tonChange={(e, newVal) => setDayCounter(newVal)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// components\r\nimport { CirclesGapminder } from \"./CirclesGapminder\";\r\nimport { OpacitySlider } from \"../interface/OpacitySlider\";\r\nimport { DayCounterSlider } from \"../interface/DayCounterSlider\";\r\n\r\n// style\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst cParamCategories = {\r\n    region: [\"Northeast\", \"Midwest\", \"South\", \"West\"],\r\n    division: [\r\n        \"New England\",\r\n        \"Mid-Atlantic\",\r\n        \"East North Central\",\r\n        \"West North Central\",\r\n        \"South Atlantic\",\r\n        \"East South Central\",\r\n        \"West South Central\",\r\n        \"Mountain\",\r\n        \"Pacific\",\r\n    ],\r\n    governor: [\"Republican\", \"Democrat\", \"n/a\"],\r\n};\r\n\r\nexport const ChartGapminder = props => {\r\n    const { data, selector, wrapper, bounds } = props;\r\n    const { xParam, yParam, cParam } = selector;\r\n    const { wrapperWidth, wrapperHeight, margin } = wrapper;\r\n\tconst { width, height } = bounds;\r\n\r\n    const { dataStates } = useContext(dataContext);\r\n    const [scales, setScales] = useState(null);\r\n\tconst [dayCounter, setDayCounter] = useState(1);\r\n\tconst [opacityNotSel, setOpacityNotSel] = useState(0.6);\r\n\r\n\tconst theme = useTheme();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\trootSVG: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tverticalAlign: \"middle\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tchartWrapper: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 0,\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t\tbounds: {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t},\r\n\t\taxes: {\r\n\t\t\tcolor: theme.palette.text.primary,\r\n\t\t},\r\n\t\tlegend: {\r\n\t\t\tfontWeight: 700,\r\n\t\t\tfontSize: \".8rem\",\r\n\t\t},\r\n\t\tsliderContainer: {\r\n\t\t\tflexDirection: ()  => mqSmall ? \"column\" : \"row\",\r\n\t\t\tjustifyContent: () => mqSmall ? \"center\" : \"space-between\",\r\n\t\t\tmaxWidth: width,\r\n\t\t\tmargin: \"0 auto\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t\tslider: {\r\n\t\t\twidth: () => mqSmall ? \"95%\" : \"45%\",\r\n\t\t},\r\n\t}));\r\n\r\n    const classes = useStyles();\r\n\r\n    const boundsRef = useRef(null);\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const legendRef = useRef(null);\r\n\r\n    const renderChart = () => {\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[xParam.selected]))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[yParam.selected]))\r\n            .range([height, 0]);\r\n        let colorScale;\r\n\r\n        if (cParam.selected === \"region\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.region)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"division\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.division)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"governor\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.governor)\r\n                .range([\"#B61515\", \"#2E84D5\", \"#009C72\"]);\r\n        }\r\n\r\n        setScales({\r\n            xScale: xScale,\r\n            yScale: yScale,\r\n            colorScale: colorScale,\r\n        });\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n\r\n        const xAxis = d3\r\n            .select(xAxisRef.current)\r\n            .call(xAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"xLabel\"));\r\n\r\n        xAxis\r\n            .selectAll(\".xLabel\")\r\n            .data(xParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", width)\r\n            .attr(\"y\", 40)\r\n            .attr(\"class\", \"xLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(xParam.selected);\r\n\r\n        const yAxis = d3\r\n            .select(yAxisRef.current)\r\n            .call(yAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"yLabel\"));\r\n\r\n        yAxis\r\n            .selectAll(\".yLabel\")\r\n            .data(yParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", -40)\r\n            .attr(\"class\", \"yLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(yParam.selected);\r\n\r\n        // legend\r\n        d3.select(legendRef.current)\r\n            .selectAll(\"text\")\r\n            .data(cParamCategories[cParam.selected], d => d)\r\n            .join(\r\n                enter =>\r\n                    enter\r\n                        .append(\"text\")\r\n                        .attr(\"x\", \"1rem\")\r\n                        .attr(\"y\", -1000)\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(enter =>\r\n                            enter\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", (d, i) => -height + 10 + 20 * i)\r\n                        ),\r\n                update =>\r\n                    update\r\n                        .append(\"text\")\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .attr(\"y\", 60)\r\n                        .text(d => d)\r\n                        .call(update => update.transition().duration(750)),\r\n                exit =>\r\n                    exit\r\n                        .attr(\"fill\", \"gray\")\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(exit =>\r\n                            exit\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", 0)\r\n                                .remove()\r\n                        )\r\n            );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dataStates) {\r\n            renderChart();\r\n        }\r\n    }, [dataStates, selector]);\r\n\r\n    useEffect(() => {\r\n\t\td3.select(\".counter-display\")\r\n\t\t\t.join(\"text\")\r\n\t\t\t.text(`Day ${dayCounter}`);\r\n    }, [dayCounter]);\r\n\r\n    return (\r\n        <>\r\n\t\t\t<div>\t\t\t\r\n            <svg\r\n                id=\"gapminder-app\"\r\n                height={wrapperHeight}\r\n\t\t\t\twidth={wrapperWidth}\r\n\t\t\t\tclassName={classes.rootSVG}\r\n\t\t\t\tviewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\r\n\t\t\t\tpreserveAspectRatio\r\n            >\r\n                <g\r\n                    ref={boundsRef}\r\n                    className={classes.bounds}\r\n\t\t\t\t\ttransform={`translate(${margin.left}, ${margin.top})`}\r\n                >\r\n                    <g\r\n                        ref={xAxisRef}\r\n                        transform={`translate(0, ${height})`}\r\n                        className={classes.axes}\r\n                    />\r\n                    <g ref={yAxisRef} className={classes.axes} />\r\n                    <g\r\n                        ref={legendRef}\r\n                        transform={`translate(0, ${height})`}\r\n                        className={classes.legend}\r\n                    />\r\n                    {data && scales ? (\r\n                        <CirclesGapminder\r\n                            {...props}\r\n                            scales={scales}\r\n                            dayCounter={dayCounter}\r\n                            opacityNotSel={opacityNotSel}\r\n                        />\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </g>\r\n            </svg>\r\n\t\t\t</div>\r\n            <Grid container className={classes.sliderContainer}>\r\n                <Grid item className={classes.slider}>\r\n\t\t\t\t\t<DayCounterSlider \r\n\t\t\t\t\t\tdayCounter={dayCounter}\r\n\t\t\t\t\t\tsetDayCounter={setDayCounter}\r\n\t\t\t\t\t/>\r\n                </Grid>\r\n\t\t\t\t<Grid item className={classes.slider}>\r\n\t\t\t\t\t<OpacitySlider \r\n\t\t\t\t\t\topacityNotSel={opacityNotSel} \r\n\t\t\t\t\t\tsetOpacityNotSel={setOpacityNotSel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n];\r\n\r\nexport const FilterRegion = (props) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"region-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tRegion\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : null}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n};","import React, { useState, useContext } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"democrat\", name: \"Democrat\", type: \"Governor\", chartParam: \"governor\"},\r\n\t{id: \"republican\", name: \"Republican\", type: \"Governor\", chartParam: \"governor\"},\r\n];\r\n\r\n\r\nexport const FilterGovernor = (props) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"governor-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tGov. party\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"governor-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n};","import React, { useState } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem, Button } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterPopulation = (props) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\tconst populationOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"pop-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tPopulation\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"pop-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{populationOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id}\r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterGdp = (props) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n\tconst gdpOptions = [\r\n\t\t{id: \"gdp-high\", name: `Top ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"gdp-low\", name: `Bottom ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<MenuItem id=\"gdp-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tGDP\r\n\t\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"gdp-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t{gdpOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\tonClose={handleMenu}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../../context/selectionContext\";\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// components\r\nimport { FilterRegion } from \"./FilterRegion\";\r\nimport { FilterGovernor } from \"./FilterGovernor\";\r\nimport { FilterPopulation } from \"./FilterPopulation\";\r\nimport { FilterGdp } from \"./FilterGdp\";\r\n\r\n// style\r\nimport { Typography, Menu, Button, Chip, Paper, MenuList } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    chipContainer: {\r\n        listStyle: \"none\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    chip: {\r\n\t\tcolor: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.primary.contrastText,\r\n        padding: theme.spacing(0.5),\r\n        margin: theme.spacing(0.5),\r\n        fontSize: \".7rem\",\r\n    },\r\n}));\r\n\r\nexport const FilterBatch = props => {\r\n    const {\r\n        filters,\r\n        handleDeleteFilter,\r\n        handleFilter,\r\n        nStates,\r\n    } = props;\r\n    const { setSelectedCircles } = useContext(\r\n        selectionContext\r\n    );\r\n    const { infoStates } = useContext(statesContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = useStyles();\r\n\r\n    const handleMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    const handleFilterCategories = newFilter => {\r\n        const filtered = Object.keys(infoStates).filter(\r\n            s => infoStates[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilterValues = newFilter => {\r\n        const n = newFilter.n;\r\n        const filtered = Object.keys(infoStates)\r\n            .sort((a, b) =>\r\n                newFilter.sort === \"descending\"\r\n                    ? infoStates[b][newFilter.chartParam] -\r\n                      infoStates[a][newFilter.chartParam]\r\n                    : infoStates[a][newFilter.chartParam] -\r\n                      infoStates[b][newFilter.chartParam]\r\n            )\r\n            .slice(0, n);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilters = () => {\r\n        let selected = [];\r\n        let currSelection = [];\r\n        filters.forEach((d, i) => {\r\n            if (d.type === \"Region\" || d.type === \"Governor\") {\r\n                currSelection = handleFilterCategories(d);\r\n            } else if (d.type === \"Pop.\" || d.type === \"GDP\") {\r\n                currSelection = handleFilterValues(d);\r\n            }\r\n\r\n            selected =\r\n                selected.length < 1\r\n                    ? currSelection\r\n                    : currSelection.filter(s => selected.includes(s));\r\n        });\r\n\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: selected,\r\n            notSelected: prevState.all.filter(s => !selected.includes(s)),\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        filters.length > 0\r\n            ? handleFilters()\r\n            : setSelectedCircles(prevState => ({\r\n                  ...prevState,\r\n                  selected: [],\r\n                  notSelected: prevState.all,\r\n              }));\r\n    }, [filters]);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                id=\"select-filter\"\r\n                onClick={handleMenu}\r\n                className={classes.button}\r\n            >\r\n                New Filter\r\n                <ChevronRightIcon style={{ marginLeft: \"auto\" }} />\r\n            </Button>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={\r\n                    anchorEl ? Boolean(anchorEl.id === \"select-filter\") : false\r\n                }\r\n                onClose={handleMenu}\r\n            >\r\n\t\t\t\t<MenuList>\r\n\t\t\t\t\t<FilterRegion handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterGovernor handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterPopulation handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t\t<FilterGdp handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t</MenuList>\r\n            </Menu>\r\n\r\n            <Paper component=\"ul\" className={classes.chipContainer}>\r\n                {filters.length > 0 ? (\r\n                    filters.map(f => {\r\n                        return (\r\n                            <li key={f.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    className={classes.chip}\r\n                                    label={f.name}\r\n                                    onDelete={() => handleDeleteFilter(f)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Typography>No filters</Typography>\r\n                )}\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n\tDivider,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\n\r\n// components\r\nimport {FilterBatch} from \"./pickers/FilterBatch\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../context/selectionContext\";\r\n\r\n// styles\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dashboard: {\r\n        alignItems: \"left\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.primary,\r\n\t},\r\n\tdashboardTitle: {\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: \"1.2rem\" \r\n\t},\r\n\tdashboardDivider: {\r\n\t\tbackgroundColor: theme.palette.primary.contrastText,\r\n\t\tmarginBottom: \".2rem\",\r\n\t},\r\n\tfilterBatch: {\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: theme.palette.text.primary,\r\n\t},\r\n}));\r\n\r\nexport const FilterDashboard = (props) => {\r\n    const { selectedCircles, setSelectedCircles } = useContext(selectionContext);\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst [filters, setFilters] = useState([]);\r\n\tconst [nStates, setNStates] = useState(12);\r\n\r\n    const handleChange = e => {\r\n        const state = e.target.name;\r\n\r\n        if (selectedCircles.selected.includes(state)) {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: selectedCircles.selected.filter(d => d !== state),\r\n                notSelected: [...selectedCircles.notSelected, state],\r\n            });\r\n        } else {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: [...selectedCircles.selected, state],\r\n                notSelected: selectedCircles.notSelected.filter(\r\n                    d => d !== state\r\n                ),\r\n            });\r\n        }\r\n\t};\r\n\r\n\tconst handleFilter = (newFilter) => {\r\n\t\tif (filters.length > 0) {\r\n\t\t\tsetFilters(prevState => [...prevState, newFilter])\r\n\t\t} else (\r\n\t\t\tsetFilters([newFilter])\r\n\t\t)\t\r\n\t};\r\n\t\r\n\tconst handleDeleteFilter = deletedFilter => {\r\n        const newFilterList = filters.filter(f => f.id !== deletedFilter.id);\r\n        setFilters(newFilterList);\r\n    };\r\n\r\n    const handleDeselectAll = () => {\r\n\t\tsetFilters([]);\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: [],\r\n            notSelected: prevState.all,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormGroup className={classes.dashboard}>\r\n\r\n\t\t\t<FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAll}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                /><br />\r\n\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tid=\"n-states\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tlabel=\"Filter n states\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tinputProps: {\r\n\t\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\t\tmax: 50\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdefaultValue={nStates}\r\n\t\t\t\t\tonChange={(e) => setNStates(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<Typography className={classes.dashboardTitle}>\r\n\t\t\t\t\tFilters\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider className={classes.dashboardDivider} />\r\n\t\t\t\t<FilterBatch \r\n\t\t\t\t\tclassName={classes.filterBatch}\r\n\t\t\t\t\tnStates={nStates}\r\n\t\t\t\t\tsetNStates={setNStates}\r\n\t\t\t\t\tfilters={filters}\r\n\t\t\t\t\tsetFilters={setFilters}\r\n\t\t\t\t\thandleDeleteFilter={handleDeleteFilter}\r\n\t\t\t\t\thandleFilter={handleFilter}\r\n\t\t\t\t/>\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.selected ? (\r\n                    selectedCircles.selected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.notSelected ? (\r\n                    selectedCircles.notSelected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n// style\r\nimport { FormControl, InputLabel, Select, MenuItem, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\trootContainer: {\r\n\t\tmaxWidth: 750,\r\n\t\tminWidth: 175,\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t},\r\n\tfilterSelector: {\r\n        minWidth: 150,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n    },\r\n    filterMenuItem: {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n    },\r\n}));\r\n\r\nexport const ParamPicker = (props) => {\r\n\tconst { selector, handleSelector } = props;\r\n\tconst theme = useTheme();\r\n\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\tconst classes = useStyles();\r\n\r\n    return (\r\n\t\t<Grid container className={classes.rootContainer} style={mqSmall \r\n\t\t\t? {flexDirection: \"column\", alignItems: \"center\"} \r\n\t\t\t: {flexDirection: \"row\"}}\r\n\t\t>\r\n            {Object.keys(selector).map((p) => {\r\n                return (\r\n                    <FormControl key={selector[p].output}>\r\n                        <InputLabel>{selector[p].output}</InputLabel>\r\n                        <Select\r\n                            name={p}\r\n                            value={selector[p].selected}\r\n                            onChange={handleSelector}\r\n                            className={classes.filterSelector}\r\n                        >\r\n                            {selector[p].options.map((o) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={o}\r\n                                        value={o}\r\n                                        className={classes.filterMenuItem}\r\n                                    >\r\n                                        {o}\r\n                                    </MenuItem>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { FilterDashboard } from \"../FilterDashboard\";\r\nimport { ParamPicker } from \"../pickers/ParamPicker\";\r\n\r\n// style\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Drawer,\r\n\tClickAwayListener,\r\n\tTooltip,\r\n\tuseMediaQuery,\r\n\tMenu,\r\n\tList\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n \r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n\t\ttoolbar: {\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tjustifyContent: \"flex-start\",\r\n\t\t},\r\n    },\r\n}));\r\n\r\nexport const Navbar = (props) => {\r\n    const { data, selector, handleSelector } = props;\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleDrawer = () => {\r\n        setOpen(!open);\r\n\t};\r\n\t\r\n\tconst handleParamMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\r\n    const handleClickAway = (e) => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        disableRipple\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n\t\t\t\t\t{mqSmall \r\n\t\t\t\t\t\t? <span>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Chart parameters\">\r\n\t\t\t\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\t\t\t\tid=\"parameters-btn\" \r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.menuButton} \r\n\t\t\t\t\t\t\t\t\t\tonClick={handleParamMenu}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<AssessmentIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"parameters-btn\") : false}\r\n\t\t\t\t\t\t\t\t\tonClose={handleParamMenu}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\t\t<ParamPicker\r\n\t\t\t\t\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\t\t\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t: <ParamPicker\r\n\t\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/line-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/gapminder-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={classes.drawerHeader}\r\n                            style={{\r\n                                backgroundColor: theme.palette.primary.main,\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                edge=\"end\"\r\n                                onClick={handleDrawer}\r\n                                style={{\r\n                                    color: theme.palette.primary.contrastText,\r\n                                }}\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <FilterDashboard data={data} />\r\n                    </Drawer>\r\n                </ClickAwayListener>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n","export const gapminderData = async (data, stateInfo, chartParams) => {\r\n\tconst { xParam, yParam, tParam } = chartParams;\r\n\tlet newData = [];\r\n\tObject.keys(stateInfo).forEach((state,i) => {\r\n\t\tlet eachState = {\r\n\t\t\tstate: state,\r\n\t\t\tregion: stateInfo[state].region,\r\n\t\t\t[tParam.selected]: [],\r\n\t\t\t[xParam.selected]: [],\r\n\t\t\t[xParam.alt1]: [],\r\n\t\t\t[yParam.selected]: [],\r\n\t\t\t[yParam.alt1]: [],\r\n\t\t};\r\n\r\n\t\tconst filtered = data.filter(d => d.state === state);\r\n\t\tfiltered.forEach((d,i) => {\r\n\t\t\teachState[tParam.selected].push([d[tParam.selected], d[tParam.selected]]);\r\n\t\t\teachState[xParam.selected].push([d[tParam.selected], d[xParam.selected]]);\r\n\t\t\teachState[yParam.selected].push([d[tParam.selected], d[yParam.selected]]);\r\n\t\t\teachState[xParam.alt1].push([d[tParam.selected], d[xParam.alt1]]);\r\n\t\t\teachState[yParam.alt1].push([d[tParam.selected], d[yParam.alt1]]);\r\n\t\t});\r\n\t\tnewData.push(eachState);\r\n\t});\r\n\r\n\treturn newData;\r\n};","export const wrapper = {\r\n\twrapperWidth: window.innerWidth * .8,\r\n\twrapperHeight: window.innerHeight * .8,\r\n\tmargin: { \r\n\t\ttop: 40,\r\n\t\tright: 40,\r\n\t\tbottom: 60,\r\n\t\tleft: 60\r\n\t}\r\n  };\r\n  \r\nexport const bounds = {\r\n\twidth: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\r\n\theight: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\r\n};","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n// params\r\nimport { chartParams, labelParams } from \"./appParams\";\r\n\r\n// components\r\nimport { ChartGapminder } from './chart/ChartGapminder'; \r\nimport { Navbar } from './interface/Navbar';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { selectionContext } from '../../context/selectionContext';\r\n\r\n// data\r\nimport stateInfo from '../../data/stateInfo.json';\r\nimport { gapminderData } from './gapminderData';\r\n\r\n// style\r\nimport { wrapper, bounds } from \"./styles/dimensions\";\r\nimport { Grid, Container, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const AppGapminder = () => {\r\n\tconst { margin } = wrapper;\r\n\tconst { width } = bounds;\r\n\r\n\tconst {dataStates} = useContext(dataContext);\r\n\tconst [data, setData] = useState(null);\r\n\tconst [selector, setSelector] = useState({\r\n\t\txParam: chartParams.xParam, \r\n\t\tyParam: chartParams.yParam, \r\n\t\tzParam: chartParams.zParam, \r\n\t\tcParam: chartParams.cParam, \r\n\t});\r\n\tconst [selectedCircles, setSelectedCircles] = useState({\r\n\t\tselected: [], \r\n\t\tnotSelected: Object.keys(stateInfo), \r\n\t\tall: Object.keys(stateInfo)\r\n\t});\r\n\r\n\t// style\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tnavbar: {\r\n\t\t\twidth: width,\r\n\t\t\tmarginLeft: margin.left,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'flex-start',\r\n\t\t}\r\n\t}));\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleSelector = (e) => {\r\n\t\tconst param = e.target.name;\r\n\r\n\t\tsetSelector({\r\n\t\t\t...selector,\r\n\t\t\t[param]: {\r\n\t\t\t\t...selector[param],\r\n\t\t\t\tselected: e.target.value\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataStates.length > 0) {\r\n\t\t\tgapminderData(dataStates, stateInfo, chartParams)\r\n\t\t\t\t.then(res => setData(res))\r\n\t\t}\r\n\t}, [dataStates]);\r\n\r\n\treturn (\r\n\t\t<selectionContext.Provider value={{selectedCircles, setSelectedCircles}}>\r\n\t\t\t<Navbar \t\t\t\t\t\t\t\t\r\n\t\t\t\tdata={data} \r\n\t\t\t\tselector={selector} \r\n\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\tclassName={classes.navbar}\r\n\t\t\t/>\r\n\t\t\t<div transform={`translate(${margin.left}, ${margin.top})`}>\r\n\t\t\t\t{data \r\n\t\t\t\t\t&& <ChartGapminder \r\n\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\twrapper={wrapper} \r\n\t\t\t\t\t\tbounds={bounds} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</selectionContext.Provider>\r\n\t)\r\n};\r\n","import * as d3 from \"d3\";\r\n\r\nconst date = {\r\n  dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\r\n  dateParser: d3.timeParse(\"%m-%d-%y\"),\r\n};\r\n\r\nconst dimensions = {\r\n  width: window.innerWidth,\r\n  height: 750,\r\n  margin: {\r\n    top: 80,\r\n    right: 100,\r\n    bottom: 140,\r\n    left: 100,\r\n  },\r\n};\r\n\r\nconst bounded = {\r\n  width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\r\n  height: dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\r\n};\r\n\r\nexport { date, dimensions, bounded };\r\n","import { useEffect, useContext } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\n\r\n// constants\r\nimport { date } from '../util/constants';\r\n\r\nexport const MouseMove = (props) => {\r\n\tconst { focus, overlay, linesStates, selectedStates, bounds } = props;\r\n    const { width, height } = bounds;\r\n\tconst { dataStates } = useContext(dataContext);\r\n\t\r\n    const xScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.dayOfOutbreak)).range([0, width]);\r\n    const yScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.casesPerThousand)).range([height, 0]);\r\n\r\n    useEffect(() => {\r\n        if (overlay && selectedStates) {\r\n\t\t\t\r\n            overlay.on('mousemove', mousemove);\r\n\r\n            let frozen = false;\r\n\r\n            function mousemove() {\r\n                let x0 = xScale.invert(d3.mouse(this)[0]);\r\n\t\t\t\tconst bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\r\n\r\n                Object.keys(selectedStates).sort()\r\n                    .filter(s => selectedStates[s].selected === true)\r\n                    .forEach(state => {\r\n                        const dataEachState = dataStates.filter(d => d.state === state);\r\n                        const stateHTML = selectedStates[state].htmlFormat;\r\n                        const i = bisectDate(dataEachState, x0, 0);\r\n\r\n                        let dataEachStateRangeY = dataEachState[i]\r\n                            ? dataEachState[i].casesPerThousand \r\n                            : dataEachState[dataEachState.length - 1].casesPerThousand;\r\n                        let dataEachStateRangeX = dataEachState[i] \r\n                            ? dataEachState[i].dayOfOutbreak \r\n                            : dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                        let dataEachStateRangeDate = dataEachState[i] \r\n                            ? date.dateFormatter(dataEachState[i].date) \r\n                            : date.dateFormatter(dataEachState[dataEachState.length - 1].date);\r\n                        let dataEachStateRangeCases = dataEachState[i]\r\n                            ? dataEachState[i].cases \r\n                            : dataEachState[dataEachState.length - 1].cases;\r\n\r\n                        const toggleFreeze = () => {\r\n\t\t\t\t\t\t\tfrozen = !frozen;\r\n                        };\r\n\r\n                        overlay.on('click', toggleFreeze);\r\n\r\n                        if (!frozen) {\r\n                            focus.select(`#circle-${stateHTML}`)\r\n                                .attr('cy', yScale(dataEachStateRangeY))\r\n                                .attr('cx', xScale(dataEachStateRangeX));\r\n\r\n                            focus.select(`#d-label-${stateHTML}`)\r\n                                .text(`${selectedStates[state].abbreviation} => Day ${dataEachStateRangeX} (${dataEachStateRangeDate.split(\"-\").slice(0,2).join(\"-\")})`)\r\n\t\t\t\t\t\t\t\t.attr('fill', selectedStates[state].color)\r\n\r\n                            focus.select(`#d-label-b-${stateHTML}`)\r\n                                .text(`${dataEachStateRangeY.toFixed(3)} (${dataEachStateRangeCases} tot.)`)\r\n                                .attr('fill', selectedStates[state].color)\r\n                        } \r\n                    });\r\n                }\r\n\t\t\t}\r\n\t}, [linesStates]);\r\n\t\r\n    return null;\r\n};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// functions\r\nimport { MouseMove } from \"../../util/MouseMove\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// style\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\nexport const Line = props => {\r\n    const {\r\n        chartParams,\r\n\t\tlabelParams,\r\n        focus,\r\n\t\toverlay,\r\n        selectedStates,\r\n        wrapper,\r\n\t\tbounds,\r\n    } = props;\r\n    const { xParam, yParam } = chartParams;\r\n    const { width, height } = bounds;\r\n\r\n    // context\r\n    const { dataStates } = useContext(dataContext);\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n    // style\r\n    const theme = useTheme();\r\n\tconst mqMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\tconst mqLarge = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n\tconst [linesStates, setLinesStates] = useState([]);\r\n\r\n\tconst filterStates = statesObject => {\r\n\t\tlet filtered = Object.keys(statesObject)\r\n\t\t\t.sort()\r\n\t\t\t.filter(s => statesObject[s].selected === true);\r\n\t\treturn filtered;\r\n\t};\r\n\r\n    useEffect(() => {\r\n        if (selectedStates && dataStates.length > 0) {\r\n\t\t\t// Scales\r\n            const xScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n                .range([0, width]);\r\n            const yScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n                .range([height, 0]);\r\n\r\n            // Lines\r\n            const lineGenerator = d3\r\n                .line()\r\n                .x(d => xScale(d.dayOfOutbreak))\r\n                .y(d => yScale(d.casesPerThousand));\r\n\r\n            const linesObject = {};\r\n\r\n\t\t\tconst filtered = filterStates(selectedStates)\r\n\t\t\tfiltered\r\n                .forEach((state, i) => {\r\n                    const dataEachState = dataStates.filter(\r\n                        d => d.state === state\r\n                    );\r\n                    // Line label placement\r\n                    const lastDayOfOutbreak =\r\n                        dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                    const lastCasesPerThousand =\r\n                        dataEachState[dataEachState.length - 1]\r\n                            .casesPerThousand;\r\n\r\n                    // markers for lockdown date\r\n                    const lockdownDate = selectedStates[state].lockdown;\r\n                    const lockdownDay =\r\n                        (lockdownDate - dataEachState[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1;\r\n                    const lockdownDayDatum = dataEachState.filter(\r\n                        d => d.dayOfOutbreak === lockdownDay\r\n                    )[0];\r\n\r\n                    if (lockdownDayDatum) {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                            lockdownMarkerX: xScale(lockdownDay),\r\n                            lockdownMarkerY: yScale(\r\n                                lockdownDayDatum.casesPerThousand\r\n                            ),\r\n                        };\r\n                    } else {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                        };\r\n                    }\r\n                });\r\n            setLinesStates(linesObject);\r\n        };\r\n\t}, [dataStates, selectedStates, theme]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedStates) {\r\n\t\t\tconst filtered = filterStates(selectedStates);\r\n\r\n\t\t\tfiltered\r\n\t\t\t.forEach((state, i) => {\r\n\t\t\t\tconst stateHTML = infoStates[state].htmlFormat;\r\n\t\t\t\t// for mousemove\r\n\t\t\t\tlet xShift = 0;\r\n\t\t\t\tlet yShift = 0;\r\n\r\n\t\t\t\tif (i > 11) {\r\n\t\t\t\t\tif (mqLarge) {\r\n\t\t\t\t\t\txShift = 180;\r\n\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t} else if (mqMedium) {\r\n\t\t\t\t\t\txShift = 120;\r\n\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\r\n\t\t\t\tfocus\r\n\t\t\t\t\t.append(\"circle\")\r\n\t\t\t\t\t.attr(\"id\", `circle-${stateHTML}`)\r\n\t\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t\t\t.attr(\"fill\", selectedStates[state].color)\r\n\t\t\t\t\t.attr(\"stroke\", theme.palette.text.primary);\r\n\r\n\t\t\t\tif (mqMedium ? i < 24 : i < 12) {\r\n\t\t\t\t\tfocus\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"id\", `d-label-${stateHTML}`)\r\n\t\t\t\t\t\t.attr(\"x\", 10 + xShift)\r\n\t\t\t\t\t\t.attr(\"y\", d => mqMedium ? 10 + i * 40 - yShift : 10 + i * 30)\r\n\t\t\t\t\t\t.style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n\t\t\t\t\t\t.style(\r\n\t\t\t\t\t\t\t\"font-family\",\r\n\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfocus\r\n\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t.attr(\"id\", `d-label-b-${stateHTML}`)\r\n\t\t\t\t\t\t.attr(\"x\", 10 + xShift)\r\n\t\t\t\t\t\t.attr(\"y\", d => mqMedium ? 25 + i * 40 - yShift : 25 + i * 30)\r\n\t\t\t\t\t\t.style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n\t\t\t\t\t\t.style(\r\n\t\t\t\t\t\t\t\"font-family\",\r\n\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tfocus.selectAll(\"circle\").remove();\r\n\t\t\tfocus.selectAll(\"text\").remove();\r\n        };\r\n\t}, [linesStates]);\r\n\r\n    return (\r\n        <>\t\r\n            <MouseMove\r\n                focus={focus}\r\n\t\t\t\toverlay={overlay}\r\n\t\t\t\tlinesStates={linesStates}\r\n\t\t\t\tbounds={bounds}\r\n                {...props}\r\n            />\r\n            {dataStates.length > 0 ? (\r\n                Object.keys(linesStates)\r\n                    .sort()\r\n                    .map((state, i) => {\r\n                        const stateHTML = infoStates[state].htmlFormat;\r\n\r\n                        return (\r\n\t\t\t\t\t\t\t<>\r\n                            <g key={i} id={`bounds-render-${stateHTML}`}>\r\n                                <path\r\n                                    fill=\"none\"\r\n                                    stroke={selectedStates[state].color}\r\n                                    strokeWidth={2.5}\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeLinecap=\"round\"\r\n                                    d={linesStates[state].line}\r\n                                />\r\n                                <circle\r\n                                    id=\"line-marker-lockdown\"\r\n                                    r={4}\r\n                                    fill={\r\n                                        linesStates[state].lockdownMarkerX\r\n                                            ? selectedStates[state].color\r\n                                            : \"none\"\r\n                                    }\r\n                                    cx={linesStates[state].lockdownMarkerX}\r\n                                    cy={linesStates[state].lockdownMarkerY}\r\n                                />\r\n                                <text\r\n                                    id={`line-label-${stateHTML}`}\r\n                                    className=\"line-label\"\r\n                                    style={{\r\n                                        fill: theme.palette.text.primary,\r\n                                        fontSize: \"14px\",\r\n                                        fontFamily:\r\n                                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                                    }}\r\n                                    x={linesStates[state].lineLabelX}\r\n                                    y={linesStates[state].lineLabelY}\r\n                                >\r\n                                    {selectedStates[state].abbreviation}\r\n                                </text>\r\n                            </g>\r\n\t\t\t\t\t\t\t</>\r\n                        );\r\n                    })\r\n            ) : (\r\n                <g></g>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// Components\r\nimport { Line } from \"./Line\";\r\n\r\n// Context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// Styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const ChartCovidCompare = props => {\r\n\tconst { wrapper, bounds } = props;\r\n\tconst { wrapperWidth, wrapperHeight, margin } = wrapper;\r\n\tconst { width, height } = bounds;\r\n\tconst { dataStates } = useContext(dataContext);\r\n\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\trootSVG: {\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tposition: \"relative\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tverticalAlign: \"middle\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t},\r\n\t\tbounds: {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \"1.2rem\",\r\n\t\t},\r\n\t\taxes: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t},\r\n\t\taxisLabel: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \".8rem\",\r\n\t\t},\r\n\t\tfootnotes: {\r\n\t\t\tfill: theme.palette.text.primary,\r\n\t\t\tfontSize: \".6rem\",\r\n\t\t},\r\n\t}));\r\n\tlet classes = useStyles();\r\n\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const svgRef = useRef(null);\r\n\tconst boundsRef = useRef(null);\r\n\r\n\tconst getFocus = () => {\r\n\t\treturn d3\r\n\t\t\t.select(boundsRef.current)\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"class\", \"focus\")\r\n\t\t\t.style(\"display\", \"none\");\r\n\t};\r\n\tconst focus = getFocus();\r\n\r\n\tconst getOverlay = () => {\r\n\t\treturn d3\r\n\t\t\t.select(boundsRef.current)\r\n\t\t\t.append(\"rect\")\r\n\t\t\t.attr(\"class\", \"overlay\")\r\n\t\t\t.attr(\"width\", width)\r\n\t\t\t.attr(\"height\", height)\r\n\t\t\t.attr(\"opacity\", \"0\")\r\n\t\t\t.on(\"mouseover\", () => focus.style(\"display\", null));\r\n\t};\r\n\tconst overlay = getOverlay();\r\n\r\n    useEffect(() => {\r\n        // Scales\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n            .range([height, 0]);\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n        d3.select(xAxisRef.current).call(xAxisGenerator);\r\n        d3.select(yAxisRef.current).call(yAxisGenerator);\r\n\t}, [dataStates]);\r\n\r\n    return (\r\n\t\t<>\r\n\t\t\t<svg \r\n\t\t\t\tid=\"line-app\" \r\n\t\t\t\theight={wrapperHeight} \r\n\t\t\t\twidth={wrapperWidth} \r\n\t\t\t\tref={svgRef}\r\n\t\t\t\tclassName={classes.rootSVG}\r\n\t\t\t\tviewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\r\n\t\t\t\tpreserveAspectRatio\r\n\t\t\t>\r\n                <text\r\n                    className={classes.title}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate (${\r\n                        margin.left + width / 2\r\n                    }, ${margin.top / 2})`}\r\n                >\r\n                    COVID-19 US State Comparison\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${margin.left + width / 2}, ${\r\n                        height + margin.top + 40\r\n                    })`}\r\n                >\r\n                    Day of Outbreak\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${\r\n                        margin.left * .6\r\n                    }, ${height / 2}) rotate(-90)`}\r\n                >\r\n                    Cases per 1000 people\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 60\r\n                    })`}\r\n                >\r\n                    *Data from The New York Times, based on reports from state\r\n                    and local health agencies.\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 80\r\n                    })`}\r\n                >\r\n                    **Population data from US Census Bureau (2019).\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 100\r\n                    })`}\r\n                >\r\n                    ***2/27 is earliest possible 'Day 1,' since prior cases were\r\n                    isolated and may skew insights of \"community spread\"\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${\r\n                        height + margin.top + 120\r\n                    })`}\r\n                >\r\n                    †Legend will display up to 24 states (alphabetical order)\r\n                </text>\r\n                <g\r\n                    id=\"bounds\"\r\n                    transform={`translate(${margin.left}, ${margin.top})`}\r\n                    ref={boundsRef}\r\n                >\r\n                    <g\r\n                        ref={yAxisRef}\r\n                        id=\"y-axis\"\r\n                        style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    />\r\n                    <g\r\n                        ref={xAxisRef}\r\n                        id=\"x-axis\"\r\n                        transform={`translate(0,${height})`}\r\n                        style={{fontFamily: \"ralewaymedium, Helvetica, Arial, sans-serif\"}}\r\n                    />\r\n                    <Line focus={focus} overlay={overlay} {...props} />\r\n                </g>\r\n            </svg>\r\n\t\t</>\r\n    );\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterValues = (props) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nFilterValues.propTypes = {\r\n\tfilterOptions: PropTypes.shape([{\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"GDP\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"realGDP2019\")\r\n\t\tn: PropTypes.number.isRequired, // number of cases (ie. rows or documents) to filter\r\n\t\tsort: PropTypes.string.isRequired // \"ascending or descending\"\r\n\t}]),\r\n\tinfo: PropTypes.objectOf(PropTypes.object).isRequired\r\n};","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterCases = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"cases-high\", name: `Top ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-low\", name: `Bottom ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-high\", name: `Top ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-low\", name: `Bottom ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"cases-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Case\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"cases-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterPopulation = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"population-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Population\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"population-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterCategories = (props) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t}; \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nFilterCategories.propTypes = {\r\n\tfilterOptions: PropTypes.shape([{\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"Region\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"region\")\r\n\t}]),\r\n\tinfo: PropTypes.objectOf(PropTypes.object).isRequired\r\n};","// WRAPPER COMPONENT (FilterCategories)\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// components\r\nimport { FilterCategories } from \"../components/FilterCategories\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterRegion = (props) => {\r\n\tconst { handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"region-btn\" onClick={handleMenu}>\r\n\t\t\t\tFilter By Region\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterCategories \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\r\n\r\n// components\r\nimport { FilterCases } from \"./FilterCases\";\r\nimport { FilterPopulation } from \"./FilterPopulation\";\r\nimport { FilterRegion } from \"./FilterRegion\";\r\n\r\n// context\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\trootContainer: {\r\n\t\tmaxWidth: 550,\r\n\t\tminWidth: 175,\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t},\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const BatchSelect = props => {\r\n    const { selectedStates, setSelectedStates } = props;\r\n\r\n    // ref and context\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n    // assign\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedFilter, setSelectedFilter] = useState(null);\r\n\r\n\t// style\r\n\tconst theme = useTheme();\r\n\tconst classes = useStyles();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleMenu = e => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\t\r\n\tconst handleSelectedFilter = (newSelectedFilter) => {\r\n\t\tsetSelectedFilter(newSelectedFilter);\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst handleFilterCategories = (newFilter, info) => {\r\n        const filtered = Object.keys(info).filter(\r\n            s => info[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n    const handleFilterValues = (newFilter, info) => {\r\n\t\tconst n = newFilter.n;\r\n\t\tlet filtered;\r\n\r\n\t\tfiltered = Object.keys(info)\r\n\t\t.sort((a, b) =>\r\n\t\t\tnewFilter.sort === \"descending\"\r\n\t\t\t\t? info[b][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[a][newFilter.chartParam]\r\n\t\t\t\t: info[a][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[b][newFilter.chartParam]\r\n\t\t)\r\n\t\t.slice(0, n);\r\n\t\t\t\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (selectedFilter) {\r\n\t\t\tconst newSelection = selectedFilter.n \r\n\t\t\t\t? handleFilterValues(selectedFilter, infoStates)\r\n\t\t\t\t: handleFilterCategories(selectedFilter, infoStates);\r\n\t\t\tsetSelectedStates(newSelection);\r\n\t\t}\r\n\t},[selectedFilter]);\r\n\r\n    return (\r\n\t\t<Grid container className={classes.rootContainer}\r\n\t\t\tstyle={mqSmall\r\n\t\t\t? {flexDirection: \"column\", alignItems: \"center\"}\r\n\t\t\t: {flexDirection: \"row\"}}\r\n\t\t>\r\n\t\t\t<FilterCases\r\n\t\t\t\taria-controls=\"cases-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n\t\t\t<FilterPopulation\r\n\t\t\t\taria-controls=\"population-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n\t\t\t<FilterRegion\r\n\t\t\t\taria-controls=\"region-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n        </Grid>\r\n    );\r\n};","import React, { useContext } from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// styles\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const Dashboard = props => {\r\n    const {\r\n        selectedStates,\r\n        handleSelectedStates,\r\n        handleSelectAllStates,\r\n        handleDeselectAllStates,\r\n    } = props;\r\n\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup\r\n                style={{\r\n                    alignItems: \"left\",\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.text.primary,\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    id=\"select-all\"\r\n                    label=\"Select All\"\r\n                    name=\"Select All\"\r\n                    onClick={handleSelectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"selector-all\"\r\n                            name=\"select-all\"\r\n                            style={{ color: \"white\" }}\r\n                        >\r\n                            <CheckIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === true)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === false)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    ClickAwayListener,\r\n    Drawer,\r\n    Divider,\r\n    Menu,\r\n\tTooltip,\r\n\tuseMediaQuery\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { BatchSelect } from \"../pickers/BatchSelect\";\r\nimport { Dashboard } from \"../pickers/Dashboard\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n\t\tdisplay: \"flex\",\r\n    },\r\n    appBar: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const Navbar = props => {\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst theme = useTheme();\r\n\tconst classes = useStyles();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickAway = e => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleFilterMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                        disableRipple\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n\t\t\t\t\t{mqSmall\r\n\t\t\t\t\t\t? <>\r\n\t\t\t\t\t\t\t<Tooltip title=\"Chart filters\"> \r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tid=\"filters-btn-cc\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleFilterMenu}\r\n\t\t\t\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<AssessmentIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"filters-btn-cc\") : null}\r\n\t\t\t\t\t\t\t\tonClose={handleFilterMenu}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BatchSelect handleFilterMenu={handleFilterMenu} {...props} />\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</> \r\n\t\t\t\t\t\t: <BatchSelect {...props} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/line-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare/#/gapminder-app\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ color: theme.palette.text.primary }}\r\n                >\r\n                    <div\r\n                        className={classes.drawerHeader}\r\n                        style={{ backgroundColor: theme.palette.primary.main }}\r\n                    >\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            edge=\"end\"\r\n                            onClick={handleDrawerClose}\r\n                            style={{\r\n                                color: theme.palette.primary.contrastText,\r\n                            }}\r\n                        >\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <Dashboard {...props} />\r\n                </Drawer>\r\n            </ClickAwayListener>\r\n        </div>\r\n    );\r\n};\r\n","// Chart params: define params for drawing axes and chart\r\nexport const chartParams = {\r\n\tchartType: \"line\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'dayOfOutbreak',\r\n\t\talt1: null,\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'deathsPerThousand',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t],\r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\ttype: null,\r\n\t\tformat: null,\r\n\t\tselected: null,\r\n\t\toptions: [ \r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\ttype: null,\r\n\t\tselected: null,\r\n\t\toptions: [\r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nexport const labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// components\r\nimport { ChartCovidCompare } from \"./chart/ChartCovidCompare\";\r\nimport { Navbar } from './interface/Navbar';\r\n\r\n// params\r\nimport { chartParams, labelParams } from \"./appParams\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// styles\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const AppCovidCompare = ({ wrapper, bounds }) => {\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n\tconst [selectedStates, setSelectedStates] = useState(null);\r\n\r\n\tconst theme = useTheme();\r\n\tconst mqOrientPortrait = useMediaQuery(\"(orientation: portrait)\");\r\n\tconst mqOrientLandscape = useMediaQuery(\"(orientation: landscape)\");\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tcontainer: {\r\n\t\t\tpadding: 0,\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: \"100%\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\tflexDirection: () => mqOrientPortrait\r\n\t\t\t\t\t? \"row\"\r\n\t\t\t\t\t: \"column\",\r\n\t\t\tjustifyContent: \"center\",\r\n\t\t\tbackgroundColor: () => mqOrientPortrait\t\r\n\t\t\t\t? \"red\"\r\n\t\t\t\t: mqOrientLandscape\r\n\t\t\t\t? \"green\"\r\n\t\t\t\t: \"white\"\r\n\t\t},\r\n\t\titem: {\r\n\t\t\twidth: \"100%\",\r\n\t\t\tflexBasis: \"100%\"\r\n\t\t}\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleSelectedStates = (e) => {\r\n        setSelectedStates({\r\n            ...selectedStates,\r\n            [e.target.name]: {\r\n                ...selectedStates[e.target.name],\r\n                selected: e.target.checked\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: true\r\n            }\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    const handleDeselectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: false\r\n            }\r\n         });\r\n        setSelectedStates(revisedStates);\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (infoStates) {\r\n\t\t\tsetSelectedStates(infoStates);\r\n\t\t}\r\n\t }, [infoStates]);\r\n\r\n  return (\r\n    <Grid className={classes.container}>\r\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t<Grid item className={classes.item}>\r\n\t\t\t\t<Navbar \r\n\t\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\thandleSelectedStates={handleSelectedStates}\r\n\t\t\t\t\thandleSelectAllStates={handleSelectAllStates}\r\n\t\t\t\t\thandleDeselectAllStates={handleDeselectAllStates}\r\n\t\t\t\t/>\r\n\t\t\t\t<ChartCovidCompare\r\n\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\tlabelParams={labelParams}\r\n\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\twrapper={wrapper}\r\n\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t</MuiPickersUtilsProvider>\r\n    </Grid>\r\n  );\r\n};","export const wrapper = {\r\n\twrapperWidth: window.innerWidth * .9,\r\n\twrapperHeight: window.innerHeight * .9,\r\n\tmargin: { \r\n\t\ttop: 40,\r\n\t\tright: 40,\r\n\t\tbottom: 130,\r\n\t\tleft: 60\r\n\t}\r\n  };\r\n  \r\nexport const bounds = {\r\n\twidth: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\r\n\theight: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\r\n};","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst darkPrimary = \"#000018\";\r\nconst darkSecondary = \"#1c847f\";\r\nconst darkText = \"#fff\";\r\nconst darkBackground = \"#29293d\";\r\n\r\nconst lightPrimary = \"#1c847f\";\r\nconst lightText = \"#29293d\";\r\nconst lightBackground = \"#fff\";\r\n\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"#000018\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: darkSecondary,\r\n            contrastText: darkText,\r\n        },\r\n        text: {\r\n            primary: \"#fff\",\r\n            secondary: \"#fff\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: darkBackground,\r\n\t\t},\r\n        contrastThreshold: 3,\r\n    },\r\n    typography: {\r\n        fontFamily: [\"ralewaymedium\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\r\n            \",\"\r\n        ),\r\n    },\r\n    overrides: {\r\n        MuiFormControlLabel: {\r\n            root: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n            },\r\n            text: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiBase: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiInputBase: {\r\n            root: {\r\n\t\t\t\tcolor: \"#fff\",\r\n                maxWidth: 115,\r\n                paddingLeft: 10,\r\n            },\r\n        },\r\n        MuiPickersCalendarHeader: {\r\n            switchHeader: {\r\n                backgroundColor: darkPrimary,\r\n            },\r\n        },\r\n        MuiPickersDay: {\r\n            day: {\r\n                color: \"#29293d\",\r\n            },\r\n            daySelected: {\r\n                backgroundColor: \"#29293d\",\r\n            },\r\n            dayDisabled: {\r\n                color: \"#29293d\",\r\n            },\r\n            current: {\r\n                color: \"#29293d\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const getTheme = (theme, darkMode) => {\r\n\tif (darkMode) {\r\n \t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"dark\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#000018\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#29293d\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#fff\",\r\n\t\t\t\t\tsecondary: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\toverrides: {\r\n\t\t\t\t...theme.overrides,\r\n\t\t\t\tMuiButton: {\r\n\t\t\t\t\troot: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: {\r\n\t\t\t\t\t\tcolor: \"#fff\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t} else {\r\n\t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"light\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#1c847f\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#29293d\",\r\n\t\t\t\t\tsecondary: \"#000018\",\r\n        \t\t},\r\n\t\t\t},\r\n\t\t\toverrides: {\r\n\t\t\t\t...theme.overrides,\r\n\t\t\t\tMuiButton: {\r\n\t\t\t\t\troot: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttext: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tMuiInputBase: {\r\n\t\t\t\t\tinput: {\r\n\t\t\t\t\t\tcolor: \"#29293d\",\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n  }","export const colors = [\r\n\t\"#7FFFD4\",\r\n\t\"#8EE5EE\",\r\n\t\"#76EE00\",\r\n\t\"#D2691E\",\r\n\t\"#FF7F50\",\r\n\t\"#00CDCD\",\r\n\t\"#DC143C\",\r\n\t\"#00EE00\",\r\n\t\"#00EE76\",\r\n\t\"#8B5A2B\",\r\n\t\"#EE5C42\",\r\n\t\"#00C5CD\",\r\n\t\"#EE3A8C\",\r\n\t\"#9ACD32\",\r\n\t\"#43CD80\",\r\n\t\"#EE0000\",\r\n\t\"#7D26CD\",\r\n\t\"#EE9A00\",\r\n\t\"#C71585\",\r\n\t\"#9F79EE\",\r\n\t\"#8B5742\",\r\n\t\"#CDC673\",\r\n\t\"#218868\",\r\n\t\"#CD5555\",\r\n\t\"#CD9B1D\",\r\n\t\"#79CDCD\",\r\n\t\"#9BCD9B\",\r\n\t\"#FF7F00\",\r\n\t\"#EE3B3B\",\r\n\t\"#BF3EFF\",\r\n\t\"#00CED1\",\r\n\t\"#EE1289\",\r\n\t\"#228B22\",\r\n\t\"#CDAD00\",\r\n\t\"#00CD00\",\r\n\t\"#EE6AA7\",\r\n\t\"#CD5555\",\r\n\t\"#CD8C95\",\r\n\t\"#20B2AA\",\r\n\t\"#CD8162\",\r\n\t\"#CDCDB4\",\r\n\t\"#CD00CD\",\r\n\t\"#E066FF\",\r\n\t\"#00FA9A\",\r\n\t\"#C71585\",\r\n\t\"#FF4500\",\r\n\t\"#EE799F\",\r\n\t\"#CD96CD\",\r\n\t\"#912CEE\",\r\n\t\"#EEB4B4\",\r\n\t\"#4EEE94\"\r\n  ];","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport * as d3 from \"d3\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// data\r\nimport USStates from \"./data/us-states.csv\";\r\nimport stateInfo from \"./data/stateInfo.json\";\r\n\r\n// components\r\nimport { Footnotes } from \"./components/Footnotes\";\r\nimport { AppGapminder } from \"./components/appGapminder/AppGapminder\";\r\nimport { AppCovidCompare } from \"./components/appCovidCompare/AppCovidCompare\";\r\n\r\n// context\r\nimport { dataContext } from \"./context/dataContext\";\r\nimport { statesContext } from \"./context/statesContext\";\r\n\r\n// styles\r\nimport { wrapper, bounds } from \"./styles/dimensions\";\r\nimport { theme, getTheme } from \"./styles/theme\";\r\nimport { colors } from \"./styles/colors\";\r\nimport { CssBaseline, Grid, Container, useMediaQuery } from \"@material-ui/core\";\r\n\r\nfunction App() {\r\n    const [dataStates, setDataStates] = useState([]);\r\n    const [infoStates, setInfoStates] = useState(null);\r\n\tconst [darkMode, setDarkMode] = useState(true);\r\n\tconst mqOrientPortrait = useMediaQuery(\"(orientation: portrait)\");\r\n\tconst mqOrientLandscape = useMediaQuery(\"(orientation: landscape)\");\r\n\tconst [orientation, setOrientation] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // clean stateInfo data and assign selectedStates\r\n        const dateParser = d3.timeParse(\"%m-%d-%y\");\r\n        const revisedStates = {};\r\n\r\n        Object.keys(stateInfo).forEach((s, i) => {\r\n            revisedStates[s] = {\r\n                ...stateInfo[s],\r\n                lockdown: stateInfo[s].lockdown.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdown\r\n                    : dateParser(stateInfo[s].lockdown),\r\n                lockdownEnd: stateInfo[s].lockdownEnd.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdownEnd\r\n                    : dateParser(stateInfo[s].lockdownEnd),\r\n                color: colors[i],\r\n            };\r\n        });\r\n\r\n        const nested = d3\r\n            .nest()\r\n            .key(d => d.state)\r\n            .entries(dataStates);\r\n\r\n        Object.keys(nested).forEach(i => {\r\n            const s = nested[i].key;\r\n\r\n            const lastIndex = nested[i].values.length - 1;\r\n            const latestCaseCount = nested[i].values[lastIndex].cases;\r\n            const latestCaseCountPerThou =\r\n                (nested[i].values[lastIndex].cases / stateInfo[s].population) *\r\n                1000;\r\n\r\n            revisedStates[s] = {\r\n                ...revisedStates[s],\r\n                latestCaseCount: latestCaseCount,\r\n                latestCaseCountPerThou: latestCaseCountPerThou,\r\n            };\r\n        });\r\n        setInfoStates(revisedStates);\r\n    }, [dataStates]);\r\n\r\n    useEffect(() => {\r\n        // get COVID-19 state data\r\n        d3.csv(USStates).then(data => {\r\n            // clean data\r\n            const dateParser = d3.timeParse(\"%Y-%m-%d\");\r\n\r\n            data.forEach(d => {\r\n                d.date = dateParser(d.date);\r\n                d.fips = parseInt(d.fips);\r\n                d.cases = parseInt(d.cases);\r\n                d.deaths = parseInt(d.deaths);\r\n            });\r\n\r\n            // Filter data:\r\n            // Prior to 02-27-20, Washington had 1 or 2 cases from January.\r\n            // However, these were isolated cases and this graph is trying to track Covid-19 spread\r\n            // Also filter out territories Guam, Puerto Rico, etc.\r\n            data = data.filter(\r\n                d =>\r\n                    d.date > new Date(2020, 1, 26) &&\r\n                    Object.keys(stateInfo).includes(d.state)\r\n            );\r\n\r\n            // Normalize data:\r\n            // Add \"dayOfOutbreak\" to show elapsed time\r\n            // Add state population\r\n            // Add \"casesPerThousand\", \"deathsPerThousand\", \"mortalityRate\"\r\n            Object.keys(stateInfo).forEach(state => {\r\n                const stateData = data.filter(d => d.state === state);\r\n                stateData.forEach(d => {\r\n                    d.dayOfOutbreak =\r\n                        (d.date - stateData[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1; // day - day one, convert ms to days\r\n                    d.casesPerThousand =\r\n                        (d.cases / stateInfo[state].population) * 1000;\r\n                    d.deathsPerThousand =\r\n                        (d.deaths / stateInfo[state].population) * 1000;\r\n                    d.mortalityRate = (d.deaths / d.cases) * 100;\r\n                });\r\n            });\r\n            setDataStates(data);\r\n            console.log(\"imported dataset\");\r\n        });\r\n\t}, []);\r\n\r\n\twindow.screen.orientation.addEventListener(\"change\", () => {\r\n\t\tconst { type, angle } = window.screen.orientation;\r\n\t\tconsole.log(`Changed: ${type}, ${angle}`);\r\n\t\tsetOrientation(() => ({\r\n\t\t\ttype,\r\n\t\t\tangle\r\n\t\t}));\r\n\t});\r\n\t\r\n\t// useEffect(() => {\r\n\t// \tScreenOrientation.onchange = (e) => {\r\n\t// \t\tconsole.log(e);\r\n\t// \t\tsetOrientation({\r\n\t// \t\t\ttype: e.type,\r\n\t// \t\t\tangle: e.angle\r\n\t// \t\t});\r\n\t// \t};\t\r\n\t// }, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(window.screen.orientation.type);\r\n\t\tconsole.log(window.screen.orientation.angle);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"Orientation changed!\");\r\n\t}, [orientation]);\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={getTheme(theme, darkMode)}>\r\n                <CssBaseline />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <dataContext.Provider value={{ dataStates, setDataStates }}>\r\n                        <statesContext.Provider\r\n                            value={{ infoStates, setInfoStates }}\r\n                        >\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/line-app\"\r\n\t\t\t\t\t\t\t\tclassName=\"line-app\"\r\n\t\t\t\t\t\t\t\trender={() => <AppCovidCompare wrapper={wrapper} bounds={bounds} />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\tpath=\"/gapminder-app\"\r\n\t\t\t\t\t\t\t\tclassName=\"gapminder-app\"\r\n\t\t\t\t\t\t\t\trender={() => <AppGapminder />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/gapminder-app\" />\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t<Footnotes\r\n\t\t\t\t\t\t\t\tdarkMode={darkMode}\r\n\t\t\t\t\t\t\t\tsetDarkMode={setDarkMode}\r\n\t\t\t\t\t\t\t\twrapper={wrapper}\r\n\t\t\t\t\t\t\t\tbounds={bounds}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{orientation\r\n\t\t\t\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t\t\t\t<p>{orientation.type}</p>\r\n\t\t\t\t\t\t\t\t\t<p>{orientation.angle}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t: <div>\r\n\t\t\t\t\t\t\t\t\t<p>CovidCompare</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n                        </statesContext.Provider>\r\n                    </dataContext.Provider>\r\n                </MuiPickersUtilsProvider>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}