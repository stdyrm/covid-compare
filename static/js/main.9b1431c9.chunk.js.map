{"version":3,"sources":["data/us-states.csv","components/util/cleanStateInfo.js","components/util/importCSV.js","components/appGapminder/appParams.js","context/dataContext.js","context/statesContext.js","context/selectionContext.js","components/appGapminder/chart/CirclesGapminder.js","components/appGapminder/interface/OpacitySlider.js","components/appGapminder/interface/DayCounterSlider.js","components/appGapminder/chart/ChartGapminder.js","components/appGapminder/pickers/ParamPicker.js","components/sharedComponents/SectionTitle.js","components/appGapminder/interface/ParamDashboard.js","components/appGapminder/sharedComponents/pickers/Filter.js","components/appGapminder/pickers/FilterBatch.js","components/appGapminder/pickers/SelectedStatus.js","components/appGapminder/pickers/NumberPicker.js","components/appGapminder/interface/FilterDashboard.js","components/sharedComponents/ChartPicker.js","components/appGapminder/interface/MenuDrawer.js","context/ThemeContext.js","components/Settings.js","components/appGapminder/interface/Navbar.js","components/appGapminder/gapminderData.js","components/appGapminder/styles/dimensions.js","components/appGapminder/AppGapminder.js","components/util/constants.js","components/util/MouseMove.js","components/appCovidCompare/chart/Line.js","components/appCovidCompare/chart/ChartCovidCompare.js","components/appCovidCompare/components/FilterValues.js","components/appCovidCompare/pickers/FilterCases.js","components/appCovidCompare/pickers/FilterPopulation.js","components/appCovidCompare/components/FilterCategories.js","components/appCovidCompare/pickers/FilterRegion.js","components/appCovidCompare/pickers/BatchSelect.js","components/appCovidCompare/pickers/Dashboard.js","components/appCovidCompare/pickers/ParamPicker.js","components/appCovidCompare/interface/Navbar.js","components/appCovidCompare/appParams.js","components/appCovidCompare/AppCovidCompare.js","styles/dimensions.js","styles/theme.js","styles/colors.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cleanStateInfo","data","stateInfo","colors","a","revisedStates","Object","keys","forEach","s","i","color","nest","key","d","state","entries","nested","lastIndex","values","length","latestCaseCount","cases","latestCaseCountPerThou","population","importCSV","rawData","csv","dateParser","timeParse","date","fips","parseInt","deaths","filter","Date","includes","stateData","caseCounter","dayOfOutbreak","casesPerThousand","deathsPerThousand","mortalityRate","newCases","chartParams","chartType","toTimestamp","multiple","normalize","xParam","output","type","format","selected","alt1","options","yParam","zParam","cParam","tParam","cParamCategories","region","division","governor","dataContext","React","createContext","statesContext","selectionContext","CirclesGapminder","props","dayCounter","selector","scales","opacityNotSel","xScale","yScale","colorScale","infoStates","useContext","selectedCircles","setSelectedCircles","circlesRef","useRef","classes","makeStyles","theme","circle","stroke","opacity","circleSelected","strokeWidth","circleLabel","fill","palette","text","primary","fontSize","useStyles","useTheme","bisectDay","d3","left","dataAt","day","map","valueAt","b","t","useEffect","current","selectAll","join","sort","attr","htmlFormat","call","append","toFixed","toLocaleString","on","mouseOverCircle","style","mouseOutCircle","notSelected","label","abbreviation","ref","OpacitySlider","setOpacityNotSel","Typography","variant","Slider","id","value","valueLabelDisplay","step","min","max","onChange","e","newVal","DayCounterSlider","setDayCounter","ChartGapminder","wrapper","bounds","wrapperWidth","wrapperHeight","margin","width","height","dataStates","useState","setScales","mqSmall","useMediaQuery","breakpoints","down","bodyWrapper","paddingLeft","up","rootSVG","display","position","verticalAlign","overflow","chartTitle","textAnchor","fontWeight","chartSubtitle","chartWrapper","top","axes","legend","contrastText","sliderContainer","flexDirection","justifyContent","maxWidth","alignItems","slider","svgRef","boundsRef","yAxisRef","xAxisRef","legendRef","domain","range","yAxisGenerator","scale","xAxisGenerator","axis","enter","transition","duration","update","exit","remove","renderChart","Box","className","viewBox","transform","x","y","Grid","container","item","rootContainer","minWidth","padding","filterSelector","filterMenuItem","ParamPicker","handleSelector","p","FormControl","InputLabel","Select","name","o","MenuItem","typography","divider","backgroundColor","marginBottom","SectionTitle","href","innerProps","defaultClasses","clsx","children","Divider","defaultProps","paramPickerContainer","menuButton","filterBody","spacing","paddingRight","ParamDashboard","Filter","forwardRef","handleFilter","filterData","anchorEl","setAnchorEl","handleMenu","currentTarget","onClick","onClose","button","chipContainer","listStyle","chip","main","FilterBatch","filters","handleDeleteFilter","nStates","filterParams","category","params","chartParam","n","handleFilters","currSelection","newFilter","filtered","handleFilterCategories","slice","handleFilterValues","prevState","all","f","component","Chip","size","onDelete","stateLabelList","deselectAll","alignContent","paddingTop","deselectAllButton","selectedLabel","notSelectedLabel","SelectedStatus","handleChange","handleDeselectAll","Tooltip","title","IconButton","FormControlLabel","checked","control","Checkbox","input","NumberPicker","setNStates","TextField","InputProps","inputProps","defaultValue","target","filterBatch","selectedStatus","marginTop","FilterDashboard","setFilters","FormGroup","deletedFilter","newFilterList","secondary","ChartPicker","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","MenuDrawer","mobileOpen","handleDrawer","persistent","Hidden","mdUp","Drawer","anchor","direction","open","paper","ModalProps","keepMounted","Toolbar","smDown","drawerContainer","ThemeContext","Settings","darkMode","setDarkMode","rootGrid","window","innerWidth","footerButton","pathArray","location","split","queryID","saveSvgAsPng","document","querySelector","background","default","encoderOptions","fonts","url","placement","root","appBar","dark","appBarShift","marginLeft","transitions","create","easing","easeOut","enteringScreen","hide","Navbar","setMobileOpen","handleOptions","AppBar","edge","disableRipple","Button","Menu","Boolean","MenuList","gapminderData","newData","eachState","push","innerHeight","right","bottom","AppGapminder","setData","setSelector","navbar","then","res","Provider","param","dateFormatter","dimensions","MouseMove","focus","overlay","linesStates","selectedStates","selectedYParam","x0","invert","this","bisectDate","dataEachState","stateHTML","dataEachStateRangeY","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","frozen","select","Line","mqMedium","mqLarge","setLinesStates","filterStates","statesObject","lineGenerator","linesObject","lastDayOfOutbreak","lastCasesDatum","line","lineLabelX","lineLabelY","xShift","yShift","strokeLinejoin","strokeLinecap","fontFamily","axisLabel","footnotes","ChartCovidCompare","scaleLinear","extent","scaleLog","axisLeft","ticks","tickFormat","axisBottom","FilterValues","filterOptions","handleSelectedFilter","FilterCases","FilterPopulation","FilterCategories","FilterRegion","tab","menuItem","BatchSelect","setSelectedStates","selectedFilter","setSelectedFilter","newSelectedFilter","newSelection","info","aria-controls","aria-haspopup","sectionTitleTypography","drawerBody","alignText","selectAllButton","stateLabelSelected","stateLabelNotSelected","Dashboard","handleSelectedStates","handleSelectAllStates","handleDeselectAllStates","formControl","selectInput","setChartParams","autoWidth","sharp","leavingScreen","navbarPickers","setOpen","handleFilterMenu","textAlign","ClickAwayListener","onClickAway","CHART_PARAMS","AppCovidCompare","mqOrientPortrait","flexBasis","utils","DateFnsUtils","lightTheme","light","darkTheme","createMuiTheme","overrides","MuiInputBase","getTheme","COLORS","App","setDataStates","setInfoStates","STATE_INFO","USStates","ThemeProvider","CssBaseline","path","render","exact","from","to","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,uC,2OCErCC,EAAc,uCAAG,WAAOC,EAAMC,EAAWC,GAAxB,iBAAAC,EAAA,6DACbC,EAAgB,GAEtBC,OAAOC,KAAKL,GAAWM,SAAQ,SAACC,EAAGC,GAC/BL,EAAcI,GAAd,eACOP,EAAUO,GADjB,CAEIE,MAAOR,EAAOO,QANH,SAUEE,cAChBC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,SACXC,QAAQf,GAZM,cAUbgB,EAVa,gBAcbX,OAAOC,KAAKU,GAAQT,SAAQ,SAAAE,GAC9B,IAAMD,EAAIQ,EAAOP,GAAGG,IAEdK,EAAYD,EAAOP,GAAGS,OAAOC,OAAS,EACtCC,EAAkBJ,EAAOP,GAAGS,OAAOD,GAAWI,MAC9CC,EACDN,EAAOP,GAAGS,OAAOD,GAAWI,MAAQpB,EAAUO,GAAGe,WAClD,IAEJnB,EAAcI,GAAd,eACOJ,EAAcI,GADrB,CAEIY,gBAAiBA,EACjBE,uBAAwBA,OA1Bb,gCA6BZlB,GA7BY,2CAAH,0DCAdoB,EAAS,uCAAG,WAAOC,EAASxB,GAAhB,iBAAAE,EAAA,sEACAuB,YAAID,GADJ,cACbzB,EADa,OAIR2B,EAAaC,YAAU,YAE7B5B,EAAKO,SAAQ,SAAAM,GACTA,EAAEgB,KAAOF,EAAWd,EAAEgB,MACtBhB,EAAEiB,KAAOC,SAASlB,EAAEiB,MACpBjB,EAAEQ,MAAQU,SAASlB,EAAEQ,OACrBR,EAAEmB,OAASD,SAASlB,EAAEmB,WAI1BhC,EAAOA,EAAKiC,QACR,SAAApB,GAAC,OACGA,EAAEgB,KAAO,IAAIK,KAAK,KAAM,EAAG,KAC3B7B,OAAOC,KAAKL,GAAWkC,SAAStB,EAAEC,UAO1CT,OAAOC,KAAKL,GAAWM,SAAQ,SAAAO,GAC3B,IAAMsB,EAAYpC,EAAKiC,QAAO,SAAApB,GAAC,OAAIA,EAAEC,QAAUA,KAC3CuB,EAAc,EAClBD,EAAU7B,SAAQ,SAAAM,GACdA,EAAEyB,eACGzB,EAAEgB,KAAOO,EAAU,GAAGP,MAAvB,MACA,EACJhB,EAAE0B,iBAAoB1B,EAAEQ,MAAQpB,EAAUa,GAAOS,WAAc,IAC/DV,EAAE2B,kBACG3B,EAAEmB,OAAS/B,EAAUa,GAAOS,WAAc,IAC/CV,EAAE4B,cAAiB5B,EAAEmB,OAASnB,EAAEQ,MAAS,IACzCR,EAAE6B,SAAW7B,EAAEQ,MAAQgB,EAEvBA,EAAcxB,EAAEQ,YArCV,kBAwCPrB,GAxCO,2CAAH,wD,QCFF2C,EAAc,CACvBC,UAAW,SACXC,YAAa,KACbC,UAAU,EACVC,WAAW,EACXC,OAAQ,CAEJC,OAAQ,SACRC,KAAM,SACNC,OAAQ,OACRC,SAAU,mBACVC,KAAM,QACNC,QAAS,CAAC,mBAAoB,QAAS,oBAAqB,WAEhEC,OAAQ,CAEJN,OAAQ,SACRC,KAAM,SACNC,OAAQ,OACRC,SAAU,oBACVC,KAAM,SACNC,QAAS,CAAC,mBAAoB,QAAS,oBAAqB,WAEhEE,OAAQ,CAEJP,OAAQ,cACRC,KAAM,SACNC,OAAQ,OACRC,SAAU,aACVE,QAAS,CAAC,aAAc,oBAAqB,MAAO,SAExDG,OAAQ,CAEJR,OAAQ,iBACRC,KAAM,cACNE,SAAU,SACVE,QAAS,CAAC,SAAU,WAAY,aAEpCI,OAAQ,CAEJT,OAAQ,OACRC,KAAM,OACNE,SAAU,gBACVE,QAAS,CAAC,gBAAiB,UAYtBK,EAAmB,CAC5BC,OAAQ,CAAC,YAAa,UAAW,QAAS,QAC1CC,SAAU,CACN,cACA,eACA,qBACA,qBACA,iBACA,qBACA,qBACA,WACA,WAEJC,SAAU,CAAC,aAAc,WAAY,QClEnCC,EAAcC,IAAMC,gB,QCApBC,EAAgBF,IAAMC,gBCAfE,EAAmBH,IAAMC,gB,iBCQzBG,EAAmB,SAAAC,GAAU,IAC9BrE,EAAsDqE,EAAtDrE,KAAMsE,EAAgDD,EAAhDC,WAAYC,EAAoCF,EAApCE,SAAUC,EAA0BH,EAA1BG,OAAQC,EAAkBJ,EAAlBI,cACpCzB,EAAmCuB,EAAnCvB,OAAQO,EAA2BgB,EAA3BhB,OAAQC,EAAmBe,EAAnBf,OAAQC,EAAWc,EAAXd,OACxBiB,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,WAGhBC,EAAeC,qBAAWZ,GAA1BW,WAN6B,EAOWC,qBAC5CX,GADIY,EAP6B,EAO7BA,gBAAiBC,EAPY,EAOZA,mBAGnBC,EAAaC,iBAAO,MAkBpBC,EAfYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,OAAQ,CACJC,OAAQ,OACRC,QAASf,GAEbgB,eAAgB,CACZF,OAAQ,UACRG,YAAa,EACbF,QAAS,IAEbG,YAAa,CACTC,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,YAGFC,GACVZ,EAAQa,cAERC,EAAYC,KAAY,0CAAYC,KAE1C,SAASC,EAAOC,GACZ,OAAOvG,EAAKwG,KAAI,SAAA3F,GAAC,gBACbC,MAAOD,EAAEC,MACT8C,OAAQ/C,EAAE+C,QAFG,cAGZZ,EAAOI,SAAWqD,EAAQ5F,EAAEmC,EAAOI,UAAWmD,IAHlC,cAIZhD,EAAOH,SAAWqD,EAAQ5F,EAAE0C,EAAOH,UAAWmD,IAJlC,KAQrB,SAASE,EAAQvF,EAAQqF,GACrB,IAAM9F,EAAI0F,EAAUjF,EAAQqF,EAAK,EAAGrF,EAAOC,OAAS,GAC9ChB,EAAIe,EAAOT,GAEjB,GAAIA,EAAI,EAAG,CACP,IAAMiG,EAAIxF,EAAOT,EAAI,GACfkG,GAAKJ,EAAMpG,EAAE,KAAOuG,EAAE,GAAKvG,EAAE,IACnC,OAAOA,EAAE,IAAM,EAAIwG,GAAKD,EAAE,GAAKC,EAEnC,OAAOxG,EAAE,GA4Kb,OAzKAyG,qBAAU,WACZ,GAAI5G,EAAM,CACA,IAAMsF,EAASc,IACHnB,EAAW4B,SAClBC,UAAU,UACV9G,KAAKsG,EAAOhC,IAAa,SAAAzD,GAAC,OAAIA,KAC9BkG,KAAK,UACLC,MAAK,SAAC7G,EAAGuG,GAAJ,OACFN,IACIvB,EAAW1E,EAAEW,OAAO0C,EAAOJ,UAC3ByB,EAAW6B,EAAE5F,OAAO0C,EAAOJ,cAGlC6D,KAAK,KAAK,SAAApG,GAAC,MACY,eAApB2C,EAAOJ,SACDyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IACnB,sBAApBI,EAAOJ,SACPyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IACnB,QAApBI,EAAOJ,SACPyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IACvC,KAET6D,KAAK,MAAM,SAAApG,GAAC,OAAI6D,EAAO7D,EAAEmC,EAAOI,cAChC6D,KAAK,MAAM,SAAApG,GAAC,OAAI8D,EAAO9D,EAAE0C,EAAOH,cAChC6D,KAAK,QAAQ,SAAApG,GAAC,OACX+D,EAAWC,EAAWhE,EAAEC,OAAO2C,EAAOL,cAEzC6D,KAAK,MAAM,SAAApG,GAAC,uBAAcgE,EAAWhE,EAAEC,OAAOoG,eAC9CD,KAAK,SAAS,SAAApG,GAAC,OACZkE,EAAgB3B,SAASjB,SAAStB,EAAEC,OAC9BqE,EAAQM,eACRN,EAAQG,UAEjB6B,MAAK,SAAA7B,GAAM,OACRA,EACK8B,OAAO,SACPtB,MAAK,SAAAjF,GAAC,MACH,CACIA,EAAEC,MADN,cAEWwD,GACa,qBAApBtB,EAAOI,SAAP,sBAEUvC,EAAE0B,kBACF1B,EAAE0B,iBAAiB8E,QAAQ,IAEX,UAApBrE,EAAOI,SAAP,iBAEIvC,EAAEQ,OAASR,EAAEQ,MAAMiG,kBAEH,sBAApBtE,EAAOI,SAAP,uBAEIvC,EAAE2B,mBACF3B,EAAE2B,kBAAkB6E,QAAQ,IAEZ,WAApBrE,EAAOI,SAAP,kBAEIvC,EAAEmB,QAAUnB,EAAEmB,OAAOsF,kBAEzB,QACc,qBAApB/D,EAAOH,SAAP,sBAEUvC,EAAE0B,kBACF1B,EAAE0B,iBAAiB8E,QAAQ,IAEX,UAApB9D,EAAOH,SAAP,iBAEIvC,EAAEQ,OAASR,EAAEQ,MAAMiG,kBAEH,sBAApB/D,EAAOH,SAAP,uBAEIvC,EAAE2B,mBACF3B,EAAE2B,kBAAkB6E,QAAQ,IAEZ,WAApB9D,EAAOH,SAAP,kBAEIvC,EAAEmB,QAAUnB,EAAEmB,OAAOsF,kBAEzB,SACRP,KAAK,YAIvBzB,EAAOiC,GAAG,aAAa,SAAA1G,GACnB,IAAM2G,EAAkBpB,IAAA,kBACTvB,EAAWhE,EAAEC,OAAOoG,cAGb,IAAlBzC,GACAM,EAAgB3B,SAASjB,SAAStB,EAAEC,SAEpC0G,EACKP,KAAK,SAAU,WACfQ,MAAM,UAAW,IACjBA,MAAM,SAAU,WAChBA,MAAM,eAAgB,MAInCnC,EAAOiC,GAAG,YAAY,SAAA1G,GAClB,IAAM6G,EAAiBtB,IAAA,kBACRvB,EAAWhE,EAAEC,OAAOoG,aAE/BnC,EAAgB4C,YAAYxF,SAAStB,EAAEC,QACvC4G,EACKD,MAAM,UAAWhD,GACjBgD,MAAM,SAAU,WAI7BnC,EAAOiC,GAAG,SAAS,SAAA1G,GACXkE,EAAgB3B,SAASjB,SAAStB,EAAEC,QACpCkE,EAAmB,eACZD,EADW,CAEd3B,SAAU2B,EAAgB3B,SAASnB,QAC/B,SAAAzB,GAAC,OAAIA,IAAMK,EAAEC,SAEjB6G,YAAY,GAAD,mBAAM5C,EAAgB4C,aAAtB,CAAmC9G,EAAEC,WAEpDsF,IAAA,kBAAqBvB,EAAWhE,EAAEC,OAAOoG,aACpCO,MAAM,UAAWhD,GACjBgD,MAAM,SAAU,UAErBzC,EAAmB,eACZD,EADW,CAEd3B,SAAS,GAAD,mBAAM2B,EAAgB3B,UAAtB,CAAgCvC,EAAEC,QAC1C6G,YAAa5C,EAAgB4C,YAAY1F,QACrC,SAAAzB,GAAC,OAAIA,IAAMK,EAAEC,YAGrBsF,IAAA,kBAAqBvB,EAAWhE,EAAEC,OAAOoG,aACpCO,MAAM,UAAW,IACjBA,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAInCrB,IAAUnB,EAAW4B,SAChBC,UAAU,QACV9G,KAAKsG,EAAOhC,IAAa,SAAAzD,GAAC,OAAIA,KAC9BkG,KAAK,QACLI,MAAK,SAAAS,GACF,IAAMzG,EAAS,SAAAN,GACX,MAAwB,eAApB2C,EAAOJ,SAEHyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IAEhB,sBAApBI,EAAOJ,SACPyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IACnB,QAApBI,EAAOJ,SAEVyB,EAAWhE,EAAEC,OAAO0C,EAAOJ,UAAY,IAGpC,GAGfwE,EACKX,KAAK,KAAK,SAAApG,GAAC,OAAI6D,EAAO7D,EAAEmC,EAAOI,WAAajC,EAAON,MACnDoG,KAAK,KAAK,SAAApG,GAAC,OAAI8D,EAAO9D,EAAE0C,EAAOH,WAAajC,EAAON,SAE3DoG,KAAK,WAAW,SAAApG,GAAC,OACdkE,EAAgB3B,SAASjB,SAAStB,EAAEC,OAAS,GAAM,KAEtDmG,KAAK,QAAS9B,EAAQQ,aACtBsB,KAAK,SAAU,gBACfnB,MAAK,SAAAjF,GAAC,OAAIgE,EAAWhE,EAAEC,OAAO+G,mBAExC,CAACvD,EAAYC,EAAUC,EAAQO,EAAiBN,EAAeY,IAG9D,oCACI,uBAAGyC,IAAK7C,M,kBCxOP8C,EAAgB,SAAA1D,GAAU,IAC3BI,EAAoCJ,EAApCI,cAAeuD,EAAqB3D,EAArB2D,iBAEvB,OACI,oCACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,wBACA,kBAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAO5D,EACP6D,kBAAkB,OAClBC,KAAM,GACNC,IAAK,EACLC,IAAK,EACLC,SAAU,SAACC,EAAGC,GAAJ,OAAeZ,EAAiBY,QCb7CC,EAAmB,SAAAxE,GAAU,IAC9BC,EAA8BD,EAA9BC,WAAYwE,EAAkBzE,EAAlByE,cAEpB,OACI,oCACI,kBAACb,EAAA,EAAD,CAAYC,QAAQ,WAApB,mBACA,kBAACC,EAAA,EAAD,CACIC,GAAG,qBACHC,MAAO/D,EACPgE,kBAAkB,OAClBC,KAAM,EACNC,IAAK,EACLC,IAAK,IACLC,SAAU,SAACC,EAAGC,GAAJ,OAAeE,EAAcF,Q,2BCA1CG,EAAiB,SAAA1E,GAAU,IAC5BV,EAAsDU,EAAtDV,iBAAkB3D,EAAoCqE,EAApCrE,KAAMuE,EAA8BF,EAA9BE,SAAUyE,EAAoB3E,EAApB2E,QAASC,EAAW5E,EAAX4E,OAC3CjG,EAA2BuB,EAA3BvB,OAAQO,EAAmBgB,EAAnBhB,OAAQE,EAAWc,EAAXd,OAChByF,EAAwCF,EAAxCE,aAAcC,EAA0BH,EAA1BG,cAAeC,EAAWJ,EAAXI,OAC7BC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OAEPC,EAAezE,qBAAWf,GAA1BwF,WAN2B,EAOPC,mBAAS,MAPF,mBAO5BhF,EAP4B,KAOpBiF,EAPoB,OAQCD,mBAAS,GARV,mBAQ5BlF,EAR4B,KAQhBwE,EARgB,OASOU,mBAAS,IAThB,mBAS5B/E,EAT4B,KASbuD,EATa,KAW7B3C,EAAQa,cACRwD,EAAUC,YAActE,EAAMuE,YAAYC,KAAK,OAiE/C1E,EAhEYC,aAAW,SAAAC,GAAK,MAAK,CACnCyE,YAAY,aACRC,YAAa,GACZ1E,EAAMuE,YAAYI,GAAG,MAAQ,CAC1BD,YAAa,MAGrBE,QAAS,CACLC,QAAS,eACTC,SAAU,WACVd,MAAO,OACPe,cAAe,SACfC,SAAU,UAEdC,WAAW,aACPC,WAAY,SACZ3E,KAAMP,EAAMQ,QAAQC,KAAKC,QACzByE,WAAY,IACZxE,SAAU,SACTX,EAAMuE,YAAYI,GAAG,MAAQ,CAC1BhE,SAAU,SAGlByE,cAAc,aACVF,WAAY,SACZ3E,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,SACTX,EAAMuE,YAAYI,GAAG,MAAQ,CAC1BhE,SAAU,UAGlB0E,aAAc,CACVR,QAAS,eACTC,SAAU,WACVQ,IAAK,EACLtE,KAAM,GAEV4C,OAAQ,CACJI,MAAOA,EACPC,OAAQA,GAEZsB,KAAM,CACFlK,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9B8E,OAAO,aACHnK,MAAO2E,EAAMQ,QAAQE,QAAQ+E,aAC7BN,WAAY,IACZxE,SAAU,SACTX,EAAMuE,YAAYI,GAAG,MAAQ,CAC1BhE,SAAU,UAGlB+E,gBAAiB,CACbC,cAAe,kBAAOtB,EAAU,SAAW,OAC3CuB,eAAgB,kBAAOvB,EAAU,SAAW,iBAC5CwB,SAAU7B,EACVD,OAAQ,SACR+B,WAAY,UAEhBC,OAAQ,CACJ/B,MAAO,kBAAOK,EAAU,MAAQ,WAIxBzD,GAEVoF,EAASnG,iBAAO,MAChBoG,EAAYpG,iBAAO,MACnBqG,EAAWrG,iBAAO,MAClBsG,EAAWtG,iBAAO,MAClBuG,EAAYvG,iBAAO,MAyIzB,OAlBA0B,qBAAU,WACF2C,GAtHY,WAChB,IASI3E,EATEF,EAAS0B,MAEVsF,OAAOtF,IAAUmD,GAAY,SAAA1I,GAAC,OAAIA,EAAEmC,EAAOI,cAC3CuI,MAAM,CAAC,EAAGtC,IACT1E,EAASyB,MAEVsF,OAAOtF,IAAUmD,GAAY,SAAA1I,GAAC,OAAIA,EAAE0C,EAAOH,cAC3CuI,MAAM,CAACrC,EAAQ,IAII,WAApB7F,EAAOL,SACPwB,EAAawB,MAERsF,OAAO/H,EAAiBC,QACxB+H,MAAMvF,KACgB,aAApB3C,EAAOL,SACdwB,EAAawB,MAERsF,OAAO/H,EAAiBE,UACxB8H,MAAMvF,KACgB,aAApB3C,EAAOL,WACdwB,EAAawB,MAERsF,OAAO/H,EAAiBG,UACxB6H,MAAM,CAAC,UAAW,UAAW,aAGtClC,EAAU,CACN/E,OAAQA,EACRC,OAAQA,EACRC,WAAYA,IAIhB,IAAMgH,EAAiBxF,MAAcyF,MAAMlH,GACrCmH,EAAiB1F,MAAgByF,MAAMnH,GAE/B0B,IACFoF,EAAS3E,SAChBM,KAAK2E,GACL3E,MAAK,SAAA4E,GACFA,EAAK3E,OAAO,QAAQH,KAAK,QAAS,UAClC8E,EAAK3E,OAAO,QAAQH,KAAK,QAAS,sBAIrCH,UAAU,WACV9G,KAAKgD,EAAOI,UAAU,SAAAvC,GAAC,OAAIA,KAC3BkG,KAAK,QACLE,KAAK,IAAKoC,GACVpC,KAAK,IAAK,IACVA,KAAK,cAAe,OACpBA,KAAK,QAAS,UACdA,KAAK,OAAQ5B,EAAMQ,QAAQC,KAAKC,SAChCD,KAAK9C,EAAOI,UAEHgD,IACFmF,EAAS1E,SAChBM,KAAKyE,GACLzE,MAAK,SAAA4E,GAAI,OAAIA,EAAK3E,OAAO,QAAQH,KAAK,QAAS,aAG/CH,UAAU,WACV9G,KAAKuD,EAAOH,UAAU,SAAAvC,GAAC,OAAIA,KAC3BkG,KAAK,QACLE,KAAK,IAAK,GACVA,KAAK,KAAM,IACXA,KAAK,cAAe,OACpBA,KAAK,YAAa,eAClBA,KAAK,QAAS,UACdA,KAAK,OAAQ5B,EAAMQ,QAAQC,KAAKC,SAChCD,KAAKvC,EAAOH,UAGjBgD,IAAUqF,EAAU5E,SACfC,UAAU,QACV9G,KAAK2D,EAAiBF,EAAOL,WAAW,SAAAvC,GAAC,OAAIA,KAC7CkG,MACG,SAAAiF,GAAK,OACDA,EACK5E,OAAO,QACPH,KAAK,IAAK,QACVA,KAAK,KAAM,KACXA,KAAK,QAAQ,SAAApG,GAAC,OAAI+D,EAAW/D,MAC7BoG,KAAK,cAAe,SACpBnB,MAAK,SAAAjF,GAAC,OAAIA,KACVsG,MAAK,SAAA6E,GAAK,OACPA,EACKC,aACAC,SAAS,KACTjF,KAAK,KAAK,SAACpG,EAAGJ,GAAJ,OAAoB,GAAT6I,EAAc,GAAK7I,WAEzD,SAAA0L,GAAM,OACFA,EACK/E,OAAO,QACPH,KAAK,QAAQ,SAAApG,GAAC,OAAI+D,EAAW/D,MAC7BoG,KAAK,cAAe,SACpBA,KAAK,IAAK,IACVnB,MAAK,SAAAjF,GAAC,OAAIA,KACVsG,MAAK,SAAAgF,GAAM,OAAIA,EAAOF,aAAaC,SAAS,WACrD,SAAAE,GAAI,OACAA,EACKnF,KAAK,OAAQ,QACbA,KAAK,cAAe,SACpBnB,MAAK,SAAAjF,GAAC,OAAIA,KACVsG,MAAK,SAAAiF,GAAI,OACNA,EACKH,aACAC,SAAS,KACTjF,KAAK,IAAK,GACVoF,eAOrBC,KAEL,CAAC/C,EAAYhF,EAAUc,IAE1BuB,qBAAU,WACNR,IAAUkF,EAAUzE,SACfC,UAAU,oBACVC,KAAK,QACLE,KAAK,cAAe,OACpBA,KAAK,IAAKoC,GACVpC,KAAK,KAAM,IACXA,KAAK,QAAS,mBACdQ,MAAM,OAAQpC,EAAMQ,QAAQC,KAAKC,SACjCD,KARL,cAQiBxB,MAClB,CAACA,EAAYe,IAGZ,kBAACkH,EAAA,EAAD,CAAKC,UAAWrH,EAAQ2E,aACpB,6BACI,yBACIhC,IAAKuD,EACLjD,GAAG,gBACHkB,OAAQH,EACRE,MAAOH,EACPsD,UAAWrH,EAAQ8E,QACnBwC,QAAO,cAASvD,EAAT,YAAyBC,IAEhC,uBACIrB,IAAKwD,EACLkB,UAAWrH,EAAQ8D,OACnByD,UAAS,oBAAetD,EAAO/C,KAAtB,aAA+B+C,EAAOuB,IAAtC,MAET,0BACIgC,EAAGtD,EAAQ,EACXuD,EAAGlD,EAAwB,IAAbN,EAAOuB,IAA0B,IAAbvB,EAAOuB,IACzC6B,UAAWrH,EAAQmF,YAHvB,iCAOA,0BACIqC,EAAGtD,EAAQ,EACXuD,EAAGlD,EAAwB,IAAbN,EAAOuB,IAA0B,IAAbvB,EAAOuB,IACzC6B,UAAWrH,EAAQmF,YAHvB,yBAOA,0BACIqC,EAAGtD,EAAQ,EACXuD,EAEwB,KAAbxD,EAAOuB,IAGlB6B,UAAWrH,EAAQsF,eAPvB,iCAWA,uBACI3C,IAAK0D,EACLkB,UAAS,uBAAkBpD,EAAlB,KACTkD,UAAWrH,EAAQyF,OAEvB,uBAAG9C,IAAKyD,EAAUiB,UAAWrH,EAAQyF,OACrC,uBACI9C,IAAK2D,EACLiB,UAAS,uBAAkBpD,EAAlB,KACTkD,UAAWrH,EAAQ0F,SAEtB7K,GAAQwE,EACL,kBAAC,EAAD,iBACQH,EADR,CAEIG,OAAQA,EACRF,WAAYA,EACZG,cAAeA,KAGnB,wCAKhB,kBAACoI,EAAA,EAAD,CAAMC,WAAS,EAACN,UAAWrH,EAAQ4F,iBAC/B,kBAAC8B,EAAA,EAAD,CAAME,MAAI,EAACP,UAAWrH,EAAQiG,QAC1B,kBAAC,EAAD,CACI9G,WAAYA,EACZwE,cAAeA,KAGvB,kBAAC+D,EAAA,EAAD,CAAME,MAAI,EAACP,UAAWrH,EAAQiG,QAC1B,kBAAC,EAAD,CACI3G,cAAeA,EACfuD,iBAAkBA,Q,oCC1SpC/B,EAAYb,aAAW,SAAAC,GAAK,MAAK,CACnC2H,cAAe,CACX9B,SAAU,IACV+B,SAAU,IACVhC,eAAgB,eAChBiC,QAAS,EACT9D,OAAQ,GAEZ+D,eAAgB,CACZF,SAAU,IACVzC,WAAY,IACZxE,SAAU,QACVtF,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9BqH,eAAgB,CACZ1M,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1ByE,WAAY,IACZxE,SAAU,aAILqH,EAAc,SAAAhJ,GAAU,IACzB2G,EAA4C3G,EAA5C2G,cAAezG,EAA6BF,EAA7BE,SAAU+I,EAAmBjJ,EAAnBiJ,eAC3BnI,EAAUc,IAEhB,OACI,kBAAC4G,EAAA,EAAD,CACIC,WAAS,EACTN,UAAWrH,EAAQ6H,cACnBvF,MACsB,QAAlBuD,EACM,CAAEA,cAAe,MAAOC,eAAgB,gBACxC,CAAED,cAAe,WAG1B3K,OAAOC,KAAKiE,GAAUiC,KAAI,SAAA+G,GACvB,OACI,kBAACC,EAAA,EAAD,CAAa5M,IAAK2D,EAASgJ,GAAGtK,QAC1B,kBAACwK,EAAA,EAAD,KAAalJ,EAASgJ,GAAGtK,QACzB,kBAACyK,EAAA,EAAD,CACIC,KAAMJ,EACNlF,MAAO9D,EAASgJ,GAAGnK,SACnBsF,SAAU4E,EACVd,UAAWrH,EAAQgI,gBAElB5I,EAASgJ,GAAGjK,QAAQkD,KAAI,SAAAoH,GACrB,OACI,kBAACC,EAAA,EAAD,CACIjN,IAAKgN,EACLvF,MAAOuF,EACPpB,UAAWrH,EAAQiI,gBAElBQ,a,gBCzDnC3H,EAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCyI,WAAY,CACRpN,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1ByE,WAAY,IACZxE,SAAU,UAEd+H,QAAS,CACLC,gBAAiB3I,EAAMQ,QAAQC,KAAKC,QACpCkI,aAAc,aAITC,EAAe,SAAA7J,GAAU,IAC1B0J,EAAuC1J,EAAvC0J,QAAe5I,GAAwBd,EAA9B8J,KAA8B9J,EAAxBc,SAASiJ,EAAe/J,EAAf+J,WAC1BC,EAAiBpI,IAEvB,OACI,oCACI,kBAACgC,EAAA,EAAD,eACIuE,UAAW8B,YAAKD,EAAeP,WAAY3I,EAAQ2I,aAC/CM,EAAWN,YAEdzJ,EAAMkK,UAEVR,GACG,kBAACS,EAAA,EAAD,eACIhC,UAAW8B,YAAKD,EAAeN,QAAS5I,EAAQ4I,UAC5CK,EAAWL,YAYnCG,EAAaO,aAAe,CACxBtJ,QAAS,GACTiJ,WAAY,ICxChB,IAAMnI,EAAYb,aAAW,SAAAC,GAAK,MAAK,CACtCqJ,qBAAsB,GACnBC,WAAY,CACRjO,MAAO2E,EAAMQ,QAAQE,QAAQ+E,aAC7B,UAAW,CACPkD,gBAAiB,gBAGzBY,WAAY,CACd7E,YAAa1E,EAAMwJ,QAAQ,GAC3BC,aAAczJ,EAAMwJ,QAAQ,GACtBZ,aAAc5I,EAAMwJ,QAAQ,QAuBrBE,EAnBQ,SAAA1K,GAAU,IACrB2G,EAAkD3G,EAAlD2G,cAAehL,EAAmCqE,EAAnCrE,KAAMuE,EAA6BF,EAA7BE,SAAU+I,EAAmBjJ,EAAnBiJ,eACjCnI,EAAUc,IAEhB,OACI,yBAAKuG,UAAWrH,EAAQuJ,sBACpB,kBAAC,EAAD,CAAcX,SAAO,GAArB,cACA,yBAAKvB,UAAWrH,EAAQyJ,YACpB,kBAAC,EAAD,CACI5D,cAAeA,EACfhL,KAAMA,EACNuE,SAAUA,EACV+I,eAAgBA,O,SC5BvB0B,EAASC,sBAAW,SAAC5K,EAAOyD,GAAS,IACtCoH,EAA6B7K,EAA7B6K,aAAcC,EAAe9K,EAAf8K,WAEdtK,EAAeC,qBAAWZ,GAA1BW,WAHqC,EAIb2E,mBAAS,MAJI,mBAItC4F,EAJsC,KAI5BC,EAJ4B,KAMvCC,EAAa,SAAA3G,GAC4B0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAG9B,OACI,oCACK1K,GACGsK,EAAW3I,KAAI,SAAA3F,GACX,OACI,kBAACgN,EAAA,EAAD,CACIjN,IAAKC,EAAEuH,GACPA,GAAIvH,EAAEuH,GACNoH,QAAS,kBAAMN,EAAarO,IAC5B4O,QAASH,GAERzO,EAAE8M,a,SChBzB1H,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCqK,OAAQ,CACJ,UAAW,CACP1B,gBAAiB,gBAG5Bb,eAAgB,CACfjD,QAAS,QACH+C,SAAU,IACVzC,WAAY,IACZxE,SAAU,SAEd2J,cAAe,CACXC,UAAW,OACX5B,gBAAiB,cACjBd,QAAS,GAEb2C,KAAM,CACFnP,MAAO2E,EAAMQ,QAAQE,QAAQ+J,KAC7B9B,gBAAiB3I,EAAMQ,QAAQE,QAAQ+E,aACvCoC,QAAS7H,EAAMwJ,QAAQ,IACvBzF,OAAQ/D,EAAMwJ,QAAQ,IACtB7I,SAAU,aAIL+J,GAAc,SAAA1L,GAAU,IAE7B2L,EAKA3L,EALA2L,QACAC,EAIA5L,EAJA4L,mBACAf,EAGA7K,EAHA6K,aACAgB,EAEA7L,EAFA6L,QACA5C,EACAjJ,EADAiJ,eAEItI,EAAuBF,qBAAWX,GAAlCa,mBACAH,EAAeC,qBAAWZ,GAA1BW,WATwB,EAUA2E,mBAAS,MAVT,mBAUf6F,GAVe,WAW1BlK,EAAUc,KAWVkK,EAAe,CACjB,CACIC,SAAU,SACVC,OAAQ,CACJ,CACIjI,GAAI,YACJuF,KAAM,YACNzK,KAAM,SACNoN,WAAY,UAEhB,CACIlI,GAAI,UACJuF,KAAM,UACNzK,KAAM,SACNoN,WAAY,UAEhB,CACIlI,GAAI,QACJuF,KAAM,QACNzK,KAAM,SACNoN,WAAY,UAEhB,CACIlI,GAAI,OACJuF,KAAM,OACNzK,KAAM,SACNoN,WAAY,YAIxB,CACIF,SAAU,aACVC,OAAQ,CACJ,CACIjI,GAAI,WACJuF,KAAM,WACNzK,KAAM,WACNoN,WAAY,YAEhB,CACIlI,GAAI,aACJuF,KAAM,aACNzK,KAAM,WACNoN,WAAY,cAIxB,CACIF,SAAU,aACVC,OAAQ,CACJ,CACIjI,GAAI,WACJuF,KAAK,OAAD,OAASuC,EAAT,iBACJhN,KAAM,OACNoN,WAAY,aACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,UACJuF,KAAK,UAAD,OAAYuC,EAAZ,iBACJhN,KAAM,OACNoN,WAAY,aACZtJ,KAAM,YACNuJ,EAAGL,GAEP,CACI9H,GAAI,mBACJuF,KAAK,OAAD,OAASuC,EAAT,mBACJhN,KAAM,OACNoN,WAAY,oBACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,kBACJuF,KAAK,UAAD,OAAYuC,EAAZ,mBACJhN,KAAM,OACNoN,WAAY,oBACZtJ,KAAM,YACNuJ,EAAGL,KAIf,CACIE,SAAU,MACVC,OAAQ,CACJ,CACIjI,GAAI,WACJuF,KAAK,OAAD,OAASuC,EAAT,eACJhN,KAAM,MACNoN,WAAY,MACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,UACJuF,KAAK,UAAD,OAAYuC,EAAZ,eACJhN,KAAM,MACNoN,WAAY,MACZtJ,KAAM,YACNuJ,EAAGL,MAsBbM,EAAgB,WAClB,IAAIpN,EAAW,GACXqN,EAAgB,GACpBT,EAAQzP,SAAQ,SAACM,EAAGJ,GACD,WAAXI,EAAEqC,MAAgC,aAAXrC,EAAEqC,KACzBuN,EAzImB,SAAAC,GAC3B,IAAMC,EAAWtQ,OAAOC,KAAKuE,GAAY5C,QACrC,SAAAzB,GAAC,OAAIqE,EAAWrE,GAAGkQ,EAAUJ,cAAgBI,EAAU/C,QAI3D,OADA0B,EAAY,MACLsB,EAmIiBC,CAAuB/P,GACrB,SAAXA,EAAEqC,MAA8B,QAAXrC,EAAEqC,OAC9BuN,EAvBe,SAAAC,GACvB,IAAMH,EAAIG,EAAUH,EACdI,EAAWtQ,OAAOC,KAAKuE,GACxBmC,MAAK,SAAC7G,EAAGuG,GAAJ,MACiB,eAAnBgK,EAAU1J,KACJnC,EAAW6B,GAAGgK,EAAUJ,YACxBzL,EAAW1E,GAAGuQ,EAAUJ,YACxBzL,EAAW1E,GAAGuQ,EAAUJ,YACxBzL,EAAW6B,GAAGgK,EAAUJ,eAEjCO,MAAM,EAAGN,GAGd,OADAlB,EAAY,MACLsB,EAUiBG,CAAmBjQ,IAGvCuC,EACIA,EAASjC,OAAS,EACZsP,EACAA,EAAcxO,QAAO,SAAAzB,GAAC,OAAI4C,EAASjB,SAAS3B,SAG1DwE,GAAmB,SAAA+L,GAAS,sBACrBA,EADqB,CAExB3N,SAAUA,EACVuE,YAAaoJ,EAAUC,IAAI/O,QAAO,SAAAzB,GAAC,OAAK4C,EAASjB,SAAS3B,YAclE,OAVAoG,qBAAU,WACNoJ,EAAQ7O,OAAS,EACXqP,IACAxL,GAAmB,SAAA+L,GAAS,sBACrBA,EADqB,CAExB3N,SAAU,GACVuE,YAAaoJ,EAAUC,WAElC,CAAChB,IAGA,oCACKG,EAAa3J,KAAI,SAAAyK,GAAC,OACf,kBAACzD,EAAA,EAAD,CAAa5M,IAAKqQ,EAAEb,UAChB,kBAAC3C,EAAA,EAAD,KAAawD,EAAEb,UACf,kBAAC1C,EAAA,EAAD,CACIC,KAAMsD,EAAEb,SACR1H,SAAU4E,EACVd,UAAWrH,EAAQgI,gBAEnB,kBAAC6B,EAAD,CACIE,aAAcA,EACdC,WAAY8B,EAAEZ,cAK9B,kBAAC9D,EAAA,EAAD,CAAK2E,UAAU,KAAK1E,UAAWrH,EAAQwK,eAClCK,EAAQ7O,OAAS,GACd6O,EAAQxJ,KAAI,SAAAyK,GACR,OACI,wBAAIrQ,IAAKqQ,EAAE7I,IACP,kBAAC+I,EAAA,EAAD,CACIC,KAAK,QACL5E,UAAWrH,EAAQ0K,KACnBjI,MAAOqJ,EAAEtD,KACT0D,SAAU,kBAAMpB,EAAmBgB,a,4DClOjEhL,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCiM,eAAgB,CACZpH,QAAS,SAEbqH,YAAa,CACTrH,QAAS,OACTsH,aAAc,SACdC,WAAYpM,EAAMwJ,QAAQ,IAE9B6C,kBAAmB,CACfxE,QAAS,EACTxM,MAAO,UACP,UAAW,CACPsN,gBAAiB,gBAGzB2D,cAAe,CACX3L,SAAU,QACVwE,WAAY,KAEhBoH,iBAAkB,CACd5L,SAAU,QACVtF,MAAO,OACP8J,WAAY,IACZhF,QAAS,QAIJqM,GAAiB,SAAAxN,GAAU,IAC5ByN,EAAoCzN,EAApCyN,aAAcC,EAAsB1N,EAAtB0N,kBACdhN,EAAoBD,qBAAWX,GAA/BY,gBACFI,EAAUc,KACFC,cAEd,OACI,oCACI,yBAAKsG,UAAWrH,EAAQoM,aACpB,kBAACS,GAAA,EAAD,CAASC,MAAM,gBACX,kBAACC,GAAA,EAAD,CACI1F,UAAWrH,EAAQuM,kBACnBlC,QAASuC,GAET,kBAAC,KAAD,QAGR,kBAAC9J,EAAA,EAAD,CAAYiC,QAAQ,UAApB,iBAEHnF,EAAgB3B,UACb2B,EAAgB3B,SAAS4D,OAAOR,KAAI,SAAC1F,EAAOL,GACxC,OACI,kBAAC0R,GAAA,EAAD,CACIvR,IAAKH,EACLkN,KAAM7M,EACNsR,QAASrN,EAAgB3B,SAASjB,SAASrB,GAC3C4H,SAAUoJ,EACVO,QACI,kBAACC,GAAA,EAAD,CACI3E,KAAM7M,EACN0L,UAAWrH,EAAQwM,gBAG3B/J,MAAO9G,EACP0L,UAAWrH,EAAQmM,eACnBnM,QAAS,CAAEyC,MAAOzC,EAAQwM,oBAI1C,kBAACnD,EAAA,EAAD,MACA,6BACCzJ,EAAgB4C,aACb5C,EAAgB4C,YAAYX,OAAOR,KAAI,SAAC1F,EAAOL,GAC3C,OACI,kBAAC0R,GAAA,EAAD,CACIvR,IAAKH,EACLkN,KAAM7M,EACNsR,QAASrN,EAAgB3B,SAASjB,SAASrB,GAC3C4H,SAAUoJ,EACVO,QACI,kBAACC,GAAA,EAAD,CACI3E,KAAM7M,EACN0L,UAAWrH,EAAQyM,mBAG3BhK,MAAO9G,EACP0L,UAAWrH,EAAQmM,eACnBnM,QAAS,CAAEyC,MAAOzC,EAAQyM,yB,UChGhD3L,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnC8H,eAAgB,CACZF,SAAU,IACVzC,WAAY,IACZxE,SAAU,QACVtF,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9BwM,MAAO,CACH7R,MAAO2E,EAAMQ,QAAQC,KAAKC,aAIrByM,GAAe,SAAAnO,GAAU,IAC1B6L,EAAwB7L,EAAxB6L,QAASuC,EAAepO,EAAfoO,WACXtN,EAAUc,KAEhB,OACI,kBAACyM,GAAA,EAAD,CACItK,GAAG,WACHgJ,KAAK,QACLlO,KAAK,SACL0E,MAAM,kBACN+K,WAAY,CACRC,WAAY,CACRpK,IAAK,EACLC,IAAK,GACL+D,UAAWrH,EAAQoN,QAG3BM,aAAc3C,EACdxH,SAAU,SAAAC,GAAC,OAAI8J,EAAW9J,EAAEmK,OAAOzK,QACnCmE,UAAWrH,EAAQgI,kBCtBzBlH,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCkM,YAAa,CACTrH,QAAS,OACTiB,WAAY,SACZ8C,aAAc5I,EAAMwJ,QAAQ,IAEhCkE,YAAa,CACT9H,eAAgB,aAChBvK,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9BiN,eAAgB,CACZC,UAAW,OAEfrE,WAAY,CACR7E,YAAa1E,EAAMwJ,QAAQ,GAC3BZ,aAAc5I,EAAMwJ,QAAQ,QAmFrBqE,GA/ES,SAAA7O,GAAU,IACtBiJ,EAAmBjJ,EAAnBiJ,eADqB,EAEmBxI,qBAC5CX,GADIY,EAFqB,EAErBA,gBAAiBC,EAFI,EAEJA,mBAGnBG,EAAUc,KALa,GAMfC,cAEgBsD,mBAAS,KARV,mBAQtBwG,EARsB,KAQbmD,EARa,OASC3J,mBAAS,IATV,mBAStB0G,EATsB,KASbuC,EATa,KAmD7B,OACI,oCACI,kBAACW,EAAA,EAAD,KACI,kBAAC,EAAD,CAAcrF,SAAO,GAArB,WACA,yBAAKvB,UAAWrH,EAAQyJ,YACpB,kBAAC,GAAD,CAAcsB,QAASA,EAASuC,WAAYA,IAC5C,kBAAC,GAAD,CACIvC,QAASA,EACTuC,WAAYA,EACZzC,QAASA,EACTmD,WAAYA,EACZlD,mBAzBO,SAAAoD,GACvB,IAAMC,EAAgBtD,EAAQ/N,QAAO,SAAAgP,GAAC,OAAIA,EAAE7I,KAAOiL,EAAcjL,MACjE+K,EAAWG,IAwBKpE,aAhCC,SAAAwB,GACbV,EAAQ7O,OAAS,EACjBgS,GAAW,SAAApC,GAAS,4BAAQA,GAAR,CAAmBL,OACpCyC,EAAW,CAACzC,KA8BHpD,eAAgBA,KAGxB,kBAAC,EAAD,CAAcS,SAAO,GAArB,cACA,yBAAKvB,UAAWrH,EAAQyJ,YACpB,kBAAC,GAAD,CACIkD,aA3DC,SAAAnJ,GACjB,IAAM7H,EAAQ6H,EAAEmK,OAAOnF,KAEnB5I,EAAgB3B,SAASjB,SAASrB,GAClCkE,EAAmB,eACZD,EADW,CAEd3B,SAAU2B,EAAgB3B,SAASnB,QAAO,SAAApB,GAAC,OAAIA,IAAMC,KACrD6G,YAAY,GAAD,mBAAM5C,EAAgB4C,aAAtB,CAAmC7G,OAGlDkE,EAAmB,eACZD,EADW,CAEd3B,SAAS,GAAD,mBAAM2B,EAAgB3B,UAAtB,CAAgCtC,IACxC6G,YAAa5C,EAAgB4C,YAAY1F,QACrC,SAAApB,GAAC,OAAIA,IAAMC,SA8CPiR,kBA7BM,WACtBoB,EAAW,IACXnO,GAAmB,SAAA+L,GAAS,sBACrBA,EADqB,CAExB3N,SAAU,GACVuE,YAAaoJ,EAAUC,gB,0CCzE7B/K,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCsJ,WAAY,CACRjO,MAAO2E,EAAMQ,QAAQC,KAAKyN,UAC1B,UAAW,CACPvF,gBAAiB,oBAKhBwF,GAAc,WACvB,IAAMrO,EAAUc,KAEhB,OACI,oCACI,kBAAC4H,EAAA,EAAD,CAAUqD,UAAU,IAAI/C,KAAK,4BACzB,kBAAC6D,GAAA,EAAD,CAASC,MAAM,cACX,kBAACC,GAAA,EAAD,CAAY1F,UAAWrH,EAAQwJ,YAC3B,kBAAC,KAAD,QAGR,kBAAC1G,EAAA,EAAD,CAAYiC,QAAQ,UAApB,eAEJ,kBAAC2D,EAAA,EAAD,CAAUqD,UAAU,IAAI/C,KAAK,iCACzB,kBAAC6D,GAAA,EAAD,CAASC,MAAM,mBACX,kBAACC,GAAA,EAAD,CAAY1F,UAAWrH,EAAQwJ,YAC3B,kBAAC,KAAD,QAGR,kBAAC1G,EAAA,EAAD,CAAYiC,QAAQ,UAApB,sB,8BC5BVjE,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCoO,OAAQ,CACJpK,MAJY,IAKZqK,WAAY,GAEhBC,YAAa,CACTtK,MARY,IASZ8B,WAAY,OACZzK,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1BgE,YAAa,QAEjB6J,aAAa,aACT1J,QAAS,OACTiB,WAAY,SACZ+B,QAAS7H,EAAMwJ,QAAQ,EAAG,IACvBxJ,EAAMwO,OAAOC,QAJR,CAKR7I,eAAgB,WAChB+C,gBAAiB3I,EAAMQ,QAAQE,QAAQ+J,WAIlCiE,GAAa,SAAA1P,GAAU,IACxB2P,EAAyC3P,EAAzC2P,WAAYC,EAA6B5P,EAA7B4P,aAAcC,EAAe7P,EAAf6P,WAC5B/O,EAAUc,KACVZ,EAAQa,cAEd,OACI,oCACI,kBAACiO,GAAA,EAAD,CAAQC,MAAI,GACR,kBAACC,GAAA,EAAD,CACInM,QAAQ,YACRoM,OAA4B,QAApBjP,EAAMkP,UAAsB,QAAU,OAC9CC,KAAMR,EACNvE,QAASwE,EACT9O,QAAS,CAAEsP,MAAOtP,EAAQwO,aAC1Be,WAAY,CAAEC,aAAa,IAE3B,kBAACC,GAAA,EAAD,MACA,kBAAC/H,EAAA,EAAD,CAAME,MAAI,EAACtF,MAAO,CAAEwG,aAAc,SAC7B5J,EAAMkK,YAIlB2F,GACG,kBAACC,GAAA,EAAD,CAAQU,QAAM,GACV,kBAACR,GAAA,EAAD,CACI7H,UAAWrH,EAAQsO,OACnBvL,QAAQ,YACR/C,QAAS,CAAEsP,MAAOtP,EAAQwO,aAC1Ba,MAAI,GAEJ,kBAACI,GAAA,EAAD,MACA,yBAAKpI,UAAWrH,EAAQ2P,iBACnBzQ,EAAMkK,c,UC3DtBwG,GAAe/Q,IAAMC,gB,mDCWrB+Q,GAAW,WAAO,IAAD,EACQlQ,qBAAWiQ,IAArCE,EADkB,EAClBA,SAAUC,EADQ,EACRA,YAcZ/P,EAZYC,aAAW,SAAAC,GAAK,MAAK,CACnC8P,SAAU,CACNjK,SAAUkK,OAAOC,WACjBjM,OAAQ,UAEZkM,aAAc,CACV5U,MAAO2E,EAAMQ,QAAQC,KAAKyN,UAC1B,UAAW,CACPvF,gBAAiB,mBAIb/H,GACVZ,EAAQa,cAERqP,EAAYH,OAAOI,SAASrH,KAAKsH,MAAM,KACvCC,EAAO,WAAOH,EAAUA,EAAUpU,OAAS,IAkBjD,OACI,oCACI,kBAAC0M,EAAA,EAAD,CAAU2B,QAlBA,WACdmG,wBAAaC,SAASC,cAAcH,GAAU,qBAAsB,CAChE1H,gBAAiB3I,EAAMQ,QAAQiQ,WAAWC,QAC1CC,eAAgB,EAChBC,MAAO,CACH,CACIC,IACI,yDACJ/S,OAAQ,wBACR2C,KACI,wOASR,kBAACkM,GAAA,EAAD,CAASC,MAAM,sBAAsBkE,UAAU,SAC3C,kBAACjE,GAAA,EAAD,CAAY1F,UAAWrH,EAAQmQ,cAC3B,kBAAC,KAAD,QAGR,kBAACrN,EAAA,EAAD,CAAYiC,QAAQ,UAApB,eAEJ,kBAAC2D,EAAA,EAAD,CAAU2B,QAAS,kBAAM0F,GAAaD,KAClC,kBAACjD,GAAA,EAAD,CAASC,MAAM,0BAA0BkE,UAAU,SAC/C,kBAACjE,GAAA,EAAD,CAAY1F,UAAWrH,EAAQmQ,cAC3B,kBAAC,KAAD,QAGR,kBAACrN,EAAA,EAAD,CAAYiC,QAAQ,UAApB,gB,4DC3CVjE,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnC+Q,KAAM,CACFlM,QAAS,QAEbmM,OAAQ,CACJrI,gBAAiB3I,EAAMQ,QAAQiQ,WAAWQ,KAC1C5V,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9BwQ,YAAa,CACTlN,MAAM,eAAD,OAXO,IAWP,OACLmN,WAZY,IAaZvK,WAAY5G,EAAMoR,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQtR,EAAMoR,YAAYE,OAAOC,QACjC1K,SAAU7G,EAAMoR,YAAYvK,SAAS2K,kBAG7ClI,WAAY,CACRjO,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1B,UAAW,CACPiI,gBAAiB,gBAGzB8I,KAAM,CACF5M,QAAS,YAIJ6M,GAAS,SAAA1S,GAAU,IACpBrE,EAAmCqE,EAAnCrE,KAAMuE,EAA6BF,EAA7BE,SAAU+I,EAAmBjJ,EAAnBiJ,eADG,EAES9D,oBAAS,GAFlB,mBAEpBwK,EAFoB,KAERgD,EAFQ,OAGKxN,mBAAS,MAHd,mBAGpB4F,EAHoB,KAGVC,EAHU,KAKrBlK,EAAUc,KAEVgR,EAAgB,SAAAtO,GACyB0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAGxB0E,EAAe,WACjB+C,GAAehD,IAGnB,OACI,oCACI,kBAACkD,GAAA,EAAD,CAAQ/M,SAAS,WAAWqC,UAAWrH,EAAQkR,QAC3C,kBAACzB,GAAA,EAAD,CAASpI,UAAWrH,EAAQ2O,SACxB,kBAAC5B,GAAA,EAAD,CACI1C,QAASyE,EACTkD,KAAK,QACLC,eAAa,EACb5K,UAAWrH,EAAQwJ,YAEnB,kBAAC,KAAD,CAAUnC,UAAWrH,EAAQwJ,cAEjC,0BAAMlH,MAAO,CAAE+O,WAAY,SACvB,kBAACa,GAAA,EAAD,CAAQ7H,QAASyH,GAAjB,WACA,kBAACK,GAAA,EAAD,CACIlI,SAAUA,EACVoF,KAAM+C,QAAQnI,GACdK,QAASwH,GAET,kBAACO,GAAA,EAAD,CACI/P,MAAO,CACHyC,QAAS,OACTc,cAAe,SACfC,eAAgB,WAGpB,kBAAC,GAAD,MACA,kBAAC,GAAD,WAMpB,kBAAC,GAAD,CACI+I,WAAYA,EACZC,aAAcA,EACdC,YAAU,GAEV,6BACI,kBAAC,EAAD,CACIlJ,cAAc,SACdhL,KAAMA,EACNuE,SAAUA,EACV+I,eAAgBA,KAGxB,6BACI,kBAAC,GAAD,CAAiBA,eAAgBA,QChHxCmK,GAAa,uCAAG,WAAOzX,EAAMC,EAAW0C,GAAxB,qBAAAxC,EAAA,6DACjB6C,EAA2BL,EAA3BK,OAAQO,EAAmBZ,EAAnBY,OAAQG,EAAWf,EAAXe,OACpBgU,EAAU,GACdrX,OAAOC,KAAKL,GAAWM,SAAQ,SAACO,EAAOL,GAAO,IAAD,EACrCkX,GAAS,GACT7W,MAAOA,EACP8C,OAAQ3D,EAAUa,GAAO8C,QAFhB,cAGRF,EAAON,SAAW,IAHV,cAIRJ,EAAOI,SAAW,IAJV,cAKRJ,EAAOK,KAAO,IALN,cAMRE,EAAOH,SAAW,IANV,cAORG,EAAOF,KAAO,IAPN,GAUIrD,EAAKiC,QAAO,SAAApB,GAAC,OAAIA,EAAEC,QAAUA,KACrCP,SAAQ,SAACM,EAAGJ,GACjBkX,EAAUjU,EAAON,UAAUwU,KAAK,CAC5B/W,EAAE6C,EAAON,UACTvC,EAAE6C,EAAON,YAEbuU,EAAU3U,EAAOI,UAAUwU,KAAK,CAC5B/W,EAAE6C,EAAON,UACTvC,EAAEmC,EAAOI,YAEbuU,EAAUpU,EAAOH,UAAUwU,KAAK,CAC5B/W,EAAE6C,EAAON,UACTvC,EAAE0C,EAAOH,YAEbuU,EAAU3U,EAAOK,MAAMuU,KAAK,CAAC/W,EAAE6C,EAAON,UAAWvC,EAAEmC,EAAOK,QAC1DsU,EAAUpU,EAAOF,MAAMuU,KAAK,CAAC/W,EAAE6C,EAAON,UAAWvC,EAAE0C,EAAOF,WAE9DqU,EAAQE,KAAKD,MA/BQ,kBAkClBD,GAlCkB,2CAAH,0DCAb1O,GAAU,CACnBE,aAAkC,GAApBkM,OAAOC,WACrBlM,cAAoC,GAArBiM,OAAOyC,YACtBzO,OAAQ,CACJuB,IAAK,GACLmN,MAAO,GACPC,OAAQ,GACR1R,KAAM,KAID4C,GAAS,CAClBI,MAAOL,GAAQE,aAAeF,GAAQI,OAAO/C,KAAO2C,GAAQI,OAAO0O,MACnExO,OAAQN,GAAQG,cAAgBH,GAAQI,OAAOuB,IAAM3B,GAAQI,OAAO2O,QCqFzDC,GA7EM,SAAA3T,GAAU,IACnB4Q,EAA0B5Q,EAA1B4Q,SAAUC,EAAgB7Q,EAAhB6Q,YACV9L,EAAWJ,GAAXI,OACAC,EAAUJ,GAAVI,MAEAE,EAAezE,qBAAWf,GAA1BwF,WALkB,EAMFC,mBAAS,MANP,mBAMnBxJ,EANmB,KAMbiY,EANa,OAOMzO,mBAAS,CACrCxG,OAAQL,EAAYK,OACpBO,OAAQZ,EAAYY,OACpBC,OAAQb,EAAYa,OACpBC,OAAQd,EAAYc,SAXE,mBAOnBc,EAPmB,KAOT2T,EAPS,OAaoB1O,mBAAS,CACnDpG,SAAU,GACVuE,YAAatH,OAAOC,KAAKL,GACzB+Q,IAAK3Q,OAAOC,KAAKL,KAhBK,mBAanB8E,EAbmB,KAaFC,EAbE,KA4BpBG,EARYC,aAAW,SAAAC,GAAK,MAAK,CACnC8S,OAAQ,CACJ9O,MAAOA,EACPmN,WAAYpN,EAAO/C,KACnB6D,QAAS,OACTe,eAAgB,iBAGRhF,GAsBhB,OARAW,qBAAU,WACF2C,EAAWpI,OAAS,GACpBsW,GAAclO,EAAYtJ,EAAW0C,GAAayV,MAAK,SAAAC,GAAG,OACtDJ,EAAQI,QAGjB,CAAC9O,IAGA,kBAACpF,EAAiBmU,SAAlB,CACIjQ,MAAO,CAAEtD,kBAAiBC,uBAE1B,kBAAC,GAAD,CACIhF,KAAMA,EACNuE,SAAUA,EACV+I,eA3BW,SAAA3E,GACnB,IAAM4P,EAAQ5P,EAAEmK,OAAOnF,KAEvBuK,EAAY,eACL3T,EADI,eAENgU,EAFM,eAGAhU,EAASgU,GAHT,CAIHnV,SAAUuF,EAAEmK,OAAOzK,YAqBnBmE,UAAWrH,EAAQgT,OACnBlD,SAAUA,EACVC,YAAaA,IAEjB,yBAAKxI,UAAS,oBAAetD,EAAO/C,KAAtB,aAA+B+C,EAAOuB,IAAtC,MACT3K,GACG,kBAAC,EAAD,CACI2D,iBAAkBA,EAClBY,SAAUA,EACVvE,KAAMA,EACNgJ,QAASA,GACTC,OAAQA,QCxF1BpH,GAAO,CACT2W,cAAepS,IAAc,YAC7BzE,WAAYyE,IAAa,aAGvBqS,GAEM,IAFNA,GAGM,CACJ9N,IAAK,GACLmN,MAAO,IACPC,OAAQ,IACR1R,KAAM,KCLDqS,IDDFtD,OAAOC,WAWYoD,GAAkBpS,KAAOoS,GAAkBX,MAE7CW,GAAkB9N,IAAM8N,GAAkBV,OCZ7C,SAAA1T,GAAU,IAE3BsU,EAMAtU,EANAsU,MACAC,EAKAvU,EALAuU,QACAC,EAIAxU,EAJAwU,YACAC,EAGAzU,EAHAyU,eACNnW,EAEM0B,EAFN1B,YACA6B,EACMH,EADNG,OAEOE,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OACL4E,EAAezE,qBAAWf,GAA1BwF,WAELwP,EAAiBpW,EAAYY,OAAOH,SAkFvC,OAhFAwD,qBAAU,WACN,GAAIgS,GAAWE,EAAgB,CAC3BF,EAAQrR,GAAG,aAIX,WACI,IAAIyR,EAAKtU,EAAOuU,OAAO7S,IAAS8S,MAAM,IAChCC,EAAa/S,KAAY,SAAAvF,GAAC,OAAIA,EAAEyB,iBAAe+D,KAErDhG,OAAOC,KAAKwY,GACP9R,OACA/E,QAAO,SAAAzB,GAAC,OAAmC,IAA/BsY,EAAetY,GAAG4C,YAC9B7C,SAAQ,SAAAO,GACL,IAAMsY,EAAgB7P,EAAWtH,QAC7B,SAAApB,GAAC,OAAIA,EAAEC,QAAUA,KAEfuY,EAAYP,EAAehY,GAAOoG,WAClCzG,EAAI0Y,EAAWC,EAAeJ,EAAI,GAEpCM,EAAsBF,EAAc3Y,GAClC2Y,EAAc3Y,GAAGsY,GACjBK,EAAcA,EAAcjY,OAAS,GACjC4X,GAENQ,EAAsBH,EAAc3Y,GAClC2Y,EAAc3Y,GAAG6B,cACjB8W,EAAcA,EAAcjY,OAAS,GAChCmB,cACPkX,EAAyBJ,EAAc3Y,GACrCoB,GAAK2W,cAAcY,EAAc3Y,GAAGoB,MACpCA,GAAK2W,cACDY,EAAcA,EAAcjY,OAAS,GAAGU,MAE9C4X,EAA0BL,EAAc3Y,GACtC2Y,EAAc3Y,GAAGY,MACjB+X,EAAcA,EAAcjY,OAAS,GAAGE,MAM9CuX,EAAQrR,GAAG,SAJU,WACjBmS,GAAUA,KAKTA,IACDf,EACKgB,OADL,kBACuBN,IAClBpS,KAAK,KAAMtC,EAAO2U,IAClBrS,KAAK,KAAMvC,EAAO6U,IAEvBZ,EACKgB,OADL,mBACwBN,IACnBvT,KAFL,UAIYgT,EAAehY,GAAO+G,aAJlC,mBAKmB0R,EALnB,aAK2CC,EAC9B/D,MAAM,KACN5E,MAAM,EAAG,GACT9J,KAAK,KARlB,MAUKE,KAAK,OAAQ6R,EAAehY,GAAOJ,OAExCiY,EACKgB,OADL,qBAC0BN,IACrBvT,MAAK,SAAAjF,GAAC,MACgB,qBAAnBkY,EAAA,UACSO,EAAoBjS,QACnB,GAFV,aAGYoS,EAAwBnS,iBAHpC,UAIL,qBAAnByR,EAAA,UACGO,EAAoBhS,iBADvB,iBACgDmS,EAAwBnS,iBADxE,oBAEGmS,EAAwBnS,iBAF3B,YAIqBL,KAAK,OAAQ6R,EAAehY,GAAOJ,cArExD,IAAIgZ,GAAS,KA0ElB,CAACb,IAEG,OCzFEe,GAAO,SAAAvV,GAAU,IAClBsU,EAAgEtU,EAAhEsU,MAAOC,EAAyDvU,EAAzDuU,QAASE,EAAgDzU,EAAhDyU,eAAgB7P,EAAgC5E,EAAhC4E,OAAQtG,EAAwB0B,EAAxB1B,YAAa6B,EAAWH,EAAXG,OACxDE,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OACVoU,EAAiBpW,EAAYY,OAAOH,SAG/BmG,EAAezE,qBAAWf,GAA1BwF,WACA1E,EAAeC,qBAAWZ,GAA1BW,WAGFQ,EAAQa,cACR2T,EAAWlQ,YAActE,EAAMuE,YAAYI,GAAG,OAC9C8P,EAAUnQ,YAActE,EAAMuE,YAAYI,GAAG,OAZ1B,EAcaR,mBAAS,IAdtB,mBAclBqP,EAdkB,KAcLkB,EAdK,KAgBnBC,EAAe,SAAAC,GAIjB,OAHe5Z,OAAOC,KAAK2Z,GACtBjT,OACA/E,QAAO,SAAAzB,GAAC,OAAiC,IAA7ByZ,EAAazZ,GAAG4C,aA+FrC,OA3FAwD,qBAAU,WACN,GAAIkS,GAAkBvP,EAAWpI,OAAS,EAAG,CAEzC,IAAM+Y,EAAgB9T,MAEjBuG,GAAE,SAAA9L,GAAC,OAAI6D,EAAO7D,EAAEyB,kBAChBsK,GAAE,SAAA/L,GAAC,OAAI8D,EAAO9D,EAAEkY,OAExBoB,EAAc,GAEMH,EAAalB,GACrBvY,SAAQ,SAACO,EAAOL,GACrB,IAAM2Y,EAAgB7P,EAAWtH,QAAO,SAAApB,GAAC,OAAIA,EAAEC,QAAUA,KAGnDsZ,EACFhB,EAAcA,EAAcjY,OAAS,GAAGmB,cACtC+X,EACFjB,EAAcA,EAAcjY,OAAS,GAAG4X,GAE5CoB,EAAYrZ,GAAS,CACjBwZ,KAAMJ,EAAcd,GACpBmB,WAAY7V,EAAO0V,GAAqB,EACxCI,WAAY7V,EAAO0V,OAG3BN,EAAeI,MAEpB,CAAC5Q,EAAYuP,EAAgBnW,EAAaoW,EAAgBvU,EAAQa,IAErEuB,qBAAU,WACRkS,GACuBkB,EAAalB,GAErBvY,SAAQ,SAACO,EAAOL,GACrB,IAAM4Y,EAAYxU,EAAW/D,GAAOoG,WAEhCuT,EAAS,EACTC,EAAS,EAETja,EAAI,KACAqZ,GACAW,EAAS,IACTC,EAAS,KACFb,IACPY,EAAS,IACTC,EAAS,MAIjB/B,EACKvR,OAAO,UACPH,KAAK,KAFV,iBAE0BoS,IACrBpS,KAAK,IAAK,GACVA,KAAK,OAAQ6R,EAAehY,GAAOJ,OACnCuG,KAAK,SAAU5B,EAAMQ,QAAQC,KAAKC,UAEnC8T,EAAWpZ,EAAI,GAAKA,EAAI,MACxBkY,EACKvR,OAAO,QACPH,KAAK,KAFV,kBAE2BoS,IACtBpS,KAAK,IAAK,GAAKwT,GACfxT,KAAK,KAAK,SAAApG,GAAC,OACRgZ,EAAW,GAAS,GAAJpZ,EAASia,EAAS,GAAS,GAAJja,KAE1CgH,MAAM,aAAa,SAAA5G,GAAC,OAAKiZ,EAAU,QAAU,WAC7CrS,MACG,cACA,+CAERkR,EACKvR,OAAO,QACPH,KAAK,KAFV,oBAE6BoS,IACxBpS,KAAK,IAAK,GAAKwT,GACfxT,KAAK,KAAK,SAAApG,GAAC,OACRgZ,EAAW,GAAS,GAAJpZ,EAASia,EAAS,GAAS,GAAJja,KAE1CgH,MAAM,aAAa,SAAA5G,GAAC,OAAKiZ,EAAU,QAAU,WAC7CrS,MACG,cACA,mDAKpB,OAAO,WACHkR,EAAM7R,UAAU,UAAUuF,SAC1BsM,EAAM7R,UAAU,QAAQuF,YAE7B,CAACwM,IAGA,oCACI,kBAAC,GAAD,eACIF,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACb5P,OAAQA,EACpBtG,YAAaA,GACG0B,IAEhBkF,EAAWpI,OAAS,GACRd,OAAOC,KAAKuY,GACP7R,OACAR,KAAI,SAAC1F,EAAOL,GACT,IAAM4Y,EAAYxU,EAAW/D,GAAOoG,WAEpC,OACI,kBAAC,WAAD,CAAUtG,IAAKE,GACX,uBAAGsH,GAAE,wBAAmBiR,IACpB,0BACIzT,KAAK,OACLL,OAAQuT,EAAehY,GAAOJ,MAC9BgF,YAAa,IACbiV,eAAe,QACfC,cAAc,QACd/Z,EAAGgY,EAAY/X,GAAOwZ,OAE1B,0BACIlS,GAAE,qBAAgBiR,GAClB7M,UAAU,aACV/E,MAAO,CACH7B,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,OACV6U,WACI,+CAERlO,EAAGkM,EAAY/X,GAAOyZ,WACtB3N,EAAGiM,EAAY/X,GAAO0Z,YAErB1B,EAAehY,GAAO+G,qBCzJzD5B,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACtC4E,QAAS,CACRC,QAAS,eACTC,SAAU,WACVd,MAAO,OACPe,cAAe,SACfC,SAAU,UAEXpB,OAAQ,CACPI,MAAO,SAAAhF,GAAK,OAAIA,EAAMgF,OACtBC,OAAQ,SAAAjF,GAAK,OAAIA,EAAMiF,SAExB2I,MAAO,CACNrM,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,UAEX4E,KAAM,CACLhF,KAAMP,EAAMQ,QAAQC,KAAKC,SAE1B+U,UAAW,CACVlV,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,SAEX+U,UAAW,CACVnV,KAAMP,EAAMQ,QAAQC,KAAKC,QACzBC,SAAU,aAwMGgV,GApMW,SAAA3W,GAAU,IAC3B2E,EAAiC3E,EAAjC2E,QAASC,EAAwB5E,EAAxB4E,OAAQtG,EAAgB0B,EAAhB1B,YACduG,EAAwCF,EAAxCE,aAAcC,EAA0BH,EAA1BG,cAAeC,EAAWJ,EAAXI,OAC7BC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OACVC,EAAezE,qBAAWf,GAA1BwF,WAEFwP,EAAiBpW,EAAYY,OAAOH,SANR,EAQNoG,mBAAS,MARH,mBAQ3BhF,EAR2B,KAQnBiF,EARmB,KAS5BtE,EAAUc,GAAU5B,GACpBgB,EAAQa,cAELqF,EAAWrG,iBAAO,MAClBsG,EAAWtG,iBAAO,MAClBmG,EAASnG,iBAAO,MAChBoG,EAAYpG,iBAAO,MASnByT,EANKgB,YAAOrO,EAAUzE,SACnBO,OAAO,KACPH,KAAK,QAAS,SACdQ,MAAM,UAAW,QAcpBmR,EARKe,YAAOrO,EAAUzE,SACnBO,OAAO,QACPH,KAAK,QAAS,WACdA,KAAK,QAASoC,GACdpC,KAAK,SAAUqC,GACfrC,KAAK,UAAW,KAChBM,GAAG,aAAa,kBAAMoR,EAAMlR,MAAM,UAAW,SAgCtD,OA5BHb,qBAAU,WAEH,IAAMlC,EAASuW,cACVvP,OAAOwP,YAAO3R,GAAY,SAAA1I,GAAC,OAAIA,EAAEyB,kBACjCqJ,MAAM,CAAC,EAAGtC,IAEf1E,EAAqC,QAA5BhC,EAAYY,OAAOL,KAC/BiY,cACAzP,OAAO,CAAC,EAAGjD,YAAIc,GAAY,SAAA1I,GAAC,OAAIA,EAAEkY,QAClCpN,MAAM,CAACrC,EAAQ,IACf2R,cACAvP,OAAO,CAAC,EAAGjD,YAAIc,GAAY,SAAA1I,GAAC,OAAIA,EAAEkY,QAClCpN,MAAM,CAACrC,EAAQ,IAElBG,EAAU,CACT/E,SACAC,WAID,IAAMiH,EAAiD,UAAhCjJ,EAAYY,OAAOH,SACvCgY,cAAWvP,MAAMlH,GAAQ0W,MAAM,GAAGC,YAAW,SAAA3U,GAAC,OAAIA,EAAEW,oBACpD8T,cAAWvP,MAAMlH,GACRmH,EAAiByP,cAAa1P,MAAMnH,GAC1CiV,YAAOnO,EAAS3E,SAASM,KAAK2E,GAC9B6N,YAAOpO,EAAS1E,SAASM,KAAKyE,KAC/B,CAACrC,EAAY5G,EAAaoW,EAAgBzP,EAAQD,IAGjD,oCACI,yBACIjB,GAAG,WACHkB,OAAQH,EACRE,MAAOH,EACPpB,IAAKuD,EACLmB,UAAWrH,EAAQ8E,QACnBwC,QAAO,cAASvD,EAAT,YAAyBC,IAEhC,0BACIqD,UAAWrH,EAAQ4V,UACnBxQ,WAAW,OACX9C,MAAO,CACHoT,WACI,+CAERnO,UAAS,oBAAetD,EAAO/C,KAAtB,aACLiD,EAASF,EAAOuB,IAAM,GADjB,MAPb,yFAcA,0BACI6B,UAAWrH,EAAQ4V,UACnBxQ,WAAW,OACX9C,MAAO,CACHoT,WACI,+CAERnO,UAAS,oBAAetD,EAAO/C,KAAtB,aACLiD,EAASF,EAAOuB,IAAM,GADjB,MAPb,uHAcA,0BACI6B,UAAWrH,EAAQ4V,UACnBxQ,WAAW,OACX9C,MAAO,CACHoT,WACI,+CAERnO,UAAS,oBAAetD,EAAO/C,KAAtB,aACLiD,EAASF,EAAOuB,IAAM,IADjB,MAPb,kEAaA,uBACIvC,GAAG,SACHsE,UAAS,oBAAetD,EAAO/C,KAAtB,aAA+B+C,EAAOuB,IAAtC,KACT7C,IAAKwD,GAEL,0BACIkB,UAAWrH,EAAQ8M,MACnBxK,MAAO,CACHoT,WACI,+CAERtQ,WAAW,SACXoC,EAAGtD,EAAQ,EACXuD,EAAiB,IAAbxD,EAAOuB,KARf,gCAYA,0BACI6B,UAAWrH,EAAQ2V,UACnBrT,MAAO,CACHoT,WACI,+CAERtQ,WAAW,SACXoC,EAAGtD,EAAQ,EACXuD,EAAGtD,EAAS,IARhB,mBAYA,0BACIkD,UAAWrH,EAAQ2V,UACnBrT,MAAO,CACHoT,WACI,+CAERtQ,WAAW,SACXmC,UAAS,cACTC,GAAIrD,EAAS,EACbsD,GAAI,IAEHmM,GAEL,uBACIjR,IAAKyD,EACLnD,GAAG,SACHX,MAAO,CACHoT,WACpB,8CACDna,MAAO2E,EAAMQ,QAAQC,KAAKC,WAGb,uBACI+B,IAAK0D,EACLpD,GAAG,SACHsE,UAAS,sBAAiBpD,EAAjB,KACT7B,MAAO,CACHoT,WACpB,8CACDna,MAAO2E,EAAMQ,QAAQC,KAAKC,WAG3BvB,GACA,kBAAC,GAAD,eACAmU,MAAOA,EACPC,QAASA,EACTpU,OAAQA,GACJH,Q,UC1NGmX,GAAevM,sBAAW,SAAC5K,EAAOyD,GAAS,IAC5C2T,EAAoDpX,EAApDoX,cAAeC,EAAqCrX,EAArCqX,qBAAsBpM,EAAejL,EAAfiL,WAO7C,OACI,oCACKmM,EAAcjV,KAAI,SAAAoH,GACf,OACI,kBAACC,EAAA,EAAD,CACIjN,IAAKgN,EAAExF,GACPA,GAAIwF,EAAExF,GACNN,IAAKA,EACL0H,QAAS,kBAbLkB,EAa2B9C,EAZ/C0B,SACAoM,EAAqBhL,GAFD,IAAAA,IAeH9C,EAAED,aClBdgO,GAAc,SAAAtX,GAAU,IACzB6L,EAAkC7L,EAAlC6L,QAASwL,EAAyBrX,EAAzBqX,qBADe,EAEAlS,mBAAS,MAFT,mBAEzB4F,EAFyB,KAEfC,EAFe,KAI1BC,EAAa,SAAA3G,GAC4B0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAGxBkM,EAAgB,CAClB,CACIrT,GAAI,aACJuF,KAAK,OAAD,OAASuC,EAAT,YACJhN,KAAM,QACNoN,WAAY,kBACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,YACJuF,KAAK,UAAD,OAAYuC,EAAZ,YACJhN,KAAM,QACNoN,WAAY,kBACZtJ,KAAM,YACNuJ,EAAGL,GAEP,CACI9H,GAAI,sBACJuF,KAAK,OAAD,OAASuC,EAAT,eACJhN,KAAM,QACNoN,WAAY,yBACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,qBACJuF,KAAK,UAAD,OAAYuC,EAAZ,eACJhN,KAAM,QACNoN,WAAY,yBACZtJ,KAAM,YACNuJ,EAAGL,IAIX,OACI,oCACI,kBAACmH,GAAA,EAAD,CAAQjP,GAAG,YAAYoH,QAASF,GAAhC,gBAGA,kBAACgI,GAAA,EAAD,CACIlI,SAAUA,EACVoF,OAAMpF,GAAWmI,QAAwB,cAAhBnI,EAAShH,IAClCqH,QAASH,GAET,kBAACkM,GAAD,CACIC,cAAeA,EACfC,qBAAsBA,EACtBpM,WAAYA,OCxDnBsM,GAAmB,SAAAvX,GAAU,IAC9B6L,EAAkC7L,EAAlC6L,QAASwL,EAAyBrX,EAAzBqX,qBADoB,EAGLlS,mBAAS,MAHJ,mBAG9B4F,EAH8B,KAGpBC,EAHoB,KAK/BC,EAAa,SAAA3G,GAC4B0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAGxBkM,EAAgB,CAClB,CACIrT,GAAI,WACJuF,KAAK,OAAD,OAASuC,EAAT,iBACJhN,KAAM,OACNoN,WAAY,aACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,UACJuF,KAAK,UAAD,OAAYuC,EAAZ,iBACJhN,KAAM,OACNoN,WAAY,aACZtJ,KAAM,YACNuJ,EAAGL,GAEP,CACI9H,GAAI,mBACJuF,KAAK,OAAD,OAASuC,EAAT,mBACJhN,KAAM,OACNoN,WAAY,oBACZtJ,KAAM,aACNuJ,EAAGL,GAEP,CACI9H,GAAI,kBACJuF,KAAK,UAAD,OAAYuC,EAAZ,mBACJhN,KAAM,OACNoN,WAAY,oBACZtJ,KAAM,YACNuJ,EAAGL,IAIX,OACI,oCACI,kBAACmH,GAAA,EAAD,CAAQjP,GAAG,iBAAiBoH,QAASF,GAArC,qBAGA,kBAACgI,GAAA,EAAD,CACIlI,SAAUA,EACVoF,OACIpF,GAAWmI,QAAwB,mBAAhBnI,EAAShH,IAEhCqH,QAASH,GAET,kBAACkM,GAAD,CACIC,cAAeA,EACfC,qBAAsBA,EACtBpM,WAAYA,OC3DnBuM,GAAmB5M,sBAAW,SAAC5K,EAAOyD,GAAS,IAChD2T,EAAoDpX,EAApDoX,cAAeC,EAAqCrX,EAArCqX,qBAAsBpM,EAAejL,EAAfiL,WAO7C,OACI,oCACKmM,EAAcjV,KAAI,SAAAoH,GACf,OACI,kBAACC,EAAA,EAAD,CACIjN,IAAKgN,EAAExF,GACPA,GAAIwF,EAAExF,GACNN,IAAKA,EACL0H,QAAS,kBAbLkB,EAa2B9C,EAZ/C0B,SACAoM,EAAqBhL,GAFD,IAAAA,IAeH9C,EAAED,aChBdmO,GAAe,SAAAzX,GAAU,IAC1BqX,EAAyBrX,EAAzBqX,qBADyB,EAGDlS,mBAAS,MAHR,mBAG1B4F,EAH0B,KAGhBC,EAHgB,KAK3BC,EAAa,SAAA3G,GAC4B0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAoB9B,OACI,oCACI,kBAAC8H,GAAA,EAAD,CAAQjP,GAAG,aAAaoH,QAASF,GAAjC,iBAGA,kBAACgI,GAAA,EAAD,CACIlI,SAAUA,EACVoF,OAAMpF,GAAWmI,QAAwB,eAAhBnI,EAAShH,IAClCqH,QAASH,GAET,kBAACuM,GAAD,CACIJ,cA5BM,CAClB,CACIrT,GAAI,YACJuF,KAAM,YACNzK,KAAM,SACNoN,WAAY,UAEhB,CACIlI,GAAI,UACJuF,KAAM,UACNzK,KAAM,SACNoN,WAAY,UAEhB,CAAElI,GAAI,QAASuF,KAAM,QAASzK,KAAM,SAAUoN,WAAY,UAC1D,CAAElI,GAAI,OAAQuF,KAAM,OAAQzK,KAAM,SAAUoN,WAAY,WAe5CoL,qBAAsBA,EACtBpM,WAAYA,OClC1BrJ,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnC2H,cAAe,CACX9B,SAAU,IACV+B,SAAU,IACVhC,eAAgB,eAChBiC,QAAS,EACT9D,OAAQ,GAEZ2S,IAAK,CACDvW,QAAS,IAEbwW,SAAU,CACNxW,QAAS,GACT,UAAW,CACPA,QAAS,QAKRyW,GAAc,SAAA5X,GAAU,IACzByU,EAAsCzU,EAAtCyU,eAAgBoD,EAAsB7X,EAAtB6X,kBAGhBrX,EAAeC,qBAAWZ,GAA1BW,WAJwB,EAOA2E,mBAAS,MAPT,mBAOf6F,GAPe,aAQY7F,mBAAS,MARrB,mBAQzB2S,EARyB,KAQTC,EARS,KAW1B/W,EAAQa,cACRf,EAAUc,KACVyD,EAAUC,YAActE,EAAMuE,YAAYC,KAAK,OAE/C6R,EAAuB,SAAAW,GACzBD,EAAkBC,GAClBhN,EAAY,OAuDhB,OATAzI,qBAAU,WACN,GAAIuV,EAAgB,CAChB,IAAMG,EAAeH,EAAe5L,EA5BjB,SAACG,EAAW6L,GACnC,IACI5L,EADEJ,EAAIG,EAAUH,EAGpBI,EAAWtQ,OAAOC,KAAKic,GAClBvV,MAAK,SAAC7G,EAAGuG,GAAJ,MACiB,eAAnBgK,EAAU1J,KACJuV,EAAK7V,GAAGgK,EAAUJ,YAClBiM,EAAKpc,GAAGuQ,EAAUJ,YAClBiM,EAAKpc,GAAGuQ,EAAUJ,YAClBiM,EAAK7V,GAAGgK,EAAUJ,eAE3BO,MAAM,EAAGN,GAEd,IAAI+L,EAAe,GASnB,OARAjc,OAAOC,KAAKic,GAAMhc,SAAQ,SAAAC,GAClBmQ,EAASxO,SAAS3B,GAClB8b,EAAa9b,GAAb,eAAuB+b,EAAK/b,GAA5B,CAAgC4C,UAAU,IAE1CkZ,EAAa9b,GAAb,eAAuB+b,EAAK/b,GAA5B,CAAgC4C,UAAU,OAI3CkZ,EAMGxL,CAAmBqL,EAAgBtX,GA9ClB,SAAC6L,EAAW6L,GACvC,IAAM5L,EAAWtQ,OAAOC,KAAKic,GAAMta,QAC/B,SAAAzB,GAAC,OAAI+b,EAAK/b,GAAGkQ,EAAUJ,cAAgBI,EAAU/C,QAGjD2O,EAAe,GASnB,OARAjc,OAAOC,KAAKic,GAAMhc,SAAQ,SAAAC,GAClBmQ,EAASxO,SAAS3B,GAClB8b,EAAa9b,GAAb,eAAuB+b,EAAK/b,GAA5B,CAAgC4C,UAAU,IAE1CkZ,EAAa9b,GAAb,eAAuB+b,EAAK/b,GAA5B,CAAgC4C,UAAU,OAI3CkZ,EAiCG1L,CAAuBuL,EAAgBtX,GAC7CqX,EAAkBI,MAEvB,CAACH,IAGA,kBAACtP,EAAA,EAAD,CACIC,WAAS,EACTN,UAAWrH,EAAQ6H,cACnBvF,MACIiC,EACM,CAAEsB,cAAe,SAAUG,WAAY,UACvC,CAAEH,cAAe,QAG3B,kBAAC,GAAD,CACIwR,gBAAc,YACdC,gBAAc,OACdjQ,UAAWrH,EAAQ4W,IACnB7L,QAAS,GACT4I,eAAgBA,EAChBoD,kBAAmBA,EACnBR,qBAAsBA,IAE1B,kBAAC,GAAD,CACIc,gBAAc,iBACdC,gBAAc,OACdjQ,UAAWrH,EAAQ4W,IACnB7L,QAAS,GACT4I,eAAgBA,EAChBoD,kBAAmBA,EACnBR,qBAAsBA,IAE1B,kBAAC,GAAD,CACIc,gBAAc,aACdC,gBAAc,OACdjQ,UAAWrH,EAAQ4W,IACnBjD,eAAgBA,EAChBoD,kBAAmBA,EACnBR,qBAAsBA,M,qBC1HhCzV,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnCqX,uBAAwB,CACpBhc,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1ByE,WAAY,KAEhBmS,WAAY,CACRC,UAAW,OACX7S,YAAa1E,EAAMwJ,QAAQ,IAE/BgO,gBAAiB,CACbnc,MAAO,QACP,UAAW,CACPsN,gBAAiB,gBAGzB0D,kBAAmB,CACfhR,MAAO,MACP,UAAW,CACPsN,gBAAiB,gBAGzB8O,mBAAoB,CAChB9W,SAAU,SAEd+W,sBAAuB,CACnBrc,MAAO,OACP8E,QAAS,GACTQ,SAAU,aAILgX,GAAY,SAAA3Y,GAAU,IAE3ByU,EAIAzU,EAJAyU,eACAmE,EAGA5Y,EAHA4Y,qBACAC,EAEA7Y,EAFA6Y,sBACAC,EACA9Y,EADA8Y,wBAGEhY,EAAUc,KACFC,cAEd,OACI,6BACI,kBAAC,EAAD,CACI6H,SAAO,EACP5I,QAAS,CAAE2I,WAAY3I,EAAQuX,yBAFnC,cAMA,kBAACtJ,EAAA,EAAD,CAAW5G,UAAWrH,EAAQwX,YAC1B,kBAACxK,GAAA,EAAD,CACI/J,GAAG,aACHR,MAAM,aACN+F,KAAK,aACL6B,QAAS0N,EACT7K,QACI,kBAACH,GAAA,EAAD,CACI9J,GAAG,eACHuF,KAAK,aACLnB,UAAWrH,EAAQ0X,iBAEnB,kBAAC,KAAD,SAIZ,kBAAC1K,GAAA,EAAD,CACI/J,GAAG,eACHR,MAAM,eACN+F,KAAK,eACL6B,QAAS2N,EACT9K,QACI,kBAACH,GAAA,EAAD,CACI9J,GAAG,iBACHuF,KAAK,eACLnB,UAAWrH,EAAQuM,mBAEnB,kBAAC,KAAD,SAIZ,kBAAClD,EAAA,EAAD,CAAShC,UAAWrH,EAAQ4I,UAC3B+K,EACGzY,OAAOC,KAAKwY,GACP9R,OACA/E,QAAO,SAAAzB,GAAC,OAAmC,IAA/BsY,EAAetY,GAAG4C,YAC9BoD,KAAI,SAAC1F,EAAOL,GACT,OACI,kBAAC0R,GAAA,EAAD,CACIvR,IAAKH,EACL2H,GAAI0Q,EAAehY,GAAOoG,WAC1ByG,KAAM7M,EACNsR,QAAS0G,EAAehY,GAAOsC,SAC/BsF,SAAUuU,EACV9X,QAAS,CACLyC,MAAOzC,EAAQ2X,oBAEnBzK,QACI,kBAACC,GAAA,EAAD,CACI3E,KAAM7M,EACN0L,UACIrH,EAAQ2X,mBAEZrV,MAAO,CACH/G,MACIoY,EAAehY,GAAOJ,SAItCkH,MAAK,UAAK9G,EAAL,aAAegY,EAAehY,GAAO+G,aAArC,UAKrB,8BAEJ,kBAAC2G,EAAA,EAAD,CAAShC,UAAWrH,EAAQ4I,UAC3B+K,EACGzY,OAAOC,KAAKwY,GACP9R,OACA/E,QAAO,SAAAzB,GAAC,OAAmC,IAA/BsY,EAAetY,GAAG4C,YAC9BoD,KAAI,SAAC1F,EAAOL,GACT,OACI,kBAAC0R,GAAA,EAAD,CACIvR,IAAKH,EACL2H,GAAI0Q,EAAehY,GAAOoG,WAC1ByG,KAAM7M,EACNsR,QAAS0G,EAAehY,GAAOsC,SAC/BsF,SAAUuU,EACV9X,QAAS,CACLyC,MAAOzC,EAAQ4X,uBAEnB1K,QACI,kBAACC,GAAA,EAAD,CACI3E,KAAM7M,EACN0L,UACIrH,EAAQ4X,wBAIpBnV,MAAK,UAAK9G,EAAL,aAAegY,EAAehY,GAAO+G,aAArC,UAKrB,iCC5Jd5B,GAAYb,aAAW,SAACC,GAAD,MAAY,CACxC+X,YAAa,CACZnQ,SAAU,KAEXoQ,YAAa,CACZ3c,MAAO2E,EAAMQ,QAAQC,KAAKC,aAItBsH,GAAc,SAAC,GAAqC,IAAnC1K,EAAkC,EAAlCA,YAAa2a,EAAqB,EAArBA,eAC7BnY,EAAUc,KAEb,OACI,kBAACuH,EAAA,EAAD,CAAahB,UAAWrH,EAAQiY,aACrC,kBAAC1P,EAAA,EAAD,CACCtF,GAAG,wBACHmV,WAAW,EACClV,MAAO1F,EAAYY,OAAOH,SACtCsF,SAAU,SAAAC,GAAC,OAAI2U,GAAe,SAAAvM,GAAS,sBACnCA,EADmC,CAEtCxN,OAAO,eACHwN,EAAUxN,OADR,CAELL,KAAyB,UAAnByF,EAAEmK,OAAOzK,MAAoB,MAAQ,SAC3CjF,SAAUuF,EAAEmK,OAAOzK,cAGrBT,MAAM,SACN4E,UAAWrH,EAAQkY,aAEP,kBAACxP,EAAA,EAAD,CAAUzF,GAAG,oBAAoBC,MAAM,oBAAvC,cAGZ,kBAACwF,EAAA,EAAD,CAAUzF,GAAG,sBAAsBC,MAAM,SAAzC,2BAGY,kBAACwF,EAAA,EAAD,CAAUzF,GAAG,oBAAoBC,MAAM,YAAvC,gB,0CCbVpC,GAAYb,aAAW,SAAAC,GAAK,MAAK,CACnC+Q,KAAM,CACFlM,QAAS,QAEbmM,OAAQ,CACJrI,gBAAiB3I,EAAMQ,QAAQiQ,WAAWQ,KAC1C5V,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1BkG,WAAY5G,EAAMoR,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQtR,EAAMoR,YAAYE,OAAO6G,MACjCtR,SAAU7G,EAAMoR,YAAYvK,SAASuR,iBAG7ClH,YAAa,CACTlN,MAAM,eAAD,OAfO,IAeP,OACLmN,WAhBY,IAiBZvK,WAAY5G,EAAMoR,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQtR,EAAMoR,YAAYE,OAAOC,QACjC1K,SAAU7G,EAAMoR,YAAYvK,SAAS2K,kBAG7ClI,WAAY,CACRjO,MAAO2E,EAAMQ,QAAQC,KAAKC,QAC1B,UAAW,CACPiI,gBAAiB,gBAGzB8I,KAAM,CACF5M,QAAS,QAEbuJ,OAAQ,CACJpK,MAhCY,IAiCZqK,WAAY,EACZ1F,gBAAiB3I,EAAMQ,QAAQiQ,WAAWC,QAC1CrV,MAAO2E,EAAMQ,QAAQC,KAAKC,SAE9B4N,YAAa,CACTtK,MAtCY,IAuCZ2E,gBAAiB3I,EAAMQ,QAAQiQ,WAAWC,SAE9CnC,aAAa,aACT1J,QAAS,OACTiB,WAAY,SACZ+B,QAAS7H,EAAMwJ,QAAQ,EAAG,IACvBxJ,EAAMwO,OAAOC,QAJR,CAKR7I,eAAgB,WAChB+C,gBAAiB3I,EAAMQ,QAAQiQ,WAAWC,UAE9CgG,IAAK,CACDvW,QAAS,IAEbwW,SAAU,CACNxW,QAAS,GACT,UAAW,CACPA,QAAS,IAGpBkY,cAAe,CACdrU,MAAO,IACPa,QAAS,OACTsH,aAAc,WACdvG,eAAgB,qBAIL8L,GAAS,SAAA1S,GAAU,IAAD,EACHmF,oBAAS,GADN,mBACpBgL,EADoB,KACdmJ,EADc,OAEKnU,mBAAS,MAFd,mBAEpB4F,EAFoB,KAEVC,EAFU,KAIrBhK,EAAQa,cACRf,EAAUc,KACVyD,EAAUC,YAActE,EAAMuE,YAAYC,KAAK,OAU/CoN,EAAgB,SAAAtO,GACyB0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBASxBqO,EAAmB,SAAAjV,GACsB0G,EAA1CD,EAAsD,KAA/BzG,EAAE4G,gBAG9B,OACI,yBAAK/C,UAAWrH,EAAQiR,MACpB,kBAACc,GAAA,EAAD,CACI/M,SAAS,WACTqC,UAAW8B,YAAKnJ,EAAQkR,OAAT,eACVlR,EAAQoR,YAAc/B,KAG3B,kBAACI,GAAA,EAAD,KACI,kBAAC1C,GAAA,EAAD,CACI1C,QAhCK,WACrBmO,GAAQ,IAgCQnR,UAAW8B,YACPnJ,EAAQwJ,WACR6F,GAAQrP,EAAQ2R,MAEpBM,eAAa,GAEb,kBAAC,KAAD,CAAU5K,UAAWrH,EAAQwJ,cAEhCjF,EACG,oCACI,kBAACsI,GAAA,EAAD,CAASC,MAAM,iBACX,kBAACC,GAAA,EAAD,CACI9J,GAAG,iBACHoH,QAASoO,EACTpR,UAAWrH,EAAQwJ,YAEnB,kBAAC,KAAD,QAGR,kBAAC2I,GAAA,EAAD,CACIlI,SAAUA,EACVoF,OACIpF,GACMmI,QACoB,mBAAhBnI,EAAShH,IAIvBqH,QAASmO,EACTnW,MAAO,CAAEoW,UAAW,WAE5C,kBAAC,GAAD,CACClb,YAAa0B,EAAM1B,YACnB2a,eAAgBjZ,EAAMiZ,iBAEC,kBAAC,GAAD,eACIM,iBAAkBA,GACdvZ,MAKhB,0BACjBmI,UAAWrH,EAAQuY,eAEnB,kBAAC,GAAD,CACC/a,YAAa0B,EAAM1B,YACnB2a,eAAgBjZ,EAAMiZ,iBAEvB,kBAAC,GAAgBjZ,IAIJ,0BAAMoD,MAAO,CAAE+O,WAAY,SACvB,kBAACa,GAAA,EAAD,CAAQjP,GAAG,iBAAiBoH,QAASyH,GAArC,WAGA,kBAACK,GAAA,EAAD,CACIlI,SAAUA,EACVoF,OACIpF,GACMmI,QAAwB,mBAAhBnI,EAAShH,IAG3BqH,QAASwH,GAET,kBAACO,GAAA,EAAD,CACI/P,MAAO,CACHyC,QAAS,OACTc,cAAe,SACfC,eAAgB,WAGpB,kBAAC,GAAD,MACA,kBAAC,GAAD,WAMpB,kBAAC6S,GAAA,EAAD,CAAmBC,YArGH,SAAApV,GAChBA,EAAEgE,EAvFM,KAuFahE,EAAEiE,EAAI,IAAM4H,GACjCmJ,GAAQ,KAoGJ,kBAACtJ,GAAA,EAAD,CACI7H,UAAWrH,EAAQsO,OACnBvL,QAAQ,aACRoM,OAAO,OACPE,KAAMA,EACNrP,QAAS,CACLsP,MAAOtP,EAAQwO,cAGnB,yBAAKnH,UAAWrH,EAAQyO,cACpB,kBAAC1B,GAAA,EAAD,CACIxR,MAAM,UACNyW,KAAK,MACL3H,QA3HE,WACtBmO,GAAQ,IA2HYlW,MAAO,CACH/G,MAAO2E,EAAMQ,QAAQE,QAAQ+E,eAGjC,kBAAC,KAAD,QAGR,kBAAC0D,EAAA,EAAD,MACA,kBAAC,GAAcnK,OC3OtB2Z,GAAe,CACxBpb,UAAW,OACXC,YAAa,KACbC,UAAU,EACVC,WAAW,EACXC,OAAQ,CAEJE,KAAM,SACNC,OAAQ,SACRC,SAAU,gBACVC,KAAM,KACNC,QAAS,CAAC,kBAEdC,OAAQ,CAEJL,KAAM,SACNC,OAAQ,SACRC,SAAU,mBACVC,KAAM,oBACNC,QAAS,CAAC,mBAAoB,QAAS,oBAAqB,WAEhEE,OAAQ,CAEJN,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVE,QAAS,CAAC,OAEdG,OAAQ,CAEJP,KAAM,cACNE,SAAU,SACVE,QAAS,CAAC,SAAU,WAAY,aAEpCI,OAAQ,CAEJR,KAAM,KACNE,SAAU,KACVE,QAAS,CAAC,QCqEH2a,GA1FS,SAAC,GAAyB,IAAvBjV,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACxBpE,EAAeC,qBAAWZ,GAA1BW,WADqC,EAGD2E,mBAAS,MAHR,mBAGtCsP,EAHsC,KAGtBoD,EAHsB,OAIV1S,mBAASwU,IAJC,mBAIzCrb,EAJyC,KAI5B2a,EAJ4B,KAMvCY,EAAmBvU,YAAc,2BAiBjCxE,EAfYC,aAAW,SAAAC,GAAK,MAAK,CACnCyH,UAAW,CACPI,QAAS,EACT7D,MAAO,OACPC,OAAQ,OACRY,QAAS,OACTc,cAAe,kBAAOkT,EAAmB,MAAQ,UACjDjT,eAAgB,UAEpB8B,KAAM,CACF1D,MAAO,OACP8U,UAAW,WAIHlY,GAwChB,OANAW,qBAAU,WACF/B,GACAqX,EAAkBrX,KAEvB,CAACA,IAGA,kBAACgI,EAAA,EAAD,CAAML,UAAWrH,EAAQ2H,WACrB,kBAAC,IAAD,CAAyBsR,MAAOC,KAC5B,kBAACxR,EAAA,EAAD,CAAME,MAAI,EAACP,UAAWrH,EAAQ4H,MAC1B,kBAAC,GAAD,CACItF,MAAO,CAAE4B,MAAO,QAClC1G,YAAaA,EACb2a,eAAgBA,EACExE,eAAgBA,EAChBoD,kBAAmBA,EACnBe,qBAhDS,SAAAtU,GACzBuT,EAAkB,eACXpD,EADU,eAEZnQ,EAAEmK,OAAOnF,KAFG,eAGNmL,EAAenQ,EAAEmK,OAAOnF,MAHlB,CAITvK,SAAUuF,EAAEmK,OAAOV,cA4CX8K,sBAvCU,SAAAvU,GAC1B,IAAMvI,EAAgB,GACtBC,OAAOC,KAAKwY,GAAgBvY,SAAQ,SAACC,EAAGC,GACpCL,EAAcI,GAAd,eACOsY,EAAetY,GADtB,CAEI4C,UAAU,OAGlB8Y,EAAkB9b,IAgCF+c,wBA7BY,SAAAxU,GAC5B,IAAMvI,EAAgB,GACtBC,OAAOC,KAAKwY,GAAgBvY,SAAQ,SAACC,EAAGC,GACpCL,EAAcI,GAAd,eACOsY,EAAetY,GADtB,CAEI4C,UAAU,OAGlB8Y,EAAkB9b,MAuBN,kBAAC,GAAD,CACIuC,YAAaA,EACbmW,eAAgBA,EAChBoD,kBAAmBA,EACnBlT,QAASA,EACTC,OAAQA,QCpGnBD,GAAU,CACnBE,aAAkC,GAApBkM,OAAOC,WACrBlM,cAAoC,GAArBiM,OAAOyC,YACtBzO,OAAQ,CACJuB,IAAK,GACLmN,MAA2B,GAApB1C,OAAOC,WACd0C,OAAQ,IACR1R,KAA0B,GAApB+O,OAAOC,aAIRpM,GAAS,CAClBI,MAAOL,GAAQE,aAAeF,GAAQI,OAAO/C,KAAO2C,GAAQI,OAAO0O,MACnExO,OAAQN,GAAQG,cAAgBH,GAAQI,OAAOuB,IAAM3B,GAAQI,OAAO2O,Q,UCXlEuG,GACO,CACLpb,KAAM,QACN6C,QAAS,CACL+J,KAAM,UACNhF,aAAc,WAElByI,UAAW,CACPzD,KAAM,WAEVgG,WAAY,CACRC,QAAS,OACTtB,MAAO,OACP8J,MAAO,OACPjI,KAAM,QAEVxQ,KAAM,CACFC,QAAS,YAKfyY,GACO,CACLtb,KAAM,OACN6C,QAAS,CACL+J,KAAM,WAEVyD,UAAW,CACPzD,KAAM,WAEVgG,WAAY,CACRC,QAAS,UACTtB,MAAO,UACP8J,MAAO,UACPjI,KAAM,WAEVxQ,KAAM,CACFC,QAAS,SAKRV,GAAQoZ,aAAe,CAChC3Q,WAAY,CACR+M,WAAY,CAAC,gBAAiB,YAAa,QAAS,cAAc9T,KAC9D,MAGR2X,UAAW,CACPC,aAAc,CACVvI,KAAM,CACF1V,MAAO,OACPqJ,YAAa,QAMhB6U,GAAW,SAACvZ,EAAO4P,GAC5B,OAAIA,EACOwJ,aAAe,eACfpZ,EADc,CAEjBQ,QAAQ,eACD2Y,OAIJC,aAAe,eACfpZ,EADc,CAEjBQ,QAAQ,eACDyY,QCzENO,GAAS,CACloBC7BWC,OA1Df,WAAgB,IAAD,EACyBtV,mBAAS,IADlC,mBACJD,EADI,KACQwV,EADR,OAEyBvV,mBAAS,MAFlC,mBAEJ3E,EAFI,KAEQma,EAFR,OAGqBxV,oBAAS,GAH9B,mBAGJyL,EAHI,KAGMC,EAHN,KAeX,OAVHtO,qBAAU,WACT7G,EAAewJ,EAAY0V,EAAYJ,IACrCzG,MAAK,SAAAC,GAAG,OAAI2G,EAAc3G,QAC1B,CAAC9O,IAEJ3C,qBAAU,WACTpF,EAAU0d,IAAUD,GAClB7G,MAAK,SAAAC,GAAG,OAAI0G,EAAc1G,QACvB,IAGC,oCACI,kBAACtD,GAAauD,SAAd,CAAuBjQ,MAAO,CAAE4M,WAAUC,gBACtC,kBAACiK,GAAA,EAAD,CAAe9Z,MAAOuZ,GAASvZ,GAAO4P,IAClC,kBAACmK,GAAA,EAAD,MACA,kBAAC,IAAD,CAAyBhB,MAAOC,KAC5B,kBAACta,EAAYuU,SAAb,CACIjQ,MAAO,CAAEkB,aAAYwV,kBAErB,kBAAC7a,EAAcoU,SAAf,CACIjQ,MAAO,CAAExD,aAAYma,kBAErB,kBAAC,IAAD,CACIK,KAAK,YACL7S,UAAU,WACV0E,UAAW,kBACP,kBAAC,GAAD,CACIlI,QAASA,GACTC,OAAQA,QAIpB,kBAAC,IAAD,CACIoW,KAAK,iBACL7S,UAAU,gBACV8S,OAAQ,kBAAM,kBAAC,GAAD,SAElB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAK,EACLC,KAAK,IACLC,GAAG,2BC9DvBlI,QACa,cAA7BnC,OAAOI,SAASkK,UAEiB,UAA7BtK,OAAOI,SAASkK,UAEhBtK,OAAOI,SAASkK,SAASC,MACrB,2D,aCZZC,IAASN,OACL,kBAAC,KAAD,KACI,kBAAC,GAAD,OAEJ1J,SAASiK,eAAe,SD0HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnB5H,MAAK,SAAA6H,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.9b1431c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us-states.83d72fb9.csv\";","import { nest } from \"d3\";\r\n\r\nconst cleanStateInfo = async (data, stateInfo, colors) => {\r\n    const revisedStates = {};\r\n\r\n    Object.keys(stateInfo).forEach((s, i) => {\r\n        revisedStates[s] = {\r\n            ...stateInfo[s],\r\n            color: colors[i],\r\n        };\r\n    });\r\n\r\n    const nested = await nest()\r\n        .key(d => d.state)\r\n        .entries(data);\r\n\r\n    await Object.keys(nested).forEach(i => {\r\n        const s = nested[i].key;\r\n\r\n        const lastIndex = nested[i].values.length - 1;\r\n        const latestCaseCount = nested[i].values[lastIndex].cases;\r\n        const latestCaseCountPerThou =\r\n            (nested[i].values[lastIndex].cases / stateInfo[s].population) *\r\n            1000;\r\n\r\n        revisedStates[s] = {\r\n            ...revisedStates[s],\r\n            latestCaseCount: latestCaseCount,\r\n            latestCaseCountPerThou: latestCaseCountPerThou,\r\n        };\r\n    });\r\n    return revisedStates;\r\n};\r\n\r\nexport { cleanStateInfo };\r\n","import { csv, timeParse } from \"d3\";\r\n\r\nconst importCSV = async (rawData, stateInfo) => {\r\n\tlet data = await csv(rawData);\r\n\r\n    // clean data\r\n    const dateParser = timeParse(\"%Y-%m-%d\");\r\n\r\n    data.forEach(d => {\r\n        d.date = dateParser(d.date);\r\n        d.fips = parseInt(d.fips);\r\n        d.cases = parseInt(d.cases);\r\n        d.deaths = parseInt(d.deaths);\r\n    });\r\n\r\n    // Filter data\r\n    data = data.filter(\r\n        d =>\r\n            d.date > new Date(2020, 1, 26) &&\r\n            Object.keys(stateInfo).includes(d.state)\r\n    );\r\n\r\n    // Normalize data:\r\n    // Add \"dayOfOutbreak\" to show elapsed time\r\n    // Add state population\r\n    // Add \"casesPerThousand\", \"deathsPerThousand\", \"mortalityRate\"\r\n    Object.keys(stateInfo).forEach(state => {\r\n        const stateData = data.filter(d => d.state === state);\r\n        let caseCounter = 0;\r\n        stateData.forEach(d => {\r\n            d.dayOfOutbreak =\r\n                (d.date - stateData[0].date) / (24 * 60 * 60 * 10 * 10 * 10) +\r\n                1; // day - day one, convert ms to days\r\n            d.casesPerThousand = (d.cases / stateInfo[state].population) * 1000;\r\n            d.deathsPerThousand =\r\n                (d.deaths / stateInfo[state].population) * 1000;\r\n            d.mortalityRate = (d.deaths / d.cases) * 100;\r\n            d.newCases = d.cases - caseCounter;\r\n\r\n            caseCounter = d.cases;\r\n        });\r\n    });\r\n    return data;\r\n};\r\n\r\nexport { importCSV };\r\n","export const chartParams = {\n    chartType: \"bubble\",\n    toTimestamp: null,\n    multiple: true,\n    normalize: true,\n    xParam: {\n        // x-axis\n        output: \"x-axis\",\n        type: \"linear\",\n        format: \"none\",\n        selected: \"casesPerThousand\",\n        alt1: \"cases\",\n        options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n    },\n    yParam: {\n        // y-axis\n        output: \"y-axis\",\n        type: \"linear\",\n        format: \"none\",\n        selected: \"deathsPerThousand\",\n        alt1: \"deaths\",\n        options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n    },\n    zParam: {\n        // z-axis (3rd dimension) (eg. size)\n        output: \"circle-area\",\n        type: \"linear\",\n        format: \"none\",\n        selected: \"population\",\n        options: [\"population\", \"populationDensity\", \"gdp\", \"none\"],\n    },\n    cParam: {\n        // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\n        output: \"color-grouping\",\n        type: \"categorical\",\n        selected: \"region\",\n        options: [\"region\", \"division\", \"governor\"],\n    },\n    tParam: {\n        // time axis (4th dimension) (ie. for animated charts)\n        output: \"time\",\n        type: \"time\",\n        selected: \"dayOfOutbreak\",\n        options: [\"dayOfOutbreak\", \"date\"],\n    },\n};\n\n// Label params:\nexport const labelParams = {\n    chartTitle: \"COVID-19 State Comparison\",\n    xLabel: \"Cases per Thousand\",\n    yLabel: \"Deaths per Thousand\",\n};\n\n// color param categories\nexport const cParamCategories = {\n    region: [\"Northeast\", \"Midwest\", \"South\", \"West\"],\n    division: [\n        \"New England\",\n        \"Mid-Atlantic\",\n        \"East North Central\",\n        \"West North Central\",\n        \"South Atlantic\",\n        \"East South Central\",\n        \"West South Central\",\n        \"Mountain\",\n        \"Pacific\",\n    ],\n    governor: [\"Republican\", \"Democrat\", \"n/a\"],\n};\n","import React from \"react\";\n\nconst dataContext = React.createContext();\n\nexport { dataContext };\n","import React from \"react\";\n\nconst statesContext = React.createContext();\n\nexport { statesContext };\n","import React from \"react\";\n\nexport const selectionContext = React.createContext();\n","import React, { useEffect, useContext, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\n// context\nimport { statesContext } from \"../../../context/statesContext\";\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// style\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nexport const CirclesGapminder = props => {\n    const { data, dayCounter, selector, scales, opacityNotSel } = props;\n    const { xParam, yParam, zParam, cParam } = selector;\n    const { xScale, yScale, colorScale } = scales;\n\n    // context and ref\n    const { infoStates } = useContext(statesContext);\n    const { selectedCircles, setSelectedCircles } = useContext(\n        selectionContext\n    );\n    const circlesRef = useRef(null);\n\n    // styles\n    const useStyles = makeStyles(theme => ({\n        circle: {\n            stroke: \"none\",\n            opacity: opacityNotSel,\n        },\n        circleSelected: {\n            stroke: \"#e91e63\",\n            strokeWidth: 2,\n            opacity: 0.8,\n        },\n        circleLabel: {\n            fill: theme.palette.text.primary,\n            fontSize: \".6rem\",\n        },\n    }));\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const bisectDay = d3.bisector(([d]) => d).left;\n\n    function dataAt(day) {\n        return data.map(d => ({\n            state: d.state,\n            region: d.region,\n            [xParam.selected]: valueAt(d[xParam.selected], day),\n            [yParam.selected]: valueAt(d[yParam.selected], day),\n        }));\n    }\n\n    function valueAt(values, day) {\n        const i = bisectDay(values, day, 0, values.length - 1);\n        const a = values[i];\n\n        if (i > 0) {\n            const b = values[i - 1];\n            const t = (day - a[0]) / (b[0] - a[0]);\n            return a[1] * (1 - t) + b[1] * t;\n        }\n        return a[1];\n    }\n\n    useEffect(() => {\n\t\tif (data) {\n            const circle = d3\n                .select(circlesRef.current)\n                .selectAll(\"circle\")\n                .data(dataAt(dayCounter), d => d)\n                .join(\"circle\")\n                .sort((a, b) =>\n                    d3.descending(\n                        infoStates[a.state][zParam.selected],\n                        infoStates[b.state][zParam.selected]\n                    )\n                )\n                .attr(\"r\", d =>\n                    zParam.selected === \"population\"\n                        ? infoStates[d.state][zParam.selected] / 1000000\n                        : zParam.selected === \"populationDensity\"\n                        ? infoStates[d.state][zParam.selected] / 100\n                        : zParam.selected === \"gdp\"\n                        ? infoStates[d.state][zParam.selected] / 100000\n                        : 5\n                )\n                .attr(\"cx\", d => xScale(d[xParam.selected]))\n                .attr(\"cy\", d => yScale(d[yParam.selected]))\n                .attr(\"fill\", d =>\n                    colorScale(infoStates[d.state][cParam.selected])\n                )\n                .attr(\"id\", d => `circle-${infoStates[d.state].htmlFormat}`)\n                .attr(\"class\", d =>\n                    selectedCircles.selected.includes(d.state)\n                        ? classes.circleSelected\n                        : classes.circle\n                )\n                .call(circle =>\n                    circle\n                        .append(\"title\")\n                        .text(d =>\n                            [\n                                d.state,\n                                `Day ${dayCounter}`,\n                                xParam.selected === \"casesPerThousand\"\n                                    ? `Cases/1000: ${\n                                          d.casesPerThousand &&\n                                          d.casesPerThousand.toFixed(2)\n                                      }`\n                                    : xParam.selected === \"cases\"\n                                    ? `Cases: ${\n                                          d.cases && d.cases.toLocaleString()\n                                      }`\n                                    : xParam.selected === \"deathsPerThousand\"\n                                    ? `Deaths/1000: ${\n                                          d.deathsPerThousand &&\n                                          d.deathsPerThousand.toFixed(2)\n                                      }`\n                                    : xParam.selected === \"deaths\"\n                                    ? `Deaths: ${\n                                          d.deaths && d.deaths.toLocaleString()\n                                      }`\n                                    : \"error\",\n                                yParam.selected === \"casesPerThousand\"\n                                    ? `Cases/1000: ${\n                                          d.casesPerThousand &&\n                                          d.casesPerThousand.toFixed(2)\n                                      }`\n                                    : yParam.selected === \"cases\"\n                                    ? `Cases: ${\n                                          d.cases && d.cases.toLocaleString()\n                                      }`\n                                    : yParam.selected === \"deathsPerThousand\"\n                                    ? `Deaths/1000: ${\n                                          d.deathsPerThousand &&\n                                          d.deathsPerThousand.toFixed(2)\n                                      }`\n                                    : yParam.selected === \"deaths\"\n                                    ? `Deaths: ${\n                                          d.deaths && d.deaths.toLocaleString()\n                                      }`\n                                    : \"error\",\n                            ].join(\"\\n\")\n                        )\n                );\n\n            circle.on(\"mouseover\", d => {\n                const mouseOverCircle = d3.select(\n                    `#circle-${infoStates[d.state].htmlFormat}`\n                );\n                if (\n                    opacityNotSel !== 0 ||\n                    selectedCircles.selected.includes(d.state)\n                ) {\n                    mouseOverCircle\n                        .attr(\"cursor\", \"pointer\")\n                        .style(\"opacity\", 0.9)\n                        .style(\"stroke\", \"#e91e63\")\n                        .style(\"stroke-width\", 2);\n                }\n            });\n\n            circle.on(\"mouseout\", d => {\n                const mouseOutCircle = d3.select(\n                    `#circle-${infoStates[d.state].htmlFormat}`\n                );\n                if (selectedCircles.notSelected.includes(d.state)) {\n                    mouseOutCircle\n                        .style(\"opacity\", opacityNotSel)\n                        .style(\"stroke\", \"none\");\n                }\n            });\n\n            circle.on(\"click\", d => {\n                if (selectedCircles.selected.includes(d.state)) {\n                    setSelectedCircles({\n                        ...selectedCircles,\n                        selected: selectedCircles.selected.filter(\n                            s => s !== d.state\n                        ),\n                        notSelected: [...selectedCircles.notSelected, d.state],\n                    });\n                    d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\n                        .style(\"opacity\", opacityNotSel)\n                        .style(\"stroke\", \"none\");\n                } else {\n                    setSelectedCircles({\n                        ...selectedCircles,\n                        selected: [...selectedCircles.selected, d.state],\n                        notSelected: selectedCircles.notSelected.filter(\n                            s => s !== d.state\n                        ),\n                    });\n                    d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\n                        .style(\"opacity\", 0.9)\n                        .style(\"stroke\", \"#e91e63\")\n                        .style(\"stroke-width\", 2);\n                }\n            });\n\n            d3.select(circlesRef.current)\n                .selectAll(\"text\")\n                .data(dataAt(dayCounter), d => d)\n                .join(\"text\")\n                .call(label => {\n                    const length = d => {\n                        if (zParam.selected === \"population\") {\n                            return (\n                                infoStates[d.state][zParam.selected] / 1000000\n                            );\n                        } else if (zParam.selected === \"populationDensity\") {\n                            return infoStates[d.state][zParam.selected] / 100;\n                        } else if (zParam.selected === \"gdp\") {\n                            return (\n                                infoStates[d.state][zParam.selected] / 100000\n                            );\n                        } else {\n                            return 4;\n                        }\n                    };\n                    label\n                        .attr(\"x\", d => xScale(d[xParam.selected]) + length(d))\n                        .attr(\"y\", d => yScale(d[yParam.selected]) - length(d));\n                })\n                .attr(\"opacity\", d =>\n                    selectedCircles.selected.includes(d.state) ? 0.8 : 0\n                )\n                .attr(\"class\", classes.circleLabel)\n                .attr(\"cursor\", \"context-menu\")\n                .text(d => infoStates[d.state].abbreviation);\n        }\n    }, [dayCounter, selector, scales, selectedCircles, opacityNotSel, theme]);\n\n    return (\n        <>\n            <g ref={circlesRef} />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Slider, Typography } from \"@material-ui/core\";\n\nexport const OpacitySlider = props => {\n    const { opacityNotSel, setOpacityNotSel } = props;\n\n    return (\n        <>\n            <Typography variant=\"caption\">Non-selected opacity</Typography>\n            <Slider\n                id=\"opacity-slider\"\n                value={opacityNotSel}\n                valueLabelDisplay=\"auto\"\n                step={0.1}\n                min={0}\n                max={1}\n                onChange={(e, newVal) => setOpacityNotSel(newVal)}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Slider, Typography } from \"@material-ui/core\";\n\nexport const DayCounterSlider = props => {\n    const { dayCounter, setDayCounter } = props;\n\n    return (\n        <>\n            <Typography variant=\"caption\">Day of Outbreak</Typography>\n            <Slider\n                id=\"day-counter-slider\"\n                value={dayCounter}\n                valueLabelDisplay=\"auto\"\n                step={1}\n                min={1}\n                max={105}\n                onChange={(e, newVal) => setDayCounter(newVal)}\n            />\n        </>\n    );\n};\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\n\n// context\nimport { dataContext } from \"../../../context/dataContext\";\n\n// components\nimport { CirclesGapminder } from \"./CirclesGapminder\";\nimport { OpacitySlider } from \"../interface/OpacitySlider\";\nimport { DayCounterSlider } from \"../interface/DayCounterSlider\";\n\n// style\nimport { Grid, Box, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nexport const ChartGapminder = props => {\n    const { cParamCategories, data, selector, wrapper, bounds } = props;\n    const { xParam, yParam, cParam } = selector;\n    const { wrapperWidth, wrapperHeight, margin } = wrapper;\n    const { width, height } = bounds;\n\n    const { dataStates } = useContext(dataContext);\n    const [scales, setScales] = useState(null);\n    const [dayCounter, setDayCounter] = useState(1);\n    const [opacityNotSel, setOpacityNotSel] = useState(0.6);\n\n    const theme = useTheme();\n    const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const useStyles = makeStyles(theme => ({\n        bodyWrapper: {\n            paddingLeft: 0,\n            [theme.breakpoints.up(\"md\")]: {\n                paddingLeft: 260,\n            },\n        },\n        rootSVG: {\n            display: \"inline-block\",\n            position: \"relative\",\n            width: \"100%\",\n            verticalAlign: \"middle\",\n            overflow: \"hidden\",\n        },\n        chartTitle: {\n            textAnchor: \"middle\",\n            fill: theme.palette.text.primary,\n            fontWeight: 700,\n            fontSize: \".8rem\",\n            [theme.breakpoints.up(\"sm\")]: {\n                fontSize: \"1rem\",\n            },\n        },\n        chartSubtitle: {\n            textAnchor: \"middle\",\n            fill: theme.palette.text.primary,\n            fontSize: \".5rem\",\n            [theme.breakpoints.up(\"sm\")]: {\n                fontSize: \".6rem\",\n            },\n        },\n        chartWrapper: {\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n        },\n        bounds: {\n            width: width,\n            height: height,\n        },\n        axes: {\n            color: theme.palette.text.primary,\n        },\n        legend: {\n            color: theme.palette.primary.contrastText,\n            fontWeight: 700,\n            fontSize: \".6rem\",\n            [theme.breakpoints.up(\"sm\")]: {\n                fontSize: \".8rem\",\n            },\n        },\n        sliderContainer: {\n            flexDirection: () => (mqSmall ? \"column\" : \"row\"),\n            justifyContent: () => (mqSmall ? \"center\" : \"space-between\"),\n            maxWidth: width,\n            margin: \"0 auto\",\n            alignItems: \"center\",\n        },\n        slider: {\n            width: () => (mqSmall ? \"95%\" : \"45%\"),\n        },\n    }));\n\n    const classes = useStyles();\n\n    const svgRef = useRef(null);\n    const boundsRef = useRef(null);\n    const yAxisRef = useRef(null);\n    const xAxisRef = useRef(null);\n    const legendRef = useRef(null);\n\n    const renderChart = () => {\n        const xScale = d3\n            .scaleLinear()\n            .domain(d3.extent(dataStates, d => d[xParam.selected]))\n            .range([0, width]);\n        const yScale = d3\n            .scaleLinear()\n            .domain(d3.extent(dataStates, d => d[yParam.selected]))\n            .range([height, 0]);\n\n        let colorScale;\n\n        if (cParam.selected === \"region\") {\n            colorScale = d3\n                .scaleOrdinal()\n                .domain(cParamCategories.region)\n                .range(d3.schemePaired);\n        } else if (cParam.selected === \"division\") {\n            colorScale = d3\n                .scaleOrdinal()\n                .domain(cParamCategories.division)\n                .range(d3.schemePaired);\n        } else if (cParam.selected === \"governor\") {\n            colorScale = d3\n                .scaleOrdinal()\n                .domain(cParamCategories.governor)\n                .range([\"#B61515\", \"#2E84D5\", \"#009C72\"]);\n        }\n\n        setScales({\n            xScale: xScale,\n            yScale: yScale,\n            colorScale: colorScale,\n        });\n\n        // Axes\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n        const xAxis = d3\n            .select(xAxisRef.current)\n            .call(xAxisGenerator)\n            .call(axis => {\n                axis.append(\"text\").attr(\"class\", \"xLabel\");\n                axis.append(\"text\").attr(\"class\", \"counter-display\");\n            });\n\n        xAxis\n            .selectAll(\".xLabel\")\n            .data(xParam.selected, d => d)\n            .join(\"text\")\n            .attr(\"x\", width)\n            .attr(\"y\", 40)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", \"xLabel\")\n            .attr(\"fill\", theme.palette.text.primary)\n            .text(xParam.selected);\n\n        const yAxis = d3\n            .select(yAxisRef.current)\n            .call(yAxisGenerator)\n            .call(axis => axis.append(\"text\").attr(\"class\", \"yLabel\"));\n\n        yAxis\n            .selectAll(\".yLabel\")\n            .data(yParam.selected, d => d)\n            .join(\"text\")\n            .attr(\"x\", 0)\n            .attr(\"y\", -40)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"class\", \"yLabel\")\n            .attr(\"fill\", theme.palette.text.primary)\n            .text(yParam.selected);\n\n        // legend\n        d3.select(legendRef.current)\n            .selectAll(\"text\")\n            .data(cParamCategories[cParam.selected], d => d)\n            .join(\n                enter =>\n                    enter\n                        .append(\"text\")\n                        .attr(\"x\", \"1rem\")\n                        .attr(\"y\", -1000)\n                        .attr(\"fill\", d => colorScale(d))\n                        .attr(\"text-anchor\", \"start\")\n                        .text(d => d)\n                        .call(enter =>\n                            enter\n                                .transition()\n                                .duration(750)\n                                .attr(\"y\", (d, i) => -height + 10 + 20 * i)\n                        ),\n                update =>\n                    update\n                        .append(\"text\")\n                        .attr(\"fill\", d => colorScale(d))\n                        .attr(\"text-anchor\", \"start\")\n                        .attr(\"y\", 60)\n                        .text(d => d)\n                        .call(update => update.transition().duration(750)),\n                exit =>\n                    exit\n                        .attr(\"fill\", \"gray\")\n                        .attr(\"text-anchor\", \"start\")\n                        .text(d => d)\n                        .call(exit =>\n                            exit\n                                .transition()\n                                .duration(750)\n                                .attr(\"y\", 0)\n                                .remove()\n                        )\n            );\n    };\n\n    useEffect(() => {\n        if (dataStates) {\n            renderChart();\n\t\t}\n    }, [dataStates, selector, theme]);\n\n    useEffect(() => {\n        d3.select(boundsRef.current)\n            .selectAll(\".counter-display\")\n            .join(\"text\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"x\", width)\n            .attr(\"y\", -40)\n            .attr(\"class\", \"counter-display\")\n            .style(\"fill\", theme.palette.text.primary)\n            .text(`Day ${dayCounter}`);\n    }, [dayCounter, theme]);\n\n    return (\n        <Box className={classes.bodyWrapper}>\n            <div>\n                <svg\n                    ref={svgRef}\n                    id=\"gapminder-app\"\n                    height={wrapperHeight}\n                    width={wrapperWidth}\n                    className={classes.rootSVG}\n                    viewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\n                >\n                    <g\n                        ref={boundsRef}\n                        className={classes.bounds}\n                        transform={`translate(${margin.left}, ${margin.top})`}\n                    >\n                        <text\n                            x={width / 2}\n                            y={mqSmall ? -margin.top * 0.5 : -margin.top * 0.7}\n                            className={classes.chartTitle}\n                        >\n                            COVID-19 in the United States\n                        </text>\n                        <text\n                            x={width / 2}\n                            y={mqSmall ? -margin.top * 0.3 : -margin.top * 0.4}\n                            className={classes.chartTitle}\n                        >\n                            Outbreak Days 1 - 105\n                        </text>\n                        <text\n                            x={width / 2}\n                            y={\n                                mqSmall\n                                    ? -margin.top * 0.15\n                                    : -margin.top * 0.15\n                            }\n                            className={classes.chartSubtitle}\n                        >\n                            *data from the New York Times\n                        </text>\n                        <g\n                            ref={xAxisRef}\n                            transform={`translate(0, ${height})`}\n                            className={classes.axes}\n                        />\n                        <g ref={yAxisRef} className={classes.axes} />\n                        <g\n                            ref={legendRef}\n                            transform={`translate(0, ${height})`}\n                            className={classes.legend}\n                        />\n                        {data && scales ? (\n                            <CirclesGapminder\n                                {...props}\n                                scales={scales}\n                                dayCounter={dayCounter}\n                                opacityNotSel={opacityNotSel}\n                            />\n                        ) : (\n                            <></>\n                        )}\n                    </g>\n                </svg>\n            </div>\n            <Grid container className={classes.sliderContainer}>\n                <Grid item className={classes.slider}>\n                    <DayCounterSlider\n                        dayCounter={dayCounter}\n                        setDayCounter={setDayCounter}\n                    />\n                </Grid>\n                <Grid item className={classes.slider}>\n                    <OpacitySlider\n                        opacityNotSel={opacityNotSel}\n                        setOpacityNotSel={setOpacityNotSel}\n                    />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n};\n\nChartGapminder.propTypes = {\n    cParamCategories: PropTypes.object,\n    data: PropTypes.arrayOf(PropTypes.object),\n    selector: PropTypes.object,\n    wrapper: PropTypes.object,\n    bounds: PropTypes.object,\n};\n","import React from \"react\";\n\n// style\nimport {\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Grid,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    rootContainer: {\n        maxWidth: 750,\n        minWidth: 175,\n        justifyContent: \"space-evenly\",\n        padding: 0,\n        margin: 0,\n    },\n    filterSelector: {\n        minWidth: 150,\n        fontWeight: 500,\n        fontSize: \".8rem\",\n        color: theme.palette.text.primary,\n    },\n    filterMenuItem: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n        fontSize: \".8rem\",\n    },\n}));\n\nexport const ParamPicker = props => {\n    const { flexDirection, selector, handleSelector } = props;\n    const classes = useStyles();\n\n    return (\n        <Grid\n            container\n            className={classes.rootContainer}\n            style={\n                flexDirection === \"row\"\n                    ? { flexDirection: \"row\", justifyContent: \"space-evenly\" }\n                    : { flexDirection: \"column\" }\n            }\n        >\n            {Object.keys(selector).map(p => {\n                return (\n                    <FormControl key={selector[p].output}>\n                        <InputLabel>{selector[p].output}</InputLabel>\n                        <Select\n                            name={p}\n                            value={selector[p].selected}\n                            onChange={handleSelector}\n                            className={classes.filterSelector}\n                        >\n                            {selector[p].options.map(o => {\n                                return (\n                                    <MenuItem\n                                        key={o}\n                                        value={o}\n                                        className={classes.filterMenuItem}\n                                    >\n                                        {o}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                );\n            })}\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n\n// styles\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        color: theme.palette.text.primary,\n        fontWeight: 700,\n        fontSize: \"1.2rem\",\n    },\n    divider: {\n        backgroundColor: theme.palette.text.primary,\n        marginBottom: \".2rem\",\n    },\n}));\n\nexport const SectionTitle = props => {\n    const { divider, href, classes, innerProps } = props;\n    const defaultClasses = useStyles();\n\n    return (\n        <>\n            <Typography\n                className={clsx(defaultClasses.typography, classes.typography)}\n                {...innerProps.typography}\n            >\n                {props.children}\n            </Typography>\n            {divider && (\n                <Divider\n                    className={clsx(defaultClasses.divider, classes.divider)}\n                    {...innerProps.divider}\n                />\n            )}\n        </>\n    );\n};\n\nSectionTitle.propTypes = {\n    classes: PropTypes.object,\n    innerProps: PropTypes.object,\n};\n\nSectionTitle.defaultProps = {\n    classes: {},\n    innerProps: {},\n};\n","import React from \"react\";\n\n// components\nimport { ParamPicker } from \"../pickers/ParamPicker\";\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\n\n// style\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tparamPickerContainer: {},\n    menuButton: {\n        color: theme.palette.primary.contrastText,\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    filterBody: {\n\t\tpaddingLeft: theme.spacing(3),\n\t\tpaddingRight: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n}));\n\nconst ParamDashboard = props => {\n    const { flexDirection, data, selector, handleSelector } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paramPickerContainer}>\n            <SectionTitle divider>Parameters</SectionTitle>\n            <div className={classes.filterBody}>\n                <ParamPicker\n                    flexDirection={flexDirection}\n                    data={data}\n                    selector={selector}\n                    handleSelector={handleSelector}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ParamDashboard;","import React, { useState, useContext, forwardRef } from \"react\";\n\n// context\nimport { statesContext } from \"../../../../context/statesContext\";\n\n// style\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const Filter = forwardRef((props, ref) => {\n    const { handleFilter, filterData } = props;\n\n    const { infoStates } = useContext(statesContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleMenu = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    return (\n        <>\n            {infoStates &&\n                filterData.map(d => {\n                    return (\n                        <MenuItem\n                            key={d.id}\n                            id={d.id}\n                            onClick={() => handleFilter(d)}\n                            onClose={handleMenu}\n                        >\n                            {d.name}\n                        </MenuItem>\n                    );\n                })}\n        </>\n    );\n});\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\nimport { statesContext } from \"../../../context/statesContext\";\n\n// components\nimport { Filter } from \"../sharedComponents/pickers/Filter\";\n\n// style\nimport { Chip, FormControl, InputLabel, Select, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n\tfilterSelector: {\n\t\tdisplay: \"block\",\n        minWidth: 175,\n        fontWeight: 500,\n        fontSize: \".8rem\",\n    },\n    chipContainer: {\n        listStyle: \"none\",\n        backgroundColor: \"transparent\",\n        padding: 0,\n    },\n    chip: {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.contrastText,\n        padding: theme.spacing(0.5),\n        margin: theme.spacing(0.5),\n        fontSize: \".7rem\",\n    },\n}));\n\nexport const FilterBatch = props => {\n    const {\n        filters,\n        handleDeleteFilter,\n        handleFilter,\n        nStates,\n        handleSelector,\n    } = props;\n    const { setSelectedCircles } = useContext(selectionContext);\n    const { infoStates } = useContext(statesContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const classes = useStyles();\n\n    const handleFilterCategories = newFilter => {\n        const filtered = Object.keys(infoStates).filter(\n            s => infoStates[s][newFilter.chartParam] === newFilter.name\n        );\n\n        setAnchorEl(null);\n        return filtered;\n    };\n\n    const filterParams = [\n        {\n            category: \"Region\",\n            params: [\n                {\n                    id: \"northeast\",\n                    name: \"Northeast\",\n                    type: \"Region\",\n                    chartParam: \"region\",\n                },\n                {\n                    id: \"midwest\",\n                    name: \"Midwest\",\n                    type: \"Region\",\n                    chartParam: \"region\",\n                },\n                {\n                    id: \"south\",\n                    name: \"South\",\n                    type: \"Region\",\n                    chartParam: \"region\",\n                },\n                {\n                    id: \"west\",\n                    name: \"West\",\n                    type: \"Region\",\n                    chartParam: \"region\",\n                },\n            ],\n        },\n        {\n            category: \"Gov. party\",\n            params: [\n                {\n                    id: \"democrat\",\n                    name: \"Democrat\",\n                    type: \"Governor\",\n                    chartParam: \"governor\",\n                },\n                {\n                    id: \"republican\",\n                    name: \"Republican\",\n                    type: \"Governor\",\n                    chartParam: \"governor\",\n                },\n            ],\n        },\n        {\n            category: \"Population\",\n            params: [\n                {\n                    id: \"pop-high\",\n                    name: `Top ${nStates} (pop. total)`,\n                    type: \"Pop.\",\n                    chartParam: \"population\",\n                    sort: \"descending\",\n                    n: nStates,\n                },\n                {\n                    id: \"pop-low\",\n                    name: `Bottom ${nStates} (pop. total)`,\n                    type: \"Pop.\",\n                    chartParam: \"population\",\n                    sort: \"ascending\",\n                    n: nStates,\n                },\n                {\n                    id: \"pop-density-high\",\n                    name: `Top ${nStates} (pop. density)`,\n                    type: \"Pop.\",\n                    chartParam: \"populationDensity\",\n                    sort: \"descending\",\n                    n: nStates,\n                },\n                {\n                    id: \"pop-density-low\",\n                    name: `Bottom ${nStates} (pop. density)`,\n                    type: \"Pop.\",\n                    chartParam: \"populationDensity\",\n                    sort: \"ascending\",\n                    n: nStates,\n                },\n            ],\n        },\n        {\n            category: \"GDP\",\n            params: [\n                {\n                    id: \"gdp-high\",\n                    name: `Top ${nStates} (2019 GDP)`,\n                    type: \"GDP\",\n                    chartParam: \"gdp\",\n                    sort: \"descending\",\n                    n: nStates,\n                },\n                {\n                    id: \"gdp-low\",\n                    name: `Bottom ${nStates} (2019 GDP)`,\n                    type: \"GDP\",\n                    chartParam: \"gdp\",\n                    sort: \"ascending\",\n                    n: nStates,\n                },\n            ],\n        },\n    ];\n\n    const handleFilterValues = newFilter => {\n        const n = newFilter.n;\n        const filtered = Object.keys(infoStates)\n            .sort((a, b) =>\n                newFilter.sort === \"descending\"\n                    ? infoStates[b][newFilter.chartParam] -\n                      infoStates[a][newFilter.chartParam]\n                    : infoStates[a][newFilter.chartParam] -\n                      infoStates[b][newFilter.chartParam]\n            )\n            .slice(0, n);\n\n        setAnchorEl(null);\n        return filtered;\n    };\n\n    const handleFilters = () => {\n        let selected = [];\n        let currSelection = [];\n        filters.forEach((d, i) => {\n            if (d.type === \"Region\" || d.type === \"Governor\") {\n                currSelection = handleFilterCategories(d);\n            } else if (d.type === \"Pop.\" || d.type === \"GDP\") {\n                currSelection = handleFilterValues(d);\n            }\n\n            selected =\n                selected.length < 1\n                    ? currSelection\n                    : currSelection.filter(s => selected.includes(s));\n        });\n\n        setSelectedCircles(prevState => ({\n            ...prevState,\n            selected: selected,\n            notSelected: prevState.all.filter(s => !selected.includes(s)),\n        }));\n    };\n\n    useEffect(() => {\n        filters.length > 0\n            ? handleFilters()\n            : setSelectedCircles(prevState => ({\n                  ...prevState,\n                  selected: [],\n                  notSelected: prevState.all,\n              }));\n    }, [filters]);\n\n    return (\n        <>\n            {filterParams.map(f => (\n                <FormControl key={f.category}>\n                    <InputLabel>{f.category}</InputLabel>\n                    <Select\n                        name={f.category}\n                        onChange={handleSelector}\n                        className={classes.filterSelector}\n                    >\n                        <Filter\n                            handleFilter={handleFilter}\n                            filterData={f.params}\n                        />\n                    </Select>\n                </FormControl>\n            ))}\n            <Box component=\"ul\" className={classes.chipContainer}>\n                {filters.length > 0 &&\n                    filters.map(f => {\n                        return (\n                            <li key={f.id}>\n                                <Chip\n                                    size=\"small\"\n                                    className={classes.chip}\n                                    label={f.name}\n                                    onDelete={() => handleDeleteFilter(f)}\n                                />\n                            </li>\n                        );\n                    })}\n            </Box>\n        </>\n    );\n};\n","import React, { useContext } from \"react\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// style\nimport {\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Tooltip,\n    IconButton,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles(theme => ({\n    stateLabelList: {\n        display: \"block\",\n    },\n    deselectAll: {\n        display: \"flex\",\n        alignContent: \"center\",\n        paddingTop: theme.spacing(2),\n    },\n    deselectAllButton: {\n        padding: 0,\n        color: \"#e32636\",\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    selectedLabel: {\n        fontSize: \".9rem\",\n        fontWeight: 300,\n    },\n    notSelectedLabel: {\n        fontSize: \".9rem\",\n        color: \"gray\",\n        fontWeight: 300,\n        opacity: 0.7,\n    },\n}));\n\nexport const SelectedStatus = props => {\n    const { handleChange, handleDeselectAll } = props;\n    const { selectedCircles } = useContext(selectionContext);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <>\n            <div className={classes.deselectAll}>\n                <Tooltip title=\"Deselect all\">\n                    <IconButton\n                        className={classes.deselectAllButton}\n                        onClick={handleDeselectAll}\n                    >\n                        <ClearIcon />\n                    </IconButton>\n                </Tooltip>\n                <Typography display=\"inline\">Deselect All</Typography>\n            </div>\n            {selectedCircles.selected &&\n                selectedCircles.selected.sort().map((state, i) => {\n                    return (\n                        <FormControlLabel\n                            key={i}\n                            name={state}\n                            checked={selectedCircles.selected.includes(state)}\n                            onChange={handleChange}\n                            control={\n                                <Checkbox\n                                    name={state}\n                                    className={classes.selectedLabel}\n                                />\n                            }\n                            label={state}\n                            className={classes.stateLabelList}\n                            classes={{ label: classes.selectedLabel }}\n                        />\n                    );\n                })}\n            <Divider />\n            <br />\n            {selectedCircles.notSelected &&\n                selectedCircles.notSelected.sort().map((state, i) => {\n                    return (\n                        <FormControlLabel\n                            key={i}\n                            name={state}\n                            checked={selectedCircles.selected.includes(state)}\n                            onChange={handleChange}\n                            control={\n                                <Checkbox\n                                    name={state}\n                                    className={classes.notSelectedLabel}\n                                />\n                            }\n                            label={state}\n                            className={classes.stateLabelList}\n                            classes={{ label: classes.notSelectedLabel }}\n                        />\n                    );\n                })}\n        </>\n    );\n};\n","import React from \"react\";\n\n// style\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    filterSelector: {\n        minWidth: 150,\n        fontWeight: 500,\n        fontSize: \".8rem\",\n        color: theme.palette.text.primary,\n    },\n    input: {\n        color: theme.palette.text.primary,\n    },\n}));\n\nexport const NumberPicker = props => {\n    const { nStates, setNStates } = props;\n    const classes = useStyles();\n\n    return (\n        <TextField\n            id=\"n-states\"\n            size=\"small\"\n            type=\"number\"\n            label=\"Filter n states\"\n            InputProps={{\n                inputProps: {\n                    min: 1,\n                    max: 50,\n                    className: classes.input,\n                },\n            }}\n            defaultValue={nStates}\n            onChange={e => setNStates(e.target.value)}\n            className={classes.filterSelector}\n        />\n    );\n};\n","import React, { useState, useContext } from \"react\";\nimport { FormGroup } from \"@material-ui/core\";\n\n// components\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\nimport { FilterBatch } from \"../pickers/FilterBatch\";\nimport { SelectedStatus } from \"../pickers/SelectedStatus\";\nimport { NumberPicker } from \"../pickers/NumberPicker\";\n\n// context\nimport { selectionContext } from \"../../../context/selectionContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    deselectAll: {\n        display: \"flex\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(2),\n    },\n    filterBatch: {\n        justifyContent: \"flex-start\",\n        color: theme.palette.text.primary,\n    },\n    selectedStatus: {\n        marginTop: \"100\",\n    },\n    filterBody: {\n        paddingLeft: theme.spacing(3),\n        marginBottom: theme.spacing(4),\n    },\n}));\n\nconst FilterDashboard = props => {\n    const { handleSelector } = props;\n    const { selectedCircles, setSelectedCircles } = useContext(\n        selectionContext\n    );\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [filters, setFilters] = useState([]);\n    const [nStates, setNStates] = useState(12);\n\n    const handleChange = e => {\n        const state = e.target.name;\n\n        if (selectedCircles.selected.includes(state)) {\n            setSelectedCircles({\n                ...selectedCircles,\n                selected: selectedCircles.selected.filter(d => d !== state),\n                notSelected: [...selectedCircles.notSelected, state],\n            });\n        } else {\n            setSelectedCircles({\n                ...selectedCircles,\n                selected: [...selectedCircles.selected, state],\n                notSelected: selectedCircles.notSelected.filter(\n                    d => d !== state\n                ),\n            });\n        }\n    };\n\n    const handleFilter = newFilter => {\n        if (filters.length > 0) {\n            setFilters(prevState => [...prevState, newFilter]);\n        } else setFilters([newFilter]);\n    };\n\n    const handleDeleteFilter = deletedFilter => {\n        const newFilterList = filters.filter(f => f.id !== deletedFilter.id);\n        setFilters(newFilterList);\n    };\n\n    const handleDeselectAll = () => {\n        setFilters([]);\n        setSelectedCircles(prevState => ({\n            ...prevState,\n            selected: [],\n            notSelected: prevState.all,\n        }));\n    };\n\n    return (\n        <>\n            <FormGroup>\n                <SectionTitle divider>Filters</SectionTitle>\n                <div className={classes.filterBody}>\n                    <NumberPicker nStates={nStates} setNStates={setNStates} />\n                    <FilterBatch\n                        nStates={nStates}\n                        setNStates={setNStates}\n                        filters={filters}\n                        setFilters={setFilters}\n                        handleDeleteFilter={handleDeleteFilter}\n                        handleFilter={handleFilter}\n                        handleSelector={handleSelector}\n                    />\n                </div>\n                <SectionTitle divider>Selections</SectionTitle>\n                <div className={classes.filterBody}>\n                    <SelectedStatus\n                        handleChange={handleChange}\n                        handleDeselectAll={handleDeselectAll}\n                    />\n                </div>\n            </FormGroup>\n        </>\n    );\n};\n\nexport default FilterDashboard;","import React from \"react\";\n\n// style\nimport { IconButton, Tooltip, Typography, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        color: theme.palette.text.secondary,\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n}));\n\nexport const ChartPicker = () => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <MenuItem component=\"a\" href=\"/covidcompare/#/line-app\">\n                <Tooltip title=\"Line chart\">\n                    <IconButton className={classes.menuButton}>\n                        <TimelineIcon />\n                    </IconButton>\n                </Tooltip>\n                <Typography display=\"inline\">Line chart</Typography>\n            </MenuItem>\n            <MenuItem component=\"a\" href=\"/covidcompare/#/gapminder-app\">\n                <Tooltip title=\"Gapminder chart\">\n                    <IconButton className={classes.menuButton}>\n                        <BubbleChartIcon />\n                    </IconButton>\n                </Tooltip>\n                <Typography display=\"inline\">Gapminder chart</Typography>\n            </MenuItem>\n        </>\n    );\n};\n","import React from \"react\";\n\n// style\nimport { Drawer, Hidden, Toolbar, Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 1,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        alignItems: \"left\",\n        color: theme.palette.text.primary,\n        paddingLeft: \"1rem\",\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport const MenuDrawer = props => {\n    const { mobileOpen, handleDrawer, persistent } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <>\n            <Hidden mdUp>\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                    open={mobileOpen}\n                    onClose={handleDrawer}\n                    classes={{ paper: classes.drawerPaper }}\n                    ModalProps={{ keepMounted: true }}\n                >\n                    <Toolbar />\n                    <Grid item style={{ marginBottom: \"auto\" }}>\n                        {props.children}\n                    </Grid>\n                </Drawer>\n            </Hidden>\n            {persistent && (\n                <Hidden smDown>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{ paper: classes.drawerPaper }}\n                        open\n                    >\n                        <Toolbar />\n                        <div className={classes.drawerContainer}>\n                            {props.children}\n                        </div>\n                    </Drawer>\n                </Hidden>\n            )}\n        </>\n    );\n};\n","import React from \"react\";\n\nexport const ThemeContext = React.createContext();\n","import React, { useContext } from \"react\";\nimport { saveSvgAsPng } from \"save-svg-as-png\";\n\n// context\nimport { ThemeContext } from \"../context/ThemeContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport \"../styles/styles.css\";\nimport { IconButton, Tooltip, Typography, MenuItem } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\n\nexport const Settings = () => {\n    const { darkMode, setDarkMode } = useContext(ThemeContext);\n\n    const useStyles = makeStyles(theme => ({\n        rootGrid: {\n            maxWidth: window.innerWidth,\n            margin: \"0 auto\",\n        },\n        footerButton: {\n            color: theme.palette.text.secondary,\n            \"&:hover\": {\n                backgroundColor: \"transparent\",\n            },\n        },\n    }));\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const pathArray = window.location.href.split(\"/\");\n    const queryID = `#${pathArray[pathArray.length - 1]}`;\n\n    const saveImage = () => {\n        saveSvgAsPng(document.querySelector(queryID), \"covid-19_chart.png\", {\n            backgroundColor: theme.palette.background.default,\n            encoderOptions: 1,\n            fonts: [\n                {\n                    url:\n                        \"../../styles/ralewaymedium/raleway-medium-webfont.woff\",\n                    format: \"application/font-woff\",\n                    text:\n                        \"@font-face {font-family: 'ralewaymedium'; src: url('./ralewaymedium/raleway-medium-webfont.woff2') format('woff2'), url('./ralewaymedium/raleway-medium-webfont.woff') format('woff'); font-weight: normal;font-style: normal;}\",\n                },\n            ],\n        });\n    };\n\n    return (\n        <>\n            <MenuItem onClick={saveImage}>\n                <Tooltip title=\"Save chart as image\" placement=\"right\">\n                    <IconButton className={classes.footerButton}>\n                        <SaveIcon />\n                    </IconButton>\n                </Tooltip>\n                <Typography display=\"inline\">Save chart</Typography>\n            </MenuItem>\n            <MenuItem onClick={() => setDarkMode(!darkMode)}>\n                <Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\n                    <IconButton className={classes.footerButton}>\n                        <Brightness7Icon />\n                    </IconButton>\n                </Tooltip>\n                <Typography display=\"inline\">Dark mode</Typography>\n            </MenuItem>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\n\n// components\nimport ParamDashboard from \"./ParamDashboard\";\nimport FilterDashboard from \"./FilterDashboard\";\nimport { ChartPicker } from \"../../sharedComponents/ChartPicker\";\nimport { MenuDrawer } from \"./MenuDrawer\";\nimport { Settings } from \"../../Settings\";\n\n// style\nimport {\n    AppBar,\n    Toolbar,\n    IconButton,\n    Button,\n    Menu,\n    MenuList,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n    },\n    appBar: {\n        backgroundColor: theme.palette.background.dark,\n        color: theme.palette.text.primary,\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        color: theme.palette.text.primary,\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    hide: {\n        display: \"none\",\n    },\n}));\n\nexport const Navbar = props => {\n    const { data, selector, handleSelector } = props;\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const classes = useStyles();\n\n    const handleOptions = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    const handleDrawer = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <>\n            <AppBar position=\"relative\" className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        onClick={handleDrawer}\n                        edge=\"start\"\n                        disableRipple\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon className={classes.menuButton} />\n                    </IconButton>\n                    <span style={{ marginLeft: \"auto\" }}>\n                        <Button onClick={handleOptions}>Options</Button>\n                        <Menu\n                            anchorEl={anchorEl}\n                            open={Boolean(anchorEl)}\n                            onClose={handleOptions}\n                        >\n                            <MenuList\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <ChartPicker />\n                                <Settings />\n                            </MenuList>\n                        </Menu>\n                    </span>\n                </Toolbar>\n            </AppBar>\n            <MenuDrawer\n                mobileOpen={mobileOpen}\n                handleDrawer={handleDrawer}\n                persistent\n            >\n                <div>\n                    <ParamDashboard\n                        flexDirection=\"column\"\n                        data={data}\n                        selector={selector}\n                        handleSelector={handleSelector}\n                    />\n                </div>\n                <div>\n                    <FilterDashboard handleSelector={handleSelector} />\n                </div>\n            </MenuDrawer>\n        </>\n    );\n};\n","export const gapminderData = async (data, stateInfo, chartParams) => {\n    const { xParam, yParam, tParam } = chartParams;\n    let newData = [];\n    Object.keys(stateInfo).forEach((state, i) => {\n        let eachState = {\n            state: state,\n            region: stateInfo[state].region,\n            [tParam.selected]: [],\n            [xParam.selected]: [],\n            [xParam.alt1]: [],\n            [yParam.selected]: [],\n            [yParam.alt1]: [],\n        };\n\n        const filtered = data.filter(d => d.state === state);\n        filtered.forEach((d, i) => {\n            eachState[tParam.selected].push([\n                d[tParam.selected],\n                d[tParam.selected],\n            ]);\n            eachState[xParam.selected].push([\n                d[tParam.selected],\n                d[xParam.selected],\n            ]);\n            eachState[yParam.selected].push([\n                d[tParam.selected],\n                d[yParam.selected],\n            ]);\n            eachState[xParam.alt1].push([d[tParam.selected], d[xParam.alt1]]);\n            eachState[yParam.alt1].push([d[tParam.selected], d[yParam.alt1]]);\n        });\n        newData.push(eachState);\n    });\n\n    return newData;\n};\n","export const wrapper = {\n    wrapperWidth: window.innerWidth * 0.8,\n    wrapperHeight: window.innerHeight * 0.8,\n    margin: {\n        top: 80,\n        right: 40,\n        bottom: 60,\n        left: 60,\n    },\n};\n\nexport const bounds = {\n    width: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\n    height: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\n};\n","import React, { useState, useEffect, useContext } from \"react\";\n\n// params\nimport { chartParams, cParamCategories } from \"./appParams\";\n\n// components\nimport { ChartGapminder } from \"./chart/ChartGapminder\";\nimport { Navbar } from \"./interface/Navbar\";\n\n// context\nimport { dataContext } from \"../../context/dataContext\";\nimport { selectionContext } from \"../../context/selectionContext\";\n\n// data\nimport stateInfo from \"../../data/stateInfo.json\";\nimport { gapminderData } from \"./gapminderData\";\n\n// style\nimport { wrapper, bounds } from \"./styles/dimensions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst AppGapminder = props => {\n    const { darkMode, setDarkMode } = props;\n    const { margin } = wrapper;\n    const { width } = bounds;\n\n    const { dataStates } = useContext(dataContext);\n    const [data, setData] = useState(null);\n    const [selector, setSelector] = useState({\n        xParam: chartParams.xParam,\n        yParam: chartParams.yParam,\n        zParam: chartParams.zParam,\n        cParam: chartParams.cParam,\n    });\n    const [selectedCircles, setSelectedCircles] = useState({\n        selected: [],\n        notSelected: Object.keys(stateInfo),\n        all: Object.keys(stateInfo),\n    });\n\n    // style\n    const useStyles = makeStyles(theme => ({\n        navbar: {\n            width: width,\n            marginLeft: margin.left,\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n        },\n    }));\n    const classes = useStyles();\n\n    const handleSelector = e => {\n        const param = e.target.name;\n\n        setSelector({\n            ...selector,\n            [param]: {\n                ...selector[param],\n                selected: e.target.value,\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (dataStates.length > 0) {\n            gapminderData(dataStates, stateInfo, chartParams).then(res =>\n                setData(res)\n            );\n        }\n    }, [dataStates]);\n\n    return (\n        <selectionContext.Provider\n            value={{ selectedCircles, setSelectedCircles }}\n        >\n            <Navbar\n                data={data}\n                selector={selector}\n                handleSelector={handleSelector}\n                className={classes.navbar}\n                darkMode={darkMode}\n                setDarkMode={setDarkMode}\n            />\n            <div transform={`translate(${margin.left}, ${margin.top})`}>\n                {data && (\n                    <ChartGapminder\n                        cParamCategories={cParamCategories}\n                        selector={selector}\n                        data={data}\n                        wrapper={wrapper}\n                        bounds={bounds}\n                    />\n                )}\n            </div>\n        </selectionContext.Provider>\n    );\n};\n\nexport default AppGapminder;","import * as d3 from \"d3\";\n\nconst date = {\n    dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\n    dateParser: d3.timeParse(\"%m-%d-%y\"),\n};\n\nconst dimensions = {\n    width: window.innerWidth,\n    height: 750,\n    margin: {\n        top: 80,\n        right: 100,\n        bottom: 140,\n        left: 100,\n    },\n};\n\nconst bounded = {\n    width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\n    height:\n        dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\n};\n\nexport { date, dimensions, bounded };\n","import { useEffect, useContext } from \"react\";\nimport * as d3 from \"d3\";\n\n// context\nimport { dataContext } from \"../../context/dataContext\";\n\n// constants\nimport { date } from \"../util/constants\";\n\nexport const MouseMove = props => {\n    const {\n        focus,\n        overlay,\n        linesStates,\n        selectedStates,\n\t\tchartParams,\n\t\tscales\n    } = props;\n\tconst { xScale, yScale } = scales;\n    const { dataStates } = useContext(dataContext);\n\n\tconst selectedYParam = chartParams.yParam.selected;\n\n    useEffect(() => {\n        if (overlay && selectedStates) {\n            overlay.on(\"mousemove\", mousemove);\n\n            let frozen = false;\n\n            function mousemove() {\n                let x0 = xScale.invert(d3.mouse(this)[0]);\n                const bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\n\n                Object.keys(selectedStates)\n                    .sort()\n                    .filter(s => selectedStates[s].selected === true)\n                    .forEach(state => {\n                        const dataEachState = dataStates.filter(\n                            d => d.state === state\n                        );\n                        const stateHTML = selectedStates[state].htmlFormat;\n                        const i = bisectDate(dataEachState, x0, 0);\n\n                        let dataEachStateRangeY = dataEachState[i]\n                            ? dataEachState[i][selectedYParam]\n                            : dataEachState[dataEachState.length - 1][\n                                  selectedYParam\n                              ];\n                        let dataEachStateRangeX = dataEachState[i]\n                            ? dataEachState[i].dayOfOutbreak\n                            : dataEachState[dataEachState.length - 1]\n                                  .dayOfOutbreak;\n                        let dataEachStateRangeDate = dataEachState[i]\n                            ? date.dateFormatter(dataEachState[i].date)\n                            : date.dateFormatter(\n                                  dataEachState[dataEachState.length - 1].date\n                              );\n                        let dataEachStateRangeCases = dataEachState[i]\n                            ? dataEachState[i].cases\n                            : dataEachState[dataEachState.length - 1].cases;\n\n                        const toggleFreeze = () => {\n                            frozen = !frozen;\n                        };\n\n                        overlay.on(\"click\", toggleFreeze);\n\n                        if (!frozen) {\n                            focus\n                                .select(`#circle-${stateHTML}`)\n                                .attr(\"cy\", yScale(dataEachStateRangeY))\n                                .attr(\"cx\", xScale(dataEachStateRangeX));\n\n                            focus\n                                .select(`#d-label-${stateHTML}`)\n                                .text(\n                                    `${\n                                        selectedStates[state].abbreviation\n                                    } => Day ${dataEachStateRangeX} (${dataEachStateRangeDate\n                                        .split(\"-\")\n                                        .slice(0, 2)\n                                        .join(\"-\")})`\n                                )\n                                .attr(\"fill\", selectedStates[state].color);\n\n                            focus\n                                .select(`#d-label-b-${stateHTML}`)\n                                .text(d =>\n                                    selectedYParam === \"casesPerThousand\"\n                                        ? `${dataEachStateRangeY.toFixed(\n                                              3\n                                          )} (${dataEachStateRangeCases.toLocaleString()} tot.)`\n\t\t\t\t\t\t\t\t\t\t: selectedYParam === \"casesPerThousand\"\n\t\t\t\t\t\t\t\t\t\t? `${dataEachStateRangeY.toLocaleString()} new (${dataEachStateRangeCases.toLocaleString()} tot.)`\n\t\t\t\t\t\t\t\t\t\t: `${dataEachStateRangeCases.toLocaleString()} tot.`\n                                )\n                                .attr(\"fill\", selectedStates[state].color);\n                        }\n                    });\n            }\n        }\n    }, [linesStates]);\n\n    return null;\n};\n","import React, { useState, useContext, useEffect, Fragment } from \"react\";\nimport * as d3 from \"d3\";\n\n// functions\nimport { MouseMove } from \"../../util/MouseMove\";\n\n// context\nimport { dataContext } from \"../../../context/dataContext\";\nimport { statesContext } from \"../../../context/statesContext\";\n\n// style\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nexport const Line = props => {\n    const { focus, overlay, selectedStates, bounds, chartParams, scales } = props;\n\tconst { xScale, yScale } = scales;\n\tconst selectedYParam = chartParams.yParam.selected;\n\n    // context\n    const { dataStates } = useContext(dataContext);\n    const { infoStates } = useContext(statesContext);\n\n    // style\n    const theme = useTheme();\n    const mqMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const mqLarge = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n    const [linesStates, setLinesStates] = useState([]);\n\n    const filterStates = statesObject => {\n        let filtered = Object.keys(statesObject)\n            .sort()\n            .filter(s => statesObject[s].selected === true);\n        return filtered;\n    };\n\n    useEffect(() => {\n        if (selectedStates && dataStates.length > 0) {\n\n            const lineGenerator = d3\n                .line()\n                .x(d => xScale(d.dayOfOutbreak))\n                .y(d => yScale(d[selectedYParam]));\n\n\t\t\tconst linesObject = {};\n\n            const filtered = filterStates(selectedStates);\n            filtered.forEach((state, i) => {\n                const dataEachState = dataStates.filter(d => d.state === state);\n\n                // Line label placement\n                const lastDayOfOutbreak =\n                    dataEachState[dataEachState.length - 1].dayOfOutbreak;\n                const lastCasesDatum =\n                    dataEachState[dataEachState.length - 1][selectedYParam];\n\n                linesObject[state] = {\n                    line: lineGenerator(dataEachState),\n                    lineLabelX: xScale(lastDayOfOutbreak) + 3,\n                    lineLabelY: yScale(lastCasesDatum),\n                };\n            });\n            setLinesStates(linesObject);\n        }\n    }, [dataStates, selectedStates, chartParams, selectedYParam, scales, theme]);\n\n    useEffect(() => {\n\t\tif (selectedStates) {\n            const filtered = filterStates(selectedStates);\n\n            filtered.forEach((state, i) => {\n                const stateHTML = infoStates[state].htmlFormat;\n                // for mousemove\n                let xShift = 0;\n                let yShift = 0;\n\n                if (i > 11) {\n                    if (mqLarge) {\n                        xShift = 180;\n                        yShift = 12 * 40;\n                    } else if (mqMedium) {\n                        xShift = 120;\n                        yShift = 12 * 40;\n                    }\n                }\n\n                focus\n                    .append(\"circle\")\n                    .attr(\"id\", `circle-${stateHTML}`)\n                    .attr(\"r\", 5)\n                    .attr(\"fill\", selectedStates[state].color)\n                    .attr(\"stroke\", theme.palette.text.primary);\n\n                if (mqMedium ? i < 24 : i < 12) {\n                    focus\n                        .append(\"text\")\n                        .attr(\"id\", `d-label-${stateHTML}`)\n                        .attr(\"x\", 10 + xShift)\n                        .attr(\"y\", d =>\n                            mqMedium ? 10 + i * 40 - yShift : 10 + i * 30\n                        )\n                        .style(\"font-size\", d => (mqLarge ? \".8rem\" : \".6rem\"))\n                        .style(\n                            \"font-family\",\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\"\n                        );\n                    focus\n                        .append(\"text\")\n                        .attr(\"id\", `d-label-b-${stateHTML}`)\n                        .attr(\"x\", 10 + xShift)\n                        .attr(\"y\", d =>\n                            mqMedium ? 25 + i * 40 - yShift : 25 + i * 30\n                        )\n                        .style(\"font-size\", d => (mqLarge ? \".8rem\" : \".6rem\"))\n                        .style(\n                            \"font-family\",\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\"\n                        );\n                }\n            });\n        }\n        return () => {\n            focus.selectAll(\"circle\").remove();\n            focus.selectAll(\"text\").remove();\n        };\n    }, [linesStates]);\n\n    return (\n        <>\n            <MouseMove\n                focus={focus}\n                overlay={overlay}\n                linesStates={linesStates}\n                bounds={bounds}\n\t\t\t\tchartParams={chartParams}\n                {...props}\n            />\n\t\t\t{dataStates.length > 0 && ( \n                Object.keys(linesStates)\n                    .sort()\n                    .map((state, i) => {\n                        const stateHTML = infoStates[state].htmlFormat;\n\n                        return (\n                            <Fragment key={state}>\n                                <g id={`bounds-render-${stateHTML}`}>\n                                    <path\n                                        fill=\"none\"\n                                        stroke={selectedStates[state].color}\n                                        strokeWidth={2.5}\n                                        strokeLinejoin=\"round\"\n                                        strokeLinecap=\"round\"\n                                        d={linesStates[state].line}\n                                    />\n                                    <text\n                                        id={`line-label-${stateHTML}`}\n                                        className=\"line-label\"\n                                        style={{\n                                            fill: theme.palette.text.primary,\n                                            fontSize: \"14px\",\n                                            fontFamily:\n                                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                                        }}\n                                        x={linesStates[state].lineLabelX}\n                                        y={linesStates[state].lineLabelY}\n                                    >\n                                        {selectedStates[state].abbreviation}\n                                    </text>\n                                </g>\n                            </Fragment>\n                        );\n                    })\n\t\t\t)}\n        </>\n    );\n};\n","import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n// import * as d3 from \"d3\";\nimport { select, max, scaleLinear, scaleLog, extent, axisLeft, axisBottom, formatPrefix } from \"d3\";\n\n// Components\nimport { Line } from \"./Line\";\n\n// Context\nimport { dataContext } from \"../../../context/dataContext\";\n\n// Styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\trootSVG: {\n\t\tdisplay: \"inline-block\",\n\t\tposition: \"relative\",\n\t\twidth: \"100%\",\n\t\tverticalAlign: \"middle\",\n\t\toverflow: \"hidden\",\n\t},\n\tbounds: {\n\t\twidth: props => props.width,\n\t\theight: props => props.height,\n\t},\n\ttitle: {\n\t\tfill: theme.palette.text.primary,\n\t\tfontSize: \"1.2rem\",\n\t},\n\taxes: {\n\t\tfill: theme.palette.text.primary,\n\t},\n\taxisLabel: {\n\t\tfill: theme.palette.text.primary,\n\t\tfontSize: \".8rem\",\n\t},\n\tfootnotes: {\n\t\tfill: theme.palette.text.primary,\n\t\tfontSize: \".6rem\",\n\t},\n}));\n\nconst ChartCovidCompare = props => {\n\tconst { wrapper, bounds, chartParams } = props;\n    const { wrapperWidth, wrapperHeight, margin } = wrapper;\n    const { width, height } = bounds;\n\tconst { dataStates } = useContext(dataContext);\n\t\n\tconst selectedYParam = chartParams.yParam.selected;\n\n\tconst [scales, setScales] = useState(null);\n\tconst classes = useStyles(props);\n\tconst theme = useTheme();\n\n    const yAxisRef = useRef(null);\n    const xAxisRef = useRef(null);\n    const svgRef = useRef(null);\n    const boundsRef = useRef(null);\n\n    const getFocus = () => {\n        return select(boundsRef.current)\n            .append(\"g\")\n            .attr(\"class\", \"focus\")\n            .style(\"display\", \"none\");\n    };\n\n    const focus = getFocus();\n\n    const getOverlay = () => {\n        return select(boundsRef.current)\n            .append(\"rect\")\n            .attr(\"class\", \"overlay\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"opacity\", \"0\")\n            .on(\"mouseover\", () => focus.style(\"display\", null));\n    };\n    const overlay = getOverlay();\n\n\tuseEffect(() => {\n        // Scales\n        const xScale = scaleLinear()\n            .domain(extent(dataStates, d => d.dayOfOutbreak))\n            .range([0, width]);\n\n\t\tconst yScale = chartParams.yParam.type === \"log\"\n\t\t\t? scaleLog()\n\t\t\t\t.domain([1, max(dataStates, d => d[selectedYParam])])\n\t\t\t\t.range([height, 0])\n\t\t\t: scaleLinear()\n\t\t\t\t.domain([0, max(dataStates, d => d[selectedYParam])])\n\t\t\t\t.range([height, 0]);\n\t\n\t\tsetScales({\n\t\t\txScale,\n\t\t\tyScale\n\t\t});\n\n        // Axes\n\t\tconst yAxisGenerator = chartParams.yParam.selected === \"cases\"\n\t\t\t? axisLeft().scale(yScale).ticks(5).tickFormat(t => t.toLocaleString())\n\t\t\t: axisLeft().scale(yScale);\n        const xAxisGenerator = axisBottom().scale(xScale);\n        select(xAxisRef.current).call(xAxisGenerator);\n        select(yAxisRef.current).call(yAxisGenerator);\n    }, [dataStates, chartParams, selectedYParam, height, width]);\n\n    return (\n        <>\n            <svg\n                id=\"line-app\"\n                height={wrapperHeight}\n                width={wrapperWidth}\n                ref={svgRef}\n                className={classes.rootSVG}\n                viewBox={`0 0 ${wrapperWidth} ${wrapperHeight}`}\n            >\n                <text\n                    className={classes.footnotes}\n                    textAnchor=\"left\"\n                    style={{\n                        fontFamily:\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                    }}\n                    transform={`translate(${margin.left}, ${\n                        height + margin.top + 60\n                    })`}\n                >\n                    *Data from The New York Times, based on reports from state\n                    and local health agencies.\n                </text>\n                <text\n                    className={classes.footnotes}\n                    textAnchor=\"left\"\n                    style={{\n                        fontFamily:\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                    }}\n                    transform={`translate(${margin.left}, ${\n                        height + margin.top + 80\n                    })`}\n                >\n                    ***2/27 is earliest possible 'Day 1,' since prior cases were\n                    isolated and may skew insights of \"community spread\"\n                </text>\n                <text\n                    className={classes.footnotes}\n                    textAnchor=\"left\"\n                    style={{\n                        fontFamily:\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                    }}\n                    transform={`translate(${margin.left}, ${\n                        height + margin.top + 100\n                    })`}\n                >\n                    †Legend will display up to 24 states (alphabetical order)\n                </text>\n                <g\n                    id=\"bounds\"\n                    transform={`translate(${margin.left}, ${margin.top})`}\n                    ref={boundsRef}\n                >\n                    <text\n                        className={classes.title}\n                        style={{\n                            fontFamily:\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                        }}\n                        textAnchor=\"middle\"\n                        x={width / 2}\n                        y={-margin.top * 0.5}\n                    >\n                        COVID-19 US State Comparison\n                    </text>\n                    <text\n                        className={classes.axisLabel}\n                        style={{\n                            fontFamily:\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                        }}\n                        textAnchor=\"middle\"\n                        x={width / 2}\n                        y={height + 40}\n                    >\n                        Day of Outbreak\n                    </text>\n                    <text\n                        className={classes.axisLabel}\n                        style={{\n                            fontFamily:\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\n                        }}\n                        textAnchor=\"middle\"\n                        transform={`rotate(-90)`}\n                        x={-height / 2}\n                        y={-45}\n                    >\n                        {selectedYParam}\n                    </text>\n                    <g\n                        ref={yAxisRef}\n                        id=\"y-axis\"\n                        style={{\n                            fontFamily:\n\t\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\",\n\t\t\t\t\t\t\tcolor: theme.palette.text.primary,\n                        }}\n                    />\n                    <g\n                        ref={xAxisRef}\n                        id=\"x-axis\"\n                        transform={`translate(0,${height})`}\n                        style={{\n                            fontFamily:\n\t\t\t\t\t\t\t\t\"ralewaymedium, Helvetica, Arial, sans-serif\",\n\t\t\t\t\t\t\tcolor: theme.palette.text.primary,\n                        }}\n                    />\n\t\t\t\t\t{scales &&\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\tfocus={focus}\n\t\t\t\t\t\toverlay={overlay}\n\t\t\t\t\t\tscales={scales}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n                </g>\n            </svg>\n        </>\n    );\n};\n\nChartCovidCompare.propTypes = {\n    wrapper: PropTypes.object,\n    bounds: PropTypes.object,\n};\n\nexport default ChartCovidCompare;\n","// REUSABLE COMPONENT\n\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const FilterValues = forwardRef((props, ref) => {\n    const { filterOptions, handleSelectedFilter, handleMenu } = props;\n\n    const handleMenuClick = newFilter => {\n        handleMenu();\n        handleSelectedFilter(newFilter);\n    };\n\n    return (\n        <>\n            {filterOptions.map(o => {\n                return (\n                    <MenuItem\n                        key={o.id}\n                        id={o.id}\n                        ref={ref}\n                        onClick={() => handleMenuClick(o)}\n                    >\n                        {o.name}\n                    </MenuItem>\n                );\n            })}\n        </>\n    );\n});\n\nFilterValues.propTypes = {\n    filterOptions: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired, // unique ID; html format\n            name: PropTypes.string, // user-facing name of filter\n            type: PropTypes.string, // user-facing parameter being filtered (eg. \"GDP\")\n            chartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"realGDP2019\")\n            n: PropTypes.number.isRequired, // number of cases (ie. rows or documents) to filter\n            sort: PropTypes.string.isRequired, // \"ascending or descending\"\n        })\n    ),\n};\n","// WRAPPER COMPONENT (FilterValues)\n\nimport React, { useState } from \"react\";\nimport { FilterValues } from \"../components/FilterValues\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterCases = props => {\n    const { nStates, handleSelectedFilter } = props;\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleMenu = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    const filterOptions = [\n        {\n            id: \"cases-high\",\n            name: `Top ${nStates} (total)`,\n            type: \"Cases\",\n            chartParam: \"latestCaseCount\",\n            sort: \"descending\",\n            n: nStates,\n        },\n        {\n            id: \"cases-low\",\n            name: `Bottom ${nStates} (total)`,\n            type: \"Cases\",\n            chartParam: \"latestCaseCount\",\n            sort: \"ascending\",\n            n: nStates,\n        },\n        {\n            id: \"cases-per-1000-high\",\n            name: `Top ${nStates} (per 1000)`,\n            type: \"Cases\",\n            chartParam: \"latestCaseCountPerThou\",\n            sort: \"descending\",\n            n: nStates,\n        },\n        {\n            id: \"cases-per-1000-low\",\n            name: `Bottom ${nStates} (per 1000)`,\n            type: \"Cases\",\n            chartParam: \"latestCaseCountPerThou\",\n            sort: \"ascending\",\n            n: nStates,\n        },\n    ];\n\n    return (\n        <>\n            <Button id=\"cases-btn\" onClick={handleMenu}>\n                Filter Cases\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={anchorEl ? Boolean(anchorEl.id === \"cases-btn\") : false}\n                onClose={handleMenu}\n            >\n                <FilterValues\n                    filterOptions={filterOptions}\n                    handleSelectedFilter={handleSelectedFilter}\n                    handleMenu={handleMenu}\n                />\n            </Menu>\n        </>\n    );\n};\n","// WRAPPER COMPONENT (FilterValues)\n\nimport React, { useState } from \"react\";\nimport { FilterValues } from \"../components/FilterValues\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterPopulation = props => {\n    const { nStates, handleSelectedFilter } = props;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleMenu = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    const filterOptions = [\n        {\n            id: \"pop-high\",\n            name: `Top ${nStates} (pop. total)`,\n            type: \"Pop.\",\n            chartParam: \"population\",\n            sort: \"descending\",\n            n: nStates,\n        },\n        {\n            id: \"pop-low\",\n            name: `Bottom ${nStates} (pop. total)`,\n            type: \"Pop.\",\n            chartParam: \"population\",\n            sort: \"ascending\",\n            n: nStates,\n        },\n        {\n            id: \"pop-density-high\",\n            name: `Top ${nStates} (pop. density)`,\n            type: \"Pop.\",\n            chartParam: \"populationDensity\",\n            sort: \"descending\",\n            n: nStates,\n        },\n        {\n            id: \"pop-density-low\",\n            name: `Bottom ${nStates} (pop. density)`,\n            type: \"Pop.\",\n            chartParam: \"populationDensity\",\n            sort: \"ascending\",\n            n: nStates,\n        },\n    ];\n\n    return (\n        <>\n            <Button id=\"population-btn\" onClick={handleMenu}>\n                Filter Population\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={\n                    anchorEl ? Boolean(anchorEl.id === \"population-btn\") : false\n                }\n                onClose={handleMenu}\n            >\n                <FilterValues\n                    filterOptions={filterOptions}\n                    handleSelectedFilter={handleSelectedFilter}\n                    handleMenu={handleMenu}\n                />\n            </Menu>\n        </>\n    );\n};\n","// REUSABLE COMPONENT\n\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { MenuItem } from \"@material-ui/core\";\n\nexport const FilterCategories = forwardRef((props, ref) => {\n    const { filterOptions, handleSelectedFilter, handleMenu } = props;\n\n    const handleMenuClick = newFilter => {\n        handleMenu();\n        handleSelectedFilter(newFilter);\n    };\n\n    return (\n        <>\n            {filterOptions.map(o => {\n                return (\n                    <MenuItem\n                        key={o.id}\n                        id={o.id}\n                        ref={ref}\n                        onClick={() => handleMenuClick(o)}\n                    >\n                        {o.name}\n                    </MenuItem>\n                );\n            })}\n        </>\n    );\n});\n\nFilterCategories.propTypes = {\n    filterOptions: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired, // unique ID; html format\n            name: PropTypes.string, // user-facing name of filter\n            type: PropTypes.string, // user-facing parameter being filtered (eg. \"Region\")\n            chartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"region\")\n        })\n    ),\n};\n","// WRAPPER COMPONENT (FilterCategories)\n\nimport React, { useState } from \"react\";\n\n// components\nimport { FilterCategories } from \"../components/FilterCategories\";\n\nimport { Menu, Button } from \"@material-ui/core\";\n\nexport const FilterRegion = props => {\n    const { handleSelectedFilter } = props;\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleMenu = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    const filterOptions = [\n        {\n            id: \"northeast\",\n            name: \"Northeast\",\n            type: \"Region\",\n            chartParam: \"region\",\n        },\n        {\n            id: \"midwest\",\n            name: \"Midwest\",\n            type: \"Region\",\n            chartParam: \"region\",\n        },\n        { id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\" },\n        { id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\" },\n    ];\n\n    return (\n        <>\n            <Button id=\"region-btn\" onClick={handleMenu}>\n                Filter Region\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\n                onClose={handleMenu}\n            >\n                <FilterCategories\n                    filterOptions={filterOptions}\n                    handleSelectedFilter={handleSelectedFilter}\n                    handleMenu={handleMenu}\n                />\n            </Menu>\n        </>\n    );\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\n\n// components\nimport { FilterCases } from \"./FilterCases\";\nimport { FilterPopulation } from \"./FilterPopulation\";\nimport { FilterRegion } from \"./FilterRegion\";\n\n// context\nimport { statesContext } from \"../../../context/statesContext\";\n\n// styles\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    rootContainer: {\n        maxWidth: 550,\n        minWidth: 175,\n        justifyContent: \"space-evenly\",\n        padding: 0,\n        margin: 0,\n    },\n    tab: {\n        opacity: 0.7,\n    },\n    menuItem: {\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1,\n        },\n    },\n}));\n\nexport const BatchSelect = props => {\n    const { selectedStates, setSelectedStates } = props;\n\n    // ref and context\n    const { infoStates } = useContext(statesContext);\n\n    // assign\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedFilter, setSelectedFilter] = useState(null);\n\n    // style\n    const theme = useTheme();\n    const classes = useStyles();\n    const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const handleSelectedFilter = newSelectedFilter => {\n        setSelectedFilter(newSelectedFilter);\n        setAnchorEl(null);\n    };\n\n    const handleFilterCategories = (newFilter, info) => {\n        const filtered = Object.keys(info).filter(\n            s => info[s][newFilter.chartParam] === newFilter.name\n        );\n\n        let newSelection = {};\n        Object.keys(info).forEach(s => {\n            if (filtered.includes(s)) {\n                newSelection[s] = { ...info[s], selected: true };\n            } else {\n                newSelection[s] = { ...info[s], selected: false };\n            }\n        });\n\n        return newSelection;\n    };\n\n    const handleFilterValues = (newFilter, info) => {\n        const n = newFilter.n;\n        let filtered;\n\n        filtered = Object.keys(info)\n            .sort((a, b) =>\n                newFilter.sort === \"descending\"\n                    ? info[b][newFilter.chartParam] -\n                      info[a][newFilter.chartParam]\n                    : info[a][newFilter.chartParam] -\n                      info[b][newFilter.chartParam]\n            )\n            .slice(0, n);\n\n        let newSelection = {};\n        Object.keys(info).forEach(s => {\n            if (filtered.includes(s)) {\n                newSelection[s] = { ...info[s], selected: true };\n            } else {\n                newSelection[s] = { ...info[s], selected: false };\n            }\n        });\n\n        return newSelection;\n    };\n\n    useEffect(() => {\n        if (selectedFilter) {\n            const newSelection = selectedFilter.n\n                ? handleFilterValues(selectedFilter, infoStates)\n                : handleFilterCategories(selectedFilter, infoStates);\n            setSelectedStates(newSelection);\n        }\n    }, [selectedFilter]);\n\n    return (\n        <Grid\n            container\n            className={classes.rootContainer}\n            style={\n                mqSmall\n                    ? { flexDirection: \"column\", alignItems: \"center\" }\n                    : { flexDirection: \"row\" }\n            }\n        >\n            <FilterCases\n                aria-controls=\"cases-btn\"\n                aria-haspopup=\"true\"\n                className={classes.tab}\n                nStates={12}\n                selectedStates={selectedStates}\n                setSelectedStates={setSelectedStates}\n                handleSelectedFilter={handleSelectedFilter}\n            />\n            <FilterPopulation\n                aria-controls=\"population-btn\"\n                aria-haspopup=\"true\"\n                className={classes.tab}\n                nStates={12}\n                selectedStates={selectedStates}\n                setSelectedStates={setSelectedStates}\n                handleSelectedFilter={handleSelectedFilter}\n            />\n            <FilterRegion\n                aria-controls=\"region-btn\"\n                aria-haspopup=\"true\"\n                className={classes.tab}\n                selectedStates={selectedStates}\n                setSelectedStates={setSelectedStates}\n                handleSelectedFilter={handleSelectedFilter}\n            />\n        </Grid>\n    );\n};\n","import React from \"react\";\n\n// components\nimport { SectionTitle } from \"../../sharedComponents/SectionTitle\";\n\n// styles\nimport {\n    IconButton,\n    FormControlLabel,\n    FormGroup,\n    Checkbox,\n    Divider,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    sectionTitleTypography: {\n        color: theme.palette.text.primary,\n        fontWeight: 700,\n    },\n    drawerBody: {\n        alignText: \"left\",\n        paddingLeft: theme.spacing(3),\n    },\n    selectAllButton: {\n        color: \"green\",\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    deselectAllButton: {\n        color: \"red\",\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    stateLabelSelected: {\n        fontSize: \".9rem\",\n    },\n    stateLabelNotSelected: {\n        color: \"gray\",\n        opacity: 0.7,\n        fontSize: \".9rem\",\n    },\n}));\n\nexport const Dashboard = props => {\n    const {\n        selectedStates,\n        handleSelectedStates,\n        handleSelectAllStates,\n        handleDeselectAllStates,\n    } = props;\n\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div>\n            <SectionTitle\n                divider\n                classes={{ typography: classes.sectionTitleTypography }}\n            >\n                Selections\n            </SectionTitle>\n            <FormGroup className={classes.drawerBody}>\n                <FormControlLabel\n                    id=\"select-all\"\n                    label=\"Select All\"\n                    name=\"Select All\"\n                    onClick={handleSelectAllStates}\n                    control={\n                        <IconButton\n                            id=\"selector-all\"\n                            name=\"select-all\"\n                            className={classes.selectAllButton}\n                        >\n                            <CheckIcon />\n                        </IconButton>\n                    }\n                />\n                <FormControlLabel\n                    id=\"deselect-all\"\n                    label=\"Deselect All\"\n                    name=\"Deselect All\"\n                    onClick={handleDeselectAllStates}\n                    control={\n                        <IconButton\n                            id=\"deselector-all\"\n                            name=\"deselect-all\"\n                            className={classes.deselectAllButton}\n                        >\n                            <ClearIcon />\n                        </IconButton>\n                    }\n                />\n                <Divider className={classes.divider} />\n                {selectedStates ? (\n                    Object.keys(selectedStates)\n                        .sort()\n                        .filter(s => selectedStates[s].selected === true)\n                        .map((state, i) => {\n                            return (\n                                <FormControlLabel\n                                    key={i}\n                                    id={selectedStates[state].htmlFormat}\n                                    name={state}\n                                    checked={selectedStates[state].selected}\n                                    onChange={handleSelectedStates}\n                                    classes={{\n                                        label: classes.stateLabelSelected,\n                                    }}\n                                    control={\n                                        <Checkbox\n                                            name={state}\n                                            className={\n                                                classes.stateLabelSelected\n                                            }\n                                            style={{\n                                                color:\n                                                    selectedStates[state].color,\n                                            }}\n                                        />\n                                    }\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\n                                />\n                            );\n                        })\n                ) : (\n                    <div />\n                )}\n                <Divider className={classes.divider} />\n                {selectedStates ? (\n                    Object.keys(selectedStates)\n                        .sort()\n                        .filter(s => selectedStates[s].selected === false)\n                        .map((state, i) => {\n                            return (\n                                <FormControlLabel\n                                    key={i}\n                                    id={selectedStates[state].htmlFormat}\n                                    name={state}\n                                    checked={selectedStates[state].selected}\n                                    onChange={handleSelectedStates}\n                                    classes={{\n                                        label: classes.stateLabelNotSelected,\n                                    }}\n                                    control={\n                                        <Checkbox\n                                            name={state}\n                                            className={\n                                                classes.stateLabelNotSelected\n                                            }\n                                        />\n                                    }\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\n                                />\n                            );\n                        })\n                ) : (\n                    <div />\n                )}\n            </FormGroup>\n        </div>\n    );\n};\n","import React from \"react\";\n\n// styles\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: 200,\n\t},\n\tselectInput: {\n\t\tcolor: theme.palette.text.primary\n\t}\n}))\n\nconst ParamPicker = ({ chartParams, setChartParams }) => {\n\tconst classes = useStyles();\n\n    return (\n        <FormControl className={classes.formControl}>\n\t\t\t<Select\n\t\t\t\tid=\"parameter-picker-menu\"\n\t\t\t\tautoWidth={true}\n                value={chartParams.yParam.selected}\n\t\t\t\tonChange={e => setChartParams(prevState => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tyParam: {\n\t\t\t\t\t\t...prevState.yParam,\n\t\t\t\t\t\ttype: e.target.value === \"cases\" ? \"log\" : \"linear\",\n\t\t\t\t\t\tselected: e.target.value \n\t\t\t\t\t}\n\t\t\t\t}))}\n\t\t\t\tlabel=\"y-axis\"\n\t\t\t\tclassName={classes.selectInput}\n            >\n                <MenuItem id=\"y-param-cases-100\" value=\"casesPerThousand\">\n                    Cases/1000\n                </MenuItem>\n\t\t\t\t<MenuItem id=\"y-param-cases-total\" value=\"cases\">\n                    Total cases (log scale)\n                </MenuItem>\n                <MenuItem id=\"y-param-new-cases\" value=\"newCases\">\n                    New cases\n                </MenuItem>\n            </Select>\n        </FormControl>\n    );\n};\n\nexport { ParamPicker };\n","import React, { useState } from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    IconButton,\n    ClickAwayListener,\n    Drawer,\n    Divider,\n    Menu,\n    Tooltip,\n    useMediaQuery,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\n// components\nimport { BatchSelect, Dashboard, ParamPicker } from \"../pickers\";\nimport { Settings } from \"../../Settings\";\nimport { ChartPicker } from \"../../sharedComponents/ChartPicker\";\n\n// styles\nimport { Button, MenuList } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n    },\n    appBar: {\n        backgroundColor: theme.palette.background.dark,\n        color: theme.palette.text.primary,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        color: theme.palette.text.primary,\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n        },\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 1,\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: theme.palette.background.default,\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n        backgroundColor: theme.palette.background.default,\n    },\n    tab: {\n        opacity: 0.7,\n    },\n    menuItem: {\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1,\n        },\n\t},\n\tnavbarPickers: {\n\t\twidth: 750,\n\t\tdisplay: \"flex\",\n\t\talignContent: \"baseline\",\n\t\tjustifyContent: \"space-between\",\n\t}\n}));\n\nexport const Navbar = props => {\n    const [open, setOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const theme = useTheme();\n    const classes = useStyles();\n    const mqSmall = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleOptions = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    const handleClickAway = e => {\n        if (e.x > drawerWidth && e.y > 70 && open) {\n            setOpen(false);\n        }\n    };\n\n    const handleFilterMenu = e => {\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"relative\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        onClick={handleDrawerOpen}\n                        className={clsx(\n                            classes.menuButton,\n                            open && classes.hide\n                        )}\n                        disableRipple\n                    >\n                        <MenuIcon className={classes.menuButton} />\n                    </IconButton>\n                    {mqSmall ? (\n                        <>\n                            <Tooltip title=\"Chart filters\">\n                                <IconButton\n                                    id=\"filters-btn-cc\"\n                                    onClick={handleFilterMenu}\n                                    className={classes.menuButton}\n                                >\n                                    <AssessmentIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Menu\n                                anchorEl={anchorEl}\n                                open={\n                                    anchorEl\n                                        ? Boolean(\n                                              anchorEl.id === \"filters-btn-cc\"\n                                          )\n                                        : false\n                                }\n                                onClose={handleFilterMenu}\n                                style={{ textAlign: \"center\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ParamPicker\n\t\t\t\t\t\t\t\t\tchartParams={props.chartParams}\n\t\t\t\t\t\t\t\t\tsetChartParams={props.setChartParams}\n\t\t\t\t\t\t\t\t/>\n                                <BatchSelect\n                                    handleFilterMenu={handleFilterMenu}\n                                    {...props}\n                                />\n                            </Menu>\n                        </>\n                    ) : (\n                        <span\n\t\t\t\t\t\t\tclassName={classes.navbarPickers}\n                        >\n\t\t\t\t\t\t\t<ParamPicker\n\t\t\t\t\t\t\t\tchartParams={props.chartParams}\n\t\t\t\t\t\t\t\tsetChartParams={props.setChartParams}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<BatchSelect {...props} />\n                        </span>\n                    )}\n\n                    <span style={{ marginLeft: \"auto\" }}>\n                        <Button id=\"options-btn-cc\" onClick={handleOptions}>\n                            Options\n                        </Button>\n                        <Menu\n                            anchorEl={anchorEl}\n                            open={\n                                anchorEl\n                                    ? Boolean(anchorEl.id === \"options-btn-cc\")\n                                    : false\n                            }\n                            onClose={handleOptions}\n                        >\n                            <MenuList\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                <ChartPicker />\n                                <Settings />\n                            </MenuList>\n                        </Menu>\n                    </span>\n                </Toolbar>\n            </AppBar>\n            <ClickAwayListener onClickAway={handleClickAway}>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton\n                            color=\"inherit\"\n                            edge=\"end\"\n                            onClick={handleDrawerClose}\n                            style={{\n                                color: theme.palette.primary.contrastText,\n                            }}\n                        >\n                            <ChevronLeftIcon />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <Dashboard {...props} />\n                </Drawer>\n            </ClickAwayListener>\n        </div>\n    );\n};\n","// Chart params: define params for drawing axes and chart\nexport const CHART_PARAMS = {\n    chartType: \"line\",\n    toTimestamp: null,\n    multiple: true,\n    normalize: true,\n    xParam: {\n        // x-axis\n        type: \"linear\",\n        format: \"number\",\n        selected: \"dayOfOutbreak\",\n        alt1: null,\n        options: [\"dayOfOutbreak\"],\n    },\n    yParam: {\n        // y-axis\n        type: \"linear\",\n        format: \"number\",\n        selected: \"casesPerThousand\",\n        alt1: \"deathsPerThousand\",\n        options: [\"casesPerThousand\", \"cases\", \"deathsPerThousand\", \"deaths\"],\n    },\n    zParam: {\n        // z-axis (3rd dimension) (eg. size)\n        type: null,\n        format: null,\n        selected: null,\n        options: [null],\n    },\n    cParam: {\n        // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\n        type: \"categorical\",\n        selected: \"region\",\n        options: [\"region\", \"division\", \"governor\"],\n    },\n    tParam: {\n        // time axis (4th dimension) (ie. for animated charts)\n        type: null,\n        selected: null,\n        options: [null],\n    },\n};\n\n// Label params:\nexport const LABEL_PARAMS = {\n    chartTitle: \"COVID-19 State Comparison\",\n    xLabel: \"Cases per Thousand\",\n    yLabel: \"Deaths per Thousand\",\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\n// components\nimport ChartCovidCompare from \"./chart/ChartCovidCompare\";\nimport { Navbar } from \"./interface/Navbar\";\n\n// params\nimport { CHART_PARAMS } from \"./appParams\";\n\n// context\nimport { statesContext } from \"../../context/statesContext\";\n\n// styles\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst AppCovidCompare = ({ wrapper, bounds }) => {\n    const { infoStates } = useContext(statesContext);\n\n    const [selectedStates, setSelectedStates] = useState(null);\n\tconst [chartParams, setChartParams] = useState(CHART_PARAMS);\n\n    const mqOrientPortrait = useMediaQuery(\"(orientation: portrait)\");\n\n    const useStyles = makeStyles(theme => ({\n        container: {\n            padding: 0,\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: () => (mqOrientPortrait ? \"row\" : \"column\"),\n            justifyContent: \"center\",\n        },\n        item: {\n            width: \"100%\",\n            flexBasis: \"100%\",\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleSelectedStates = e => {\n        setSelectedStates({\n            ...selectedStates,\n            [e.target.name]: {\n                ...selectedStates[e.target.name],\n                selected: e.target.checked,\n            },\n        });\n    };\n\n    const handleSelectAllStates = e => {\n        const revisedStates = {};\n        Object.keys(selectedStates).forEach((s, i) => {\n            revisedStates[s] = {\n                ...selectedStates[s],\n                selected: true,\n            };\n        });\n        setSelectedStates(revisedStates);\n    };\n\n    const handleDeselectAllStates = e => {\n        const revisedStates = {};\n        Object.keys(selectedStates).forEach((s, i) => {\n            revisedStates[s] = {\n                ...selectedStates[s],\n                selected: false,\n            };\n        });\n        setSelectedStates(revisedStates);\n    };\n\n    useEffect(() => {\n        if (infoStates) {\n            setSelectedStates(infoStates);\n        }\n    }, [infoStates]);\n\n    return (\n        <Grid className={classes.container}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid item className={classes.item}>\n                    <Navbar\n                        style={{ width: \"100%\" }}\n\t\t\t\t\t\tchartParams={chartParams}\n\t\t\t\t\t\tsetChartParams={setChartParams}\n                        selectedStates={selectedStates}\n                        setSelectedStates={setSelectedStates}\n                        handleSelectedStates={handleSelectedStates}\n                        handleSelectAllStates={handleSelectAllStates}\n                        handleDeselectAllStates={handleDeselectAllStates}\n                    />\n                    <ChartCovidCompare\n                        chartParams={chartParams}\n                        selectedStates={selectedStates}\n                        setSelectedStates={setSelectedStates}\n                        wrapper={wrapper}\n                        bounds={bounds}\n                    />\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Grid>\n    );\n};\n\nexport default AppCovidCompare;","export const wrapper = {\n    wrapperWidth: window.innerWidth * 0.9,\n    wrapperHeight: window.innerHeight * 0.9,\n    margin: {\n        top: 80,\n        right: window.innerWidth * 0.1,\n        bottom: 130,\n        left: window.innerWidth * 0.1,\n    },\n};\n\nexport const bounds = {\n    width: wrapper.wrapperWidth - wrapper.margin.left - wrapper.margin.right,\n    height: wrapper.wrapperHeight - wrapper.margin.top - wrapper.margin.bottom,\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst lightTheme = {\n    palette: {\n        type: \"light\",\n        primary: {\n            main: \"#03a9f4\",\n            contrastText: \"#29293d\",\n        },\n        secondary: {\n            main: \"#ff9800\",\n        },\n        background: {\n            default: \"#fff\",\n            paper: \"#fff\",\n            light: \"#fff\",\n            dark: \"#fff\",\n        },\n        text: {\n            primary: \"#29293d\",\n        },\n    },\n};\n\nconst darkTheme = {\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#4db6ac\",\n        },\n        secondary: {\n            main: \"#ffa07a\",\n        },\n        background: {\n            default: \"#29293d\",\n            paper: \"#29293d\",\n            light: \"#493f5e\",\n            dark: \"#000018\",\n        },\n        text: {\n            primary: \"#fff\",\n        },\n    },\n};\n\nexport const theme = createMuiTheme({\n    typography: {\n        fontFamily: [\"ralewaymedium\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\n            \",\"\n        ),\n    },\n    overrides: {\n        MuiInputBase: {\n            root: {\n                color: \"#fff\",\n                paddingLeft: 10,\n            },\n        },\n    },\n});\n\nexport const getTheme = (theme, darkMode) => {\n    if (darkMode) {\n        return createMuiTheme({\n            ...theme,\n            palette: {\n                ...darkTheme.palette,\n            },\n        });\n    } else {\n        return createMuiTheme({\n            ...theme,\n            palette: {\n                ...lightTheme.palette,\n            },\n        });\n    }\n};\n","export const COLORS = [\n    \"#1b70fc\",\n    \"#faff16\",\n    \"#d50527\",\n    \"#158940\",\n    \"#f898fd\",\n    \"#24c9d7\",\n    \"#cb9b64\",\n    \"#866888\",\n    \"#22e67a\",\n    \"#e509ae\",\n    \"#9dabfa\",\n    \"#437e8a\",\n    \"#b21bff\",\n    \"#ff7b91\",\n    \"#94aa05\",\n    \"#ac5906\",\n    \"#82a68d\",\n    \"#fe6616\",\n    \"#7a7352\",\n    \"#f9bc0f\",\n    \"#b65d66\",\n    \"#07a2e6\",\n    \"#c091ae\",\n    \"#8a91a7\",\n    \"#88fc07\",\n    \"#ea42fe\",\n    \"#9e8010\",\n    \"#10b437\",\n    \"#c281fe\",\n    \"#f92b75\",\n    \"#07c99d\",\n    \"#a946aa\",\n    \"#bfd544\",\n    \"#16977e\",\n    \"#ff6ac8\",\n    \"#a88178\",\n    \"#5776a9\",\n    \"#678007\",\n    \"#fa9316\",\n    \"#85c070\",\n    \"#6aa2a9\",\n    \"#989e5d\",\n    \"#fe9169\",\n    \"#cd714a\",\n    \"#6ed014\",\n    \"#c5639c\",\n    \"#c23271\",\n    \"#698ffc\",\n    \"#678275\",\n    \"#c5a121\",\n    \"#a978ba\",\n    \"#ee534e\",\n    \"#d24506\",\n    \"#59c3fa\",\n    \"#ca7b0a\",\n    \"#6f7385\",\n    \"#9a634a\",\n    \"#48aa6f\",\n    \"#ad9ad0\",\n    \"#d7908c\",\n    \"#6a8a53\",\n    \"#8c46fc\",\n    \"#8f5ab8\",\n    \"#fd1105\",\n    \"#7ea7cf\",\n    \"#d77cd1\",\n    \"#a9804b\",\n    \"#0688b4\",\n    \"#6a9f3e\",\n    \"#ee8fba\",\n    \"#a67389\",\n    \"#9e8cfe\",\n    \"#bd443c\",\n    \"#6d63ff\",\n    \"#d110d5\",\n    \"#798cc3\",\n    \"#df5f83\",\n    \"#b1b853\",\n    \"#bb59d8\",\n    \"#1d960c\",\n    \"#867ba8\",\n    \"#18acc9\",\n    \"#25b3a7\",\n    \"#f3db1d\",\n    \"#938c6d\",\n    \"#936a24\",\n    \"#a964fb\",\n    \"#92e460\",\n    \"#a05787\",\n    \"#9c87a0\",\n    \"#20c773\",\n    \"#8b696d\",\n    \"#78762d\",\n    \"#e154c6\",\n    \"#40835f\",\n    \"#d73656\",\n    \"#1afd5c\",\n    \"#c4f546\",\n    \"#3d88d8\",\n    \"#bd3896\",\n    \"#1397a3\",\n    \"#f940a5\",\n    \"#66aeff\",\n    \"#d097e7\",\n    \"#fe6ef9\",\n    \"#d86507\",\n    \"#8b900a\",\n    \"#d47270\",\n    \"#e8ac48\",\n    \"#cf7c97\",\n    \"#cebb11\",\n    \"#718a90\",\n    \"#e78139\",\n    \"#ff7463\",\n    \"#bea1fd\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\n// data\nimport USStates from \"./data/us-states.csv\";\nimport STATE_INFO from \"./data/stateInfo.json\";\n\n// util\nimport { cleanStateInfo, importCSV } from \"./components/util\";\n\n// components\nimport AppGapminder from \"./components/appGapminder/AppGapminder\";\nimport AppCovidCompare from \"./components/appCovidCompare/AppCovidCompare\";\n\n// context\nimport { dataContext } from \"./context/dataContext\";\nimport { statesContext } from \"./context/statesContext\";\nimport { ThemeContext } from \"./context/ThemeContext\";\n\n// styles\nimport { wrapper, bounds } from \"./styles/dimensions\";\nimport { theme, getTheme } from \"./styles/theme\";\nimport { COLORS } from \"./styles/colors\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nfunction App() {\n    const [dataStates, setDataStates] = useState([]);\n    const [infoStates, setInfoStates] = useState(null);\n    const [darkMode, setDarkMode] = useState(true);\n\n\tuseEffect(() => {\n\t\tcleanStateInfo(dataStates, STATE_INFO, COLORS)\n\t\t\t.then(res => setInfoStates(res));\n\t}, [dataStates]);\n\t\t\n\tuseEffect(() => {\n\t\timportCSV(USStates, STATE_INFO)\n\t\t\t.then(res => setDataStates(res));\n    }, []);\n\n    return (\n        <>\n            <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\n                <ThemeProvider theme={getTheme(theme, darkMode)}>\n                    <CssBaseline />\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <dataContext.Provider\n                            value={{ dataStates, setDataStates }}\n                        >\n                            <statesContext.Provider\n                                value={{ infoStates, setInfoStates }}\n                            >\n                                <Route\n                                    path=\"/line-app\"\n                                    className=\"line-app\"\n                                    component={() => (\n                                        <AppCovidCompare\n                                            wrapper={wrapper}\n                                            bounds={bounds}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/gapminder-app\"\n                                    className=\"gapminder-app\"\n                                    render={() => <AppGapminder />}\n                                />\n                                <Switch>\n                                    <Redirect\n                                        exact\n                                        from=\"/\"\n                                        to=\"/gapminder-app\"\n                                    />\n                                </Switch>\n                            </statesContext.Provider>\n                        </dataContext.Provider>\n                    </MuiPickersUtilsProvider>\n                </ThemeProvider>\n            </ThemeContext.Provider>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}