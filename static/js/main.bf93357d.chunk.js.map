{"version":3,"sources":["data/us-states.csv","components/util/constants.js","components/Footnotes.js","components/appGapminder/appParams.js","context/dataContext.js","context/statesContext.js","context/selectionContext.js","components/appGapminder/chart/CirclesGapminder.js","components/appGapminder/interface/OpacitySlider.js","components/appGapminder/interface/DayCounterSlider.js","components/appGapminder/chart/ChartGapminder.js","components/appGapminder/pickers/FilterRegion.js","components/appGapminder/pickers/FilterGovernor.js","components/appGapminder/pickers/FilterPopulation.js","components/appGapminder/pickers/FilterGdp.js","components/appGapminder/pickers/FilterBatch.js","components/appGapminder/FilterDashboard.js","components/appGapminder/pickers/ParamPicker.js","components/appGapminder/interface/Navbar.js","components/appGapminder/gapminderData.js","components/appGapminder/AppGapminder.js","components/util/MouseMove.js","components/appCovidCompare/Line.js","components/appCovidCompare/ChartUSCompare.js","components/appCovidCompare/components/FilterValues.js","components/appCovidCompare/pickers/FilterCases.js","components/appCovidCompare/pickers/FilterPopulation.js","components/appCovidCompare/components/FilterCategories.js","components/appCovidCompare/pickers/FilterRegion.js","components/appCovidCompare/BatchSelect.js","components/appCovidCompare/Dashboard.js","components/appCovidCompare/FilterBarCovidCompare.js","components/util/ResponsiveDesign.js","components/appCovidCompare/AppCovidCompare.js","styles/theme.js","styles/colors.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","date","dateFormatter","d3","dateParser","dimensions","top","right","bottom","left","window","innerWidth","margin","useStyles","makeStyles","theme","footnoteText","color","palette","text","primary","textAlign","padding","fontSize","marginLeft","marginRight","saveButton","secondary","float","themeButton","Footnotes","props","darkMode","setDarkMode","classes","useTheme","path","location","pathname","replace","Tooltip","title","placement","IconButton","onClick","saveSvgAsPng","document","querySelector","backgroundColor","background","default","encoderOptions","fonts","url","format","className","wrapper","wrapperWidth","wrapperHeight","innerHeight","marginTop","marginBottom","bounded","width","height","chartParams","chartType","toTimestamp","multiple","normalize","xParam","output","type","selected","alt1","options","yParam","zParam","cParam","tParam","dataContext","React","createContext","statesContext","selectionContext","CirclesGapminder","data","dayCounter","selector","scales","opacityNotSel","xScale","yScale","colorScale","infoStates","useContext","selectedCircles","setSelectedCircles","circlesRef","useRef","circle","stroke","opacity","circleSelected","strokeWidth","bisectDay","valueAt","values","day","i","length","a","b","t","useEffect","current","selectAll","map","d","state","region","join","sort","attr","htmlFormat","includes","call","append","casesPerThousand","toFixed","cases","toLocaleString","deathsPerThousand","deaths","on","mouseOverCircle","style","mouseOutCircle","notSelected","filter","s","ref","OpacitySlider","setOpacityNotSel","Typography","variant","Slider","id","value","valueLabelDisplay","step","min","max","onChange","e","newVal","DayCounterSlider","setDayCounter","axes","legend","fontWeight","cParamCategories","division","governor","ChartGapminder","dataStates","useState","setScales","boundsRef","yAxisRef","xAxisRef","legendRef","domain","range","yAxisGenerator","scale","xAxisGenerator","axis","enter","transition","duration","update","exit","remove","renderChart","transform","Grid","container","justifyContent","item","flexGrow","regionOptions","name","chartParam","FilterRegion","handleFilter","anchorEl","setAnchorEl","MenuItem","dense","currentTarget","Menu","open","Boolean","onClose","o","key","FilterGovernor","FilterPopulation","nStates","populationOptions","n","FilterGdp","gdpOptions","button","chipContainer","listStyle","main","chip","spacing","FilterBatch","filters","handleDeleteFilter","handleMenu","handleFilters","currSelection","forEach","newFilter","filtered","Object","keys","handleFilterCategories","slice","handleFilterValues","prevState","all","Button","MenuList","Paper","component","f","Chip","size","label","onDelete","dashboard","alignItems","dashboardTitle","contrastText","dashboardDivider","filterBatch","FilterDashboard","setFilters","setNStates","handleChange","target","FormGroup","FormControlLabel","control","TextField","InputProps","inputProps","defaultValue","Divider","deletedFilter","newFilterList","checked","Checkbox","filterSelector","minWidth","filterMenuItem","ParamPicker","handleSelector","p","FormControl","InputLabel","Select","root","display","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","tab","menuItem","Navbar","setOpen","handleDrawer","AppBar","position","clsx","Toolbar","edge","disableRipple","href","ClickAwayListener","onClickAway","x","y","Drawer","anchor","paper","gapminderData","stateInfo","newData","eachState","push","navbar","AppGapminder","setData","setSelector","then","res","Provider","param","MouseMove","focus","overlay","linesStates","selectedStates","wrapperDim","boundedDim","dayOfOutbreak","x0","invert","this","bisectDate","index","dataEachState","stateHTML","dataEachStateRangeY","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","frozen","select","abbreviation","split","Line","labelParams","mqMedium","useMediaQuery","breakpoints","up","mqLarge","setLinesStates","lineGenerator","linesObject","lastDayOfOutbreak","lastCasesPerThousand","lockdownDay","lockdown","lockdownDayDatum","line","lineLabelX","lineLabelY","lockdownMarkerX","lockdownMarkerY","xShift","yShift","fill","strokeLinejoin","strokeLinecap","r","cx","cy","fontFamily","axisLabel","footnotes","ChartUSCompare","svgRef","textAnchor","FilterValues","filterOptions","handleSelectedFilter","FilterCases","FilterCategories","BatchSelect","setSelectedStates","selectedFilter","setSelectedFilter","Date","newSelectedFilter","newSelection","info","aria-controls","aria-haspopup","Dashboard","handleSelectedStates","handleSelectAllStates","handleDeselectAllStates","FilterBarCovidCompare","ResponsiveDesign","setWrapperDim","setBoundedDim","chartTitle","xLabel","yLabel","AppCovidCompare","setInfoStates","utils","DateFnsUtils","ThemeProvider","revisedStates","createMuiTheme","contrastThreshold","typography","overrides","MuiFormControlLabel","textColor","MuiButton","MuiBase","MuiInputBase","maxWidth","paddingLeft","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","daySelected","dayDisabled","getTheme","colors","App","setDataStates","startsWith","lockdownEnd","nested","entries","lastIndex","latestCaseCount","latestCaseCountPerThou","population","USStates","fips","parseInt","stateData","mortalityRate","console","log","CssBaseline","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf93357d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/us-states.7975c4ed.csv\";","import * as d3 from \"d3\";\r\n\r\nconst date = {\r\n  dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\r\n  dateParser: d3.timeParse(\"%m-%d-%y\"),\r\n};\r\n\r\nconst dimensions = {\r\n  width: window.innerWidth,\r\n  height: 750,\r\n  margin: {\r\n    top: 80,\r\n    right: 100,\r\n    bottom: 140,\r\n    left: 100,\r\n  },\r\n};\r\n\r\nconst bounded = {\r\n  width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\r\n  height: dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\r\n};\r\n\r\nexport { date, dimensions, bounded };\r\n","import React from 'react';\r\nimport { saveSvgAsPng } from 'save-svg-as-png';\r\n\r\n// constants\r\nimport { dimensions } from './util/constants';\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport '../styles/styles.css';\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst { margin } = dimensions;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footnoteText: {\r\n        color: theme.palette.text.primary,\r\n        textAlign: 'left',\r\n        padding: 0,\r\n        fontSize: 10,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right\r\n    },\r\n    saveButton: {\r\n\t\tcolor: theme.palette.text.secondary,\r\n        float: 'left',\r\n        marginLeft: margin.left,\r\n        padding: 0\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.text.secondary,\r\n        float: 'left',\r\n        marginLeft: 20,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nconst Footnotes = (props) => {\r\n\tconst {darkMode, setDarkMode} = props;\r\n    const classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst path = window.location.pathname.replace('/','');\r\n\r\n    const saveImage = () => {\r\n        saveSvgAsPng(document.querySelector(`#${path}`), \"covid-19_chart.png\", {\r\n\t\t\tbackgroundColor: theme.palette.background.default,\r\n\t\t\tencoderOptions: 1,\r\n\t\t\tfonts: [\r\n\t\t\t\t{\r\n\t\t\t\t\turl: \"../../styles/ralewaymedium/raleway-medium-webfont.woff\",\r\n\t\t\t\t\tformat: \"application/font-woff\",\r\n\t\t\t\t\ttext: \"@font-face {font-family: 'ralewaymedium'; src: url('./ralewaymedium/raleway-medium-webfont.woff2') format('woff2'), url('./ralewaymedium/raleway-medium-webfont.woff') format('woff'); font-weight: normal;font-style: normal;}\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n        });\r\n\t};\r\n\r\n    return (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Save chart as image\" placement=\"right\">\r\n\t\t\t\t<IconButton onClick={saveImage} className={classes.saveButton}>\r\n\t\t\t\t\t<SaveIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\r\n\t\t\t\t<IconButton onClick={() => setDarkMode(!darkMode)} className={classes.themeButton}>\r\n\t\t\t\t\t<Brightness7Icon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t</>\r\n    )\r\n};\r\n\r\nexport { Footnotes };","export const wrapper = {\r\n\twrapperWidth: window.innerWidth * .8,\r\n\twrapperHeight: window.innerHeight * .8,\r\n\tmarginTop: 30,\r\n\tmarginRight: 30,\r\n\tmarginBottom: 40,\r\n\tmarginLeft: 60\r\n  };\r\n  \r\nexport const bounded = {\r\n\twidth: wrapper.wrapperWidth - wrapper.marginLeft - wrapper.marginRight,\r\n\theight: wrapper.wrapperHeight - wrapper.marginTop - wrapper.marginBottom,\r\n};\r\n\r\n// Chart params: define params for drawing axes and chart\r\nexport const chartParams = {\r\n\tchartType: \"bubble\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\toutput: 'x-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'cases',\r\n\t\toptions: [\r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\toutput: 'y-axis',\r\n\t\ttype: 'linear',\r\n\t\tformat: 'none',\r\n\t\tselected: 'deathsPerThousand',\r\n\t\talt1: 'deaths',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t], \r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\toutput: 'circle-area',\r\n\t\ttype: \"linear\",\r\n\t\tformat: \"none\",\r\n\t\tselected: \"population\",\r\n\t\toptions: [ \r\n\t\t\t\"population\",\r\n\t\t\t\"populationDensity\",\r\n\t\t\t\"gdp\",\r\n\t\t\t\"none\"\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\toutput: 'color-grouping',\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\toutput: 'time',\r\n\t\ttype: 'time',\r\n\t\tselected: \"dayOfOutbreak\",\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t\t\"date\"\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nexport const labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};","import React from 'react';\r\n\r\nconst dataContext = React.createContext();\r\n\r\nexport { dataContext };","import React from 'react';\r\n\r\nconst statesContext = React.createContext();\r\n\r\nexport { statesContext };","import React from 'react';\r\n\r\nexport const selectionContext = React.createContext();\r\n","import React, { useEffect, useContext, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\nimport { selectionContext } from '../../../context/selectionContext';\r\n\r\n// style \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const CirclesGapminder = (props) => {\r\n\tconst { data, dayCounter, selector, scales, opacityNotSel } = props;\r\n\tconst { xParam, yParam, zParam, cParam } = selector;\r\n\tconst { xScale, yScale, colorScale } = scales;\r\n\r\n\t// context and ref\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst { selectedCircles, setSelectedCircles } = useContext(selectionContext); \r\n\tconst circlesRef = useRef(null);\r\n\r\n\t// styles\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tcircle: {\r\n\t\t\tstroke: 'none',\r\n\t\t\topacity: opacityNotSel\r\n\t\t},\r\n\t\tcircleSelected: {\r\n\t\t\tstroke: \"#e91e63\",\r\n\t\t\tstrokeWidth: 2,\r\n\t\t\topacity: .8,\r\n\t\t}\r\n\t}));\r\n\tconst classes = useStyles();\r\n\r\n\tconst bisectDay = d3.bisector(([d]) => d).left;\r\n\r\n\tfunction dataAt(day) {\r\n\t\treturn data.map(d => ({\r\n\t\t\tstate: d.state,\r\n\t\t\tregion: d.region,\r\n\t\t\t[xParam.selected]: valueAt(d[xParam.selected], day),\r\n\t\t\t[yParam.selected]: valueAt(d[yParam.selected], day)\r\n\t\t}));\r\n\t};\r\n\r\n\tfunction valueAt(values, day) {\r\n\t\tconst i = bisectDay(values, day, 0, values.length - 1);\r\n\t\tconst a = values[i];\r\n\r\n\t\tif (i > 0) {\r\n\t\t\tconst b = values[i - 1];\r\n\t\t\tconst t = (day - a[0]) / (b[0] - a[0]);\r\n\t\t\treturn a[1] * (1 - t) + b[1] * t;\r\n\t\t}\r\n\t\treturn a[1];\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst circle = d3.select(circlesRef.current).selectAll('circle')\r\n\t\t\t.data(dataAt(dayCounter), d => d)\r\n\t\t\t.join('circle')\r\n\t\t\t\t.sort((a,b) => d3.descending(a[zParam], b[zParam]))\r\n\t\t\t\t.attr('r', d => zParam.selected === \"population\" \r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 1000000 \r\n\t\t\t\t\t: zParam.selected === \"populationDensity\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100\r\n\t\t\t\t\t: zParam.selected === \"gdp\"\r\n\t\t\t\t\t? infoStates[d.state][zParam.selected] / 100000\r\n\t\t\t\t\t: 5\r\n\t\t\t\t)\r\n\t\t\t\t.attr('cx', d => xScale(d[xParam.selected]))\r\n\t\t\t\t.attr('cy', d => yScale(d[yParam.selected]))\r\n\t\t\t\t.attr('fill', d => colorScale(infoStates[d.state][cParam.selected]))\r\n\t\t\t\t.attr('id', d => `circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t.attr('class', d =>\r\n\t\t\t\t\tselectedCircles.selected.includes(d.state) \r\n\t\t\t\t\t\t? classes.circleSelected\r\n\t\t\t\t\t\t: classes.circle\r\n\t\t\t\t)\r\n\t\t\t\t.call(circle => circle\r\n\t\t\t\t\t.append('title')\r\n\t\t\t\t\t.text(d => [\r\n\t\t\t\t\t\td.state,\r\n\t\t\t\t\t\t`Day ${dayCounter}`,\r\n\t\t\t\t\t\txParam.selected === \"casesPerThousand\"\r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: xParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\",\r\n\t\t\t\t\t\tyParam.selected === \"casesPerThousand\" \r\n\t\t\t\t\t\t\t? `Cases/1000: ${d.casesPerThousand && d.casesPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"cases\"\r\n\t\t\t\t\t\t\t? `Cases: ${d.cases && d.cases.toLocaleString()}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deathsPerThousand\"\r\n\t\t\t\t\t\t\t? `Deaths/1000: ${d.deathsPerThousand && d.deathsPerThousand.toFixed(2)}`\r\n\t\t\t\t\t\t\t: yParam.selected === \"deaths\"\r\n\t\t\t\t\t\t\t? `Deaths: ${d.deaths && d.deaths.toLocaleString()}`\r\n\t\t\t\t\t\t\t: \"error\"\r\n\t\t\t\t\t\t].join(\"\\n\")\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\tcircle.on('mouseover', d => {\r\n\t\t\t\tconst mouseOverCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\t\t\t\r\n\t\t\t\tif (opacityNotSel !== 0 || selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tmouseOverCircle\r\n\t\t\t\t\t\t.attr('cursor', 'pointer')\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('mouseout', d => { \r\n\t\t\t\tconst mouseOutCircle = d3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\tif (selectedCircles.notSelected.includes(d.state)) {\r\n\t\t\t\t\tmouseOutCircle\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcircle.on('click', d => { \r\n\t\t\t\tif (selectedCircles.selected.includes(d.state)) {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: selectedCircles.selected.filter(s => s !== d.state),\r\n\t\t\t\t\t\tnotSelected: [...selectedCircles.notSelected, d.state]\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", opacityNotSel)\r\n\t\t\t\t\t\t.style(\"stroke\", \"none\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetSelectedCircles({\r\n\t\t\t\t\t\t...selectedCircles,\r\n\t\t\t\t\t\tselected: [...selectedCircles.selected, d.state],\r\n\t\t\t\t\t\tnotSelected: selectedCircles.notSelected.filter(s => s !== d.state)\r\n\t\t\t\t\t})\r\n\t\t\t\t\td3.select(`#circle-${infoStates[d.state].htmlFormat}`)\r\n\t\t\t\t\t\t.style(\"opacity\", .9)\r\n\t\t\t\t\t\t.style(\"stroke\", \"#e91e63\")\r\n\t\t\t\t\t\t.style(\"stroke-width\", 2)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t}, [dayCounter, selector, scales, selectedCircles, opacityNotSel]);\r\n\r\n\treturn (\r\n\t\t<>\t\t\r\n\t\t\t<g ref={circlesRef} />\r\n\t\t</>\r\n\t)\r\n};","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const OpacitySlider = (props) => {\r\n\tconst { opacityNotSel, setOpacityNotSel } = props;\r\n\r\n\treturn (\r\n\t\t<>\t\r\n\t\t\t<Typography variant=\"caption\">Non-selected opacity</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"opacity-slider\"\r\n\t\t\t\tvalue={opacityNotSel}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={.1}\r\n\t\t\t\tmin={0}\r\n\t\t\t\tmax={1}\r\n\t\t\t\tonChange={(e, newVal) => setOpacityNotSel(newVal)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React from 'react';\r\nimport { Slider, Typography } from \"@material-ui/core\";\r\n\r\nexport const DayCounterSlider = (props) => {\r\n\tconst { dayCounter, setDayCounter } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Typography variant=\"caption\">Day of Outbreak</Typography>\r\n\t\t\t<Slider \r\n\t\t\t\tid=\"day-counter-slider\"\r\n\t\t\t\tvalue={dayCounter}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tstep={1}\r\n\t\t\t\tmin={1}\r\n\t\t\t\tmax={60}\r\n\t\t\t\tonChange={(e, newVal) => setDayCounter(newVal)}\r\n\t\t\t/>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// context\r\nimport { dataContext } from \"../../../context/dataContext\";\r\n\r\n// components\r\nimport { CirclesGapminder } from \"./CirclesGapminder\";\r\nimport { OpacitySlider } from \"../interface/OpacitySlider\";\r\nimport { DayCounterSlider } from \"../interface/DayCounterSlider\";\r\n\r\n// style\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    axes: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    legend: {\r\n        fontWeight: 700,\r\n        fontSize: \".8rem\",\r\n    },\r\n}));\r\n\r\nconst cParamCategories = {\r\n    region: [\"Northeast\", \"Midwest\", \"South\", \"West\"],\r\n    division: [\r\n        \"New England\",\r\n        \"Mid-Atlantic\",\r\n        \"East North Central\",\r\n        \"West North Central\",\r\n        \"South Atlantic\",\r\n        \"East South Central\",\r\n        \"West South Central\",\r\n        \"Mountain\",\r\n        \"Pacific\",\r\n    ],\r\n    governor: [\"Republican\", \"Democrat\", \"n/a\"],\r\n};\r\n\r\nexport const ChartGapminder = props => {\r\n    const { data, selector, wrapper, bounded } = props;\r\n    const { xParam, yParam, cParam } = selector;\r\n    const {\r\n        wrapperWidth,\r\n        wrapperHeight,\r\n        marginTop,\r\n        marginBottom,\r\n        marginLeft,\r\n        marginRight,\r\n    } = wrapper;\r\n\tconst { width, height } = bounded;\r\n\r\n    const { dataStates } = useContext(dataContext);\r\n    const [scales, setScales] = useState(null);\r\n\tconst [dayCounter, setDayCounter] = useState(1);\r\n\tconst [opacityNotSel, setOpacityNotSel] = useState(0.6);\r\n\r\n    const classes = useStyles();\r\n\r\n    const boundsRef = useRef(null);\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const legendRef = useRef(null);\r\n\r\n    const renderChart = () => {\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[xParam.selected]))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d[yParam.selected]))\r\n            .range([height, 0]);\r\n        let colorScale;\r\n\r\n        if (cParam.selected === \"region\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.region)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"division\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.division)\r\n                .range(d3.schemePaired);\r\n        } else if (cParam.selected === \"governor\") {\r\n            colorScale = d3\r\n                .scaleOrdinal()\r\n                .domain(cParamCategories.governor)\r\n                .range([\"#B61515\", \"#2E84D5\", \"#009C72\"]);\r\n        }\r\n\r\n        setScales({\r\n            xScale: xScale,\r\n            yScale: yScale,\r\n            colorScale: colorScale,\r\n        });\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n\r\n        const xAxis = d3\r\n            .select(xAxisRef.current)\r\n            .call(xAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"xLabel\"));\r\n\r\n        xAxis\r\n            .selectAll(\".xLabel\")\r\n            .data(xParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", width)\r\n            .attr(\"y\", 40)\r\n            .attr(\"class\", \"xLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(xParam.selected);\r\n\r\n        const yAxis = d3\r\n            .select(yAxisRef.current)\r\n            .call(yAxisGenerator)\r\n            .call(axis => axis.append(\"text\").attr(\"class\", \"yLabel\"));\r\n\r\n        yAxis\r\n            .selectAll(\".yLabel\")\r\n            .data(yParam.selected, d => d)\r\n            .join(\"text\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", -40)\r\n            .attr(\"class\", \"yLabel\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"fill\", \"white\")\r\n            .text(yParam.selected);\r\n\r\n        // legend\r\n        d3.select(legendRef.current)\r\n            .selectAll(\"text\")\r\n            .data(cParamCategories[cParam.selected], d => d)\r\n            .join(\r\n                enter =>\r\n                    enter\r\n                        .append(\"text\")\r\n                        .attr(\"x\", \"1rem\")\r\n                        .attr(\"y\", -1000)\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(enter =>\r\n                            enter\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", (d, i) => -height + 10 + 20 * i)\r\n                        ),\r\n                update =>\r\n                    update\r\n                        .append(\"text\")\r\n                        .attr(\"fill\", d => colorScale(d))\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .attr(\"y\", 60)\r\n                        .text(d => d)\r\n                        .call(update => update.transition().duration(750)),\r\n                exit =>\r\n                    exit\r\n                        .attr(\"fill\", \"gray\")\r\n                        .attr(\"text-anchor\", \"start\")\r\n                        .text(d => d)\r\n                        .call(exit =>\r\n                            exit\r\n                                .transition()\r\n                                .duration(750)\r\n                                .attr(\"y\", 0)\r\n                                .remove()\r\n                        )\r\n            );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dataStates) {\r\n            renderChart();\r\n        }\r\n    }, [dataStates, selector]);\r\n\r\n    useEffect(() => {\r\n\t\td3.select(\".counter-display\")\r\n\t\t\t.join(\"text\")\r\n\t\t\t.text(`Day ${dayCounter}`);\r\n    }, [dayCounter]);\r\n\r\n    return (\r\n        <>\t\t\t\r\n            <svg\r\n                id=\"gapminder\"\r\n                className=\"wrapper\"\r\n                height={wrapperHeight}\r\n                width={wrapperWidth}\r\n            >\r\n                <g\r\n                    ref={boundsRef}\r\n                    className=\"bounds\"\r\n                    transform={`translate(${marginLeft}, ${marginTop})`}\r\n                >\r\n                    <g\r\n                        ref={xAxisRef}\r\n                        transform={`translate(0, ${height})`}\r\n                        className={classes.axes}\r\n                    />\r\n                    <g ref={yAxisRef} className={classes.axes} />\r\n                    <g\r\n                        ref={legendRef}\r\n                        transform={`translate(0, ${height})`}\r\n                        className={classes.legend}\r\n                    />\r\n                    {data && scales ? (\r\n                        <CirclesGapminder\r\n                            {...props}\r\n                            scales={scales}\r\n                            dayCounter={dayCounter}\r\n                            opacityNotSel={opacityNotSel}\r\n                        />\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </g>\r\n            </svg>\r\n            <Grid container style={{ marginLeft: marginLeft, width: width, justifyContent: \"space-evenly\" }}>\r\n                <Grid item style={{marginRight: 32, flexGrow: 2}}>\r\n\t\t\t\t\t<DayCounterSlider \r\n\t\t\t\t\t\tdayCounter={dayCounter}\r\n\t\t\t\t\t\tsetDayCounter={setDayCounter}\r\n\t\t\t\t\t/>\r\n                </Grid>\r\n\t\t\t\t<Grid item style={{flexGrow: 1}}>\r\n\t\t\t\t\t<OpacitySlider \r\n\t\t\t\t\t\topacityNotSel={opacityNotSel} \r\n\t\t\t\t\t\tsetOpacityNotSel={setOpacityNotSel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n];\r\n\r\nexport const FilterRegion = (props) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\tsetAnchorEl(e.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"region-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tRegion\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\r\n\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n};","import React, { useState, useContext } from 'react'\r\n\r\n// context\r\nimport { statesContext } from '../../../context/statesContext';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst regionOptions = [\r\n\t{id: \"democrat\", name: \"Democrat\", type: \"Governor\", chartParam: \"governor\"},\r\n\t{id: \"republican\", name: \"Republican\", type: \"Governor\", chartParam: \"governor\"},\r\n];\r\n\r\n\r\nexport const FilterGovernor = (props) => {\r\n\tconst { handleFilter } = props;\r\n\r\n\tconst { infoStates } = useContext(statesContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\tsetAnchorEl(e.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"governor-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tGov. party\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"governor-btn\") : false}\r\n\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t>\r\n\t\t\t\t{infoStates \r\n\t\t\t\t\t&& regionOptions.map(o => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t)\r\n};","import React, { useState } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem, Button } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterPopulation = (props) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\tsetAnchorEl(e.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst populationOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<MenuItem id=\"pop-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\tPopulation\r\n\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"pop-btn\") : false}\r\n\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t>\r\n\t\t\t\t{populationOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id}\r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\n\r\n// style\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nexport const FilterGdp = (props) => {\r\n\tconst { handleFilter, nStates } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst handleMenu = (e) => {\r\n\t\tsetAnchorEl(e.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst gdpOptions = [\r\n\t\t{id: \"gdp-high\", name: `Top ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"gdp-low\", name: `Bottom ${nStates} (2019 GDP)`, type: \"GDP\", chartParam: \"gdp\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<MenuItem id=\"gdp-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tGDP\r\n\t\t\t\t<ChevronRightIcon style={{marginLeft: \"auto\"}}/>\r\n\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"gdp-btn\") : false}\r\n\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t>\r\n\t\t\t\t{gdpOptions.map(o => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\tkey={o.id} \r\n\t\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\t\tonClick={() => handleFilter(o)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{o.name}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Menu>\r\n\t\t</MenuItem>\r\n\t);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../../context/selectionContext\";\r\nimport { statesContext } from \"../../../context/statesContext\";\r\n\r\n// components\r\nimport { FilterRegion } from \"./FilterRegion\";\r\nimport { FilterGovernor } from \"./FilterGovernor\";\r\nimport { FilterPopulation } from \"./FilterPopulation\";\r\nimport { FilterGdp } from \"./FilterGdp\";\r\n\r\n// style\r\nimport { Typography, Menu, Button, Chip, Paper, MenuList } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    chipContainer: {\r\n        listStyle: \"none\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    chip: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        padding: theme.spacing(0.5),\r\n        margin: theme.spacing(0.5),\r\n        fontSize: \".7rem\",\r\n    },\r\n}));\r\n\r\nexport const FilterBatch = props => {\r\n    const {\r\n        filters,\r\n        handleDeleteFilter,\r\n        handleFilter,\r\n        nStates,\r\n    } = props;\r\n    const { setSelectedCircles } = useContext(\r\n        selectionContext\r\n    );\r\n    const { infoStates } = useContext(statesContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = useStyles();\r\n\r\n    const handleMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    const handleFilterCategories = newFilter => {\r\n        const filtered = Object.keys(infoStates).filter(\r\n            s => infoStates[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilterValues = newFilter => {\r\n        const n = newFilter.n;\r\n        const filtered = Object.keys(infoStates)\r\n            .sort((a, b) =>\r\n                newFilter.sort === \"descending\"\r\n                    ? infoStates[b][newFilter.chartParam] -\r\n                      infoStates[a][newFilter.chartParam]\r\n                    : infoStates[a][newFilter.chartParam] -\r\n                      infoStates[b][newFilter.chartParam]\r\n            )\r\n            .slice(0, n);\r\n\r\n        setAnchorEl(null);\r\n        return filtered;\r\n    };\r\n\r\n    const handleFilters = () => {\r\n        let selected = [];\r\n        let currSelection = [];\r\n        filters.forEach((d, i) => {\r\n            if (d.type === \"Region\" || d.type === \"Governor\") {\r\n                currSelection = handleFilterCategories(d);\r\n            } else if (d.type === \"Pop.\" || d.type === \"GDP\") {\r\n                currSelection = handleFilterValues(d);\r\n            }\r\n\r\n            selected =\r\n                selected.length < 1\r\n                    ? currSelection\r\n                    : currSelection.filter(s => selected.includes(s));\r\n        });\r\n\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: selected,\r\n            notSelected: prevState.all.filter(s => !selected.includes(s)),\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        filters.length > 0\r\n            ? handleFilters()\r\n            : setSelectedCircles(prevState => ({\r\n                  ...prevState,\r\n                  selected: [],\r\n                  notSelected: prevState.all,\r\n              }));\r\n    }, [filters]);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                id=\"select-filter\"\r\n                onClick={handleMenu}\r\n                className={classes.button}\r\n            >\r\n                New Filter\r\n                <ChevronRightIcon style={{ marginLeft: \"auto\" }} />\r\n            </Button>\r\n\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={\r\n                    anchorEl ? Boolean(anchorEl.id === \"select-filter\") : false\r\n                }\r\n                onClose={handleMenu}\r\n            >\r\n\t\t\t\t<MenuList>\r\n\t\t\t\t\t<FilterRegion handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterGovernor handleFilter={handleFilter} />\r\n\t\t\t\t\t<FilterPopulation handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t\t<FilterGdp handleFilter={handleFilter} nStates={nStates} />\r\n\t\t\t\t</MenuList>\r\n            </Menu>\r\n\r\n            <Paper component=\"ul\" className={classes.chipContainer}>\r\n                {filters.length > 0 ? (\r\n                    filters.map(f => {\r\n                        return (\r\n                            <li key={f.id}>\r\n                                <Chip\r\n                                    size=\"small\"\r\n                                    className={classes.chip}\r\n                                    label={f.name}\r\n                                    onDelete={() => handleDeleteFilter(f)}\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Typography>No filters</Typography>\r\n                )}\r\n            </Paper>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n\tDivider,\r\n\tTextField,\r\n} from \"@material-ui/core\";\r\n\r\n// components\r\nimport {FilterBatch} from \"./pickers/FilterBatch\";\r\n\r\n// context\r\nimport { selectionContext } from \"../../context/selectionContext\";\r\n\r\n// styles\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dashboard: {\r\n        alignItems: \"left\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.text.primary,\r\n\t},\r\n\tdashboardTitle: {\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n\t\tfontWeight: 700,\r\n\t\tfontSize: \"1.2rem\" \r\n\t},\r\n\tdashboardDivider: {\r\n\t\tbackgroundColor: theme.palette.primary.contrastText,\r\n\t\tmarginBottom: \".2rem\",\r\n\t},\r\n\tfilterBatch: {\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tcolor: theme.palette.text.primary,\r\n\t},\r\n}));\r\n\r\nexport const FilterDashboard = (props) => {\r\n    const { selectedCircles, setSelectedCircles } = useContext(selectionContext);\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\r\n\tconst [filters, setFilters] = useState([]);\r\n\tconst [nStates, setNStates] = useState(12);\r\n\r\n    const handleChange = e => {\r\n        const state = e.target.name;\r\n\r\n        if (selectedCircles.selected.includes(state)) {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: selectedCircles.selected.filter(d => d !== state),\r\n                notSelected: [...selectedCircles.notSelected, state],\r\n            });\r\n        } else {\r\n            setSelectedCircles({\r\n                ...selectedCircles,\r\n                selected: [...selectedCircles.selected, state],\r\n                notSelected: selectedCircles.notSelected.filter(\r\n                    d => d !== state\r\n                ),\r\n            });\r\n        }\r\n\t};\r\n\r\n\tconst handleFilter = (newFilter) => {\r\n\t\tif (filters.length > 0) {\r\n\t\t\tsetFilters(prevState => [...prevState, newFilter])\r\n\t\t} else (\r\n\t\t\tsetFilters([newFilter])\r\n\t\t)\t\r\n\t};\r\n\t\r\n\tconst handleDeleteFilter = deletedFilter => {\r\n        const newFilterList = filters.filter(f => f.id !== deletedFilter.id);\r\n        setFilters(newFilterList);\r\n    };\r\n\r\n    const handleDeselectAll = () => {\r\n\t\tsetFilters([]);\r\n        setSelectedCircles(prevState => ({\r\n            ...prevState,\r\n            selected: [],\r\n            notSelected: prevState.all,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormGroup className={classes.dashboard}>\r\n\r\n\t\t\t<FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAll}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                /><br />\r\n\r\n\t\t\t\t<TextField \r\n\t\t\t\t\tid=\"n-states\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tlabel=\"Filter n states\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tinputProps: {\r\n\t\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\t\tmax: 50\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdefaultValue={nStates}\r\n\t\t\t\t\tonChange={(e) => setNStates(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<Typography className={classes.dashboardTitle}>\r\n\t\t\t\t\tFilters\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Divider className={classes.dashboardDivider} />\r\n\t\t\t\t<FilterBatch \r\n\t\t\t\t\tclassName={classes.filterBatch}\r\n\t\t\t\t\tnStates={nStates}\r\n\t\t\t\t\tsetNStates={setNStates}\r\n\t\t\t\t\tfilters={filters}\r\n\t\t\t\t\tsetFilters={setFilters}\r\n\t\t\t\t\thandleDeleteFilter={handleDeleteFilter}\r\n\t\t\t\t\thandleFilter={handleFilter}\r\n\t\t\t\t/>\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.selected ? (\r\n                    selectedCircles.selected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n\r\n                <Typography className={classes.dashboardTitle}>\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider className={classes.dashboardDivider} />\r\n                {selectedCircles.notSelected ? (\r\n                    selectedCircles.notSelected.sort().map((state, i) => {\r\n                        return (\r\n                            <FormControlLabel\r\n                                key={i}\r\n                                name={state}\r\n                                checked={selectedCircles.selected.includes(\r\n                                    state\r\n                                )}\r\n                                onChange={handleChange}\r\n                                control={<Checkbox name={state} style={{color: theme.palette.primary.contrastText}} />}\r\n                                label={state}\r\n                            />\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n// style\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    filterSelector: {\r\n        minWidth: 150,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n        marginRight: 30,\r\n    },\r\n    filterMenuItem: {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: \".8rem\",\r\n    },\r\n}));\r\n\r\nexport const ParamPicker = ({ selector, handleSelector }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(selector).map((p) => {\r\n                return (\r\n                    <FormControl key={selector[p].output}>\r\n                        <InputLabel>{selector[p].output}</InputLabel>\r\n                        <Select\r\n                            name={p}\r\n                            value={selector[p].selected}\r\n                            onChange={handleSelector}\r\n                            className={classes.filterSelector}\r\n                        >\r\n                            {selector[p].options.map((o) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={o}\r\n                                        value={o}\r\n                                        className={classes.filterMenuItem}\r\n                                    >\r\n                                        {o}\r\n                                    </MenuItem>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { FilterDashboard } from \"../FilterDashboard\";\r\nimport { ParamPicker } from \"../pickers/ParamPicker\";\r\n\r\n// style\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Drawer,\r\n\tClickAwayListener,\r\n\tTooltip,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\n \r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    appBar: {\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.primary.contrastText,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n        toolbar: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport const Navbar = (props) => {\r\n    const { data, selector, handleSelector } = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const handleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClickAway = (e) => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        disableRipple\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n                    <ParamPicker\r\n                        data={data}\r\n                        selector={selector}\r\n                        handleSelector={handleSelector}\r\n                        className={classes.filters}\r\n                    />\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/gapminder\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={open}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={classes.drawerHeader}\r\n                            style={{\r\n                                backgroundColor: theme.palette.primary.main,\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                edge=\"end\"\r\n                                onClick={handleDrawer}\r\n                                style={{\r\n                                    color: theme.palette.primary.contrastText,\r\n                                }}\r\n                            >\r\n                                <ChevronLeftIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                        <FilterDashboard data={data} />\r\n                    </Drawer>\r\n                </ClickAwayListener>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n","export const gapminderData = async (data, stateInfo, chartParams) => {\r\n\tconst { xParam, yParam, tParam } = chartParams;\r\n\tlet newData = [];\r\n\tObject.keys(stateInfo).forEach((state,i) => {\r\n\t\tlet eachState = {\r\n\t\t\tstate: state,\r\n\t\t\tregion: stateInfo[state].region,\r\n\t\t\t[tParam.selected]: [],\r\n\t\t\t[xParam.selected]: [],\r\n\t\t\t[xParam.alt1]: [],\r\n\t\t\t[yParam.selected]: [],\r\n\t\t\t[yParam.alt1]: [],\r\n\t\t};\r\n\r\n\t\tconst filtered = data.filter(d => d.state === state);\r\n\t\tfiltered.forEach((d,i) => {\r\n\t\t\teachState[tParam.selected].push([d[tParam.selected], d[tParam.selected]]);\r\n\t\t\teachState[xParam.selected].push([d[tParam.selected], d[xParam.selected]]);\r\n\t\t\teachState[yParam.selected].push([d[tParam.selected], d[yParam.selected]]);\r\n\t\t\teachState[xParam.alt1].push([d[tParam.selected], d[xParam.alt1]]);\r\n\t\t\teachState[yParam.alt1].push([d[tParam.selected], d[yParam.alt1]]);\r\n\t\t});\r\n\t\tnewData.push(eachState);\r\n\t});\r\n\r\n\treturn newData;\r\n};","import React, { useState, useEffect, useContext } from 'react';\r\n\r\n// params\r\nimport { wrapper, bounded, chartParams, labelParams } from \"./appParams\";\r\n\r\n// components\r\nimport { ChartGapminder } from './chart/ChartGapminder'; \r\nimport { Navbar } from './interface/Navbar';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { selectionContext } from '../../context/selectionContext';\r\n\r\n// data\r\nimport stateInfo from '../../data/stateInfo.json';\r\nimport { gapminderData } from './gapminderData';\r\n\r\n// style\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tnavbar: {\r\n\t\twidth: bounded.width,\r\n\t\tmarginLeft: wrapper.marginLeft,\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'flex-start',\r\n\t}\r\n}))\r\n\r\nexport const AppGapminder = () => {\r\n\tconst {dataStates} = useContext(dataContext);\r\n\tconst [data, setData] = useState(null);\r\n\tconst [selector, setSelector] = useState({\r\n\t\txParam: chartParams.xParam, \r\n\t\tyParam: chartParams.yParam, \r\n\t\tzParam: chartParams.zParam, \r\n\t\tcParam: chartParams.cParam, \r\n\t});\r\n\tconst [selectedCircles, setSelectedCircles] = useState({\r\n\t\tselected: [], \r\n\t\tnotSelected: Object.keys(stateInfo), \r\n\t\tall: Object.keys(stateInfo)\r\n\t});\r\n\r\n\t// style\r\n\tconst { wrapperWidth, wrapperHeight, marginTop, marginBottom, marginLeft, marginRight } = wrapper;\r\n\tconst { width, height } = bounded;\r\n\tconst classes = useStyles();\r\n\r\n\tconst handleSelector = (e) => {\r\n\t\tconst param = e.target.name;\r\n\r\n\t\tsetSelector({\r\n\t\t\t...selector,\r\n\t\t\t[param]: {\r\n\t\t\t\t...selector[param],\r\n\t\t\t\tselected: e.target.value\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (dataStates.length > 0) {\r\n\t\t\tgapminderData(dataStates, stateInfo, chartParams)\r\n\t\t\t\t.then(res => setData(res))\r\n\t\t}\r\n\t}, [dataStates]);\r\n\r\n\treturn (\r\n\t\t<selectionContext.Provider value={{selectedCircles, setSelectedCircles}}>\r\n\t\t\t<Navbar \t\t\t\t\t\t\t\t\r\n\t\t\t\tdata={data} \r\n\t\t\t\tselector={selector} \r\n\t\t\t\thandleSelector={handleSelector}\r\n\t\t\t\tclassName={classes.navbar}\r\n\t\t\t/>\r\n\t\t\t<div transform={`translate(${marginLeft}, ${marginTop})`}>\r\n\t\t\t\t{data \r\n\t\t\t\t\t&& <ChartGapminder \r\n\t\t\t\t\t\tselector={selector}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t\t\twrapper={wrapper} \r\n\t\t\t\t\t\tbounded={bounded} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</selectionContext.Provider>\r\n\t)\r\n};\r\n","import { useEffect, useContext } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\n\r\n// constants\r\nimport { date } from '../util/constants';\r\n\r\nexport const MouseMove = (props) => {\r\n\tconst { focus, overlay, linesStates, selectedStates, wrapperDim, boundedDim } = props;\r\n\tconst {\r\n        wrapperWidth,\r\n        wrapperHeight,\r\n        marginLeft,\r\n        marginRight,\r\n        marginBottom,\r\n        marginTop,\r\n    } = wrapperDim;\r\n    const { width, height } = boundedDim;\r\n\tconst { dataStates } = useContext(dataContext);\r\n\t\r\n    const xScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.dayOfOutbreak)).range([0, width]);\r\n    const yScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.casesPerThousand)).range([height, 0]);\r\n\r\n    useEffect(() => {\r\n        if (overlay) {\r\n\r\n            overlay.on('mousemove', mousemove);\r\n\r\n            let frozen = false;\r\n\r\n            function mousemove() {\r\n                let x0 = xScale.invert(d3.mouse(this)[0]);\r\n                const bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\r\n\r\n                Object.keys(selectedStates).sort()\r\n                    .filter(s => selectedStates[s].selected === true)\r\n                    .forEach((state, index) => {\r\n                        const dataEachState = dataStates.filter(d => d.state === state);\r\n                        const stateHTML = selectedStates[state].htmlFormat;\r\n                        const i = bisectDate(dataEachState, x0, 0);\r\n\r\n                        let dataEachStateRangeY = dataEachState[i]\r\n                            ? dataEachState[i].casesPerThousand \r\n                            : dataEachState[dataEachState.length - 1].casesPerThousand;\r\n                        let dataEachStateRangeX = dataEachState[i] \r\n                            ? dataEachState[i].dayOfOutbreak \r\n                            : dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                        let dataEachStateRangeDate = dataEachState[i] \r\n                            ? date.dateFormatter(dataEachState[i].date) \r\n                            : date.dateFormatter(dataEachState[dataEachState.length - 1].date);\r\n                        let dataEachStateRangeCases = dataEachState[i]\r\n                            ? dataEachState[i].cases \r\n                            : dataEachState[dataEachState.length - 1].cases;\r\n\r\n                        const toggleFreeze = () => {\r\n                            frozen = !frozen;\r\n                        };\r\n\r\n                        overlay.on('click', toggleFreeze);\r\n\r\n                        if (!frozen) {\r\n                            focus.select(`#circle-${stateHTML}`)\r\n                                .attr('cy', yScale(dataEachStateRangeY))\r\n                                .attr('cx', xScale(dataEachStateRangeX));\r\n\r\n                            focus.select(`#d-label-${stateHTML}`)\r\n                                .text(`${selectedStates[state].abbreviation} => Day ${dataEachStateRangeX} (${dataEachStateRangeDate.split(\"-\").slice(0,2).join(\"-\")})`)\r\n\t\t\t\t\t\t\t\t.attr('fill', selectedStates[state].color)\r\n\r\n                            focus.select(`#d-label-b-${stateHTML}`)\r\n                                .text(`${dataEachStateRangeY.toFixed(3)} (${dataEachStateRangeCases} tot.)`)\r\n                                .attr('fill', selectedStates[state].color)\r\n                        } \r\n                    });\r\n                }\r\n\t\t\t}\r\n    }, [linesStates]);\r\n    return null;\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// functions\r\nimport { MouseMove } from \"../util/MouseMove\";\r\n\r\n// context\r\nimport { dataContext } from \"../../context/dataContext\";\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// style\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\nexport const Line = props => {\r\n    const {\r\n        chartParams,\r\n        labelParams,\r\n        focus,\r\n        overlay,\r\n        selectedStates,\r\n        wrapperDim,\r\n        boundedDim,\r\n    } = props;\r\n    const { xParam, yParam } = chartParams;\r\n    const {\r\n        wrapperWidth,\r\n        wrapperHeight,\r\n        marginLeft,\r\n        marginRight,\r\n        marginBottom,\r\n        marginTop,\r\n    } = wrapperDim;\r\n    const { width, height } = boundedDim;\r\n\r\n    // context\r\n    const { dataStates } = useContext(dataContext);\r\n    const { infoStates } = useContext(statesContext);\r\n\r\n    // style\r\n    const theme = useTheme();\r\n\tconst mqMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\tconst mqLarge = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    const [linesStates, setLinesStates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedStates && dataStates.length > 0) {\r\n            // Scales\r\n            const xScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n                .range([0, width]);\r\n            const yScale = d3\r\n                .scaleLinear()\r\n                .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n                .range([height, 0]);\r\n\r\n            // Lines\r\n            const lineGenerator = d3\r\n                .line()\r\n                .x(d => xScale(d.dayOfOutbreak))\r\n                .y(d => yScale(d.casesPerThousand));\r\n\r\n            const linesObject = {};\r\n\r\n            Object.keys(selectedStates)\r\n                .sort()\r\n                .filter(s => selectedStates[s].selected === true)\r\n                .forEach((state, i) => {\r\n                    const dataEachState = dataStates.filter(\r\n                        d => d.state === state\r\n                    );\r\n                    const stateHTML = infoStates[state].htmlFormat;\r\n                    // Line label placement\r\n                    const lastDayOfOutbreak =\r\n                        dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                    const lastCasesPerThousand =\r\n                        dataEachState[dataEachState.length - 1]\r\n                            .casesPerThousand;\r\n\r\n                    // markers for lockdown date\r\n                    const lockdownDate = selectedStates[state].lockdown;\r\n                    const lockdownDay =\r\n                        (lockdownDate - dataEachState[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1;\r\n                    const lockdownDayDatum = dataEachState.filter(\r\n                        d => d.dayOfOutbreak === lockdownDay\r\n                    )[0];\r\n\r\n                    if (lockdownDayDatum) {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                            lockdownMarkerX: xScale(lockdownDay),\r\n                            lockdownMarkerY: yScale(\r\n                                lockdownDayDatum.casesPerThousand\r\n                            ),\r\n                        };\r\n                    } else {\r\n                        linesObject[state] = {\r\n                            line: lineGenerator(dataEachState),\r\n                            lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n                            lineLabelY: yScale(lastCasesPerThousand),\r\n                        };\r\n                    }\r\n\r\n                    // for mousemove\r\n                    let xShift = 0;\r\n                    let yShift = 0;\r\n\r\n                    if (i > 11) {\r\n\t\t\t\t\t\tif (mqLarge) {\r\n\t\t\t\t\t\t\txShift = 180;\r\n\t\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t\t} else if (mqMedium) {\r\n\t\t\t\t\t\t\txShift = 120;\r\n\t\t\t\t\t\t\tyShift = 12 * 40;\r\n\t\t\t\t\t\t} \r\n                    }\r\n\r\n                    focus\r\n                        .append(\"circle\")\r\n                        .attr(\"id\", `circle-${stateHTML}`)\r\n                        .attr(\"r\", 5)\r\n\t\t\t\t\t\t.attr(\"fill\", selectedStates[state].color)\r\n                        .attr(\"stroke\", theme.palette.text.primary);\r\n\r\n                    if (mqMedium ? i < 24 : i < 12) {\r\n                        focus\r\n                            .append(\"text\")\r\n                            .attr(\"id\", `d-label-${stateHTML}`)\r\n                            .attr(\"x\", 10 + xShift)\r\n                            .attr(\"y\", d => mqMedium ? 10 + i * 40 - yShift : 10 + i * 30)\r\n                            .style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n                            .style(\r\n                                \"font-family\",\r\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n                            );\r\n\r\n                        focus\r\n                            .append(\"text\")\r\n                            .attr(\"id\", `d-label-b-${stateHTML}`)\r\n                            .attr(\"x\", 10 + xShift)\r\n                            .attr(\"y\", d => mqMedium ? 25 + i * 40 - yShift : 25 + i * 30)\r\n                            .style(\"font-size\", d => mqLarge ? \".8rem\" : \".6rem\")\r\n                            .style(\r\n                                \"font-family\",\r\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\"\r\n                            );\r\n                    }\r\n                });\r\n            setLinesStates(linesObject);\r\n        }\r\n\r\n        return () => {\r\n            focus.selectAll(\"circle\").remove();\r\n            focus.selectAll(\"text\").remove();\r\n        };\r\n    }, [dataStates, selectedStates, theme]);\r\n\r\n    return (\r\n        <>\r\n            <MouseMove\r\n                focus={focus}\r\n                overlay={overlay}\r\n                linesStates={linesStates}\r\n                {...props}\r\n            />\r\n            {dataStates.length > 0 ? (\r\n                Object.keys(linesStates)\r\n                    .sort()\r\n                    .map((state, i) => {\r\n                        const stateHTML = infoStates[state].htmlFormat;\r\n\r\n                        return (\r\n                            <g key={i} id={`bounds-render-${stateHTML}`}>\r\n                                <path\r\n                                    fill=\"none\"\r\n                                    stroke={selectedStates[state].color}\r\n                                    strokeWidth={2.5}\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeLinecap=\"round\"\r\n                                    d={linesStates[state].line}\r\n                                />\r\n                                <circle\r\n                                    id=\"line-marker-lockdown\"\r\n                                    r={4}\r\n                                    fill={\r\n                                        linesStates[state].lockdownMarkerX\r\n                                            ? selectedStates[state].color\r\n                                            : \"none\"\r\n                                    }\r\n                                    cx={linesStates[state].lockdownMarkerX}\r\n                                    cy={linesStates[state].lockdownMarkerY}\r\n                                />\r\n                                <text\r\n                                    id={`line-label-${stateHTML}`}\r\n                                    className=\"line-label\"\r\n                                    style={{\r\n                                        fill: theme.palette.text.primary,\r\n                                        fontSize: \"14px\",\r\n                                        fontFamily:\r\n                                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                                    }}\r\n                                    x={linesStates[state].lineLabelX}\r\n                                    y={linesStates[state].lineLabelY}\r\n                                >\r\n                                    {selectedStates[state].abbreviation}\r\n                                </text>\r\n                            </g>\r\n                        );\r\n                    })\r\n            ) : (\r\n                <g></g>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// Components\r\nimport { Line } from \"./Line\";\r\n\r\n// Context\r\nimport { dataContext } from \"../../context/dataContext\";\r\n\r\n// Styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        fill: theme.palette.text.primary,\r\n        fontSize: \"1.2rem\",\r\n    },\r\n    axes: {\r\n        fill: theme.palette.text.primary,\r\n    },\r\n    axisLabel: {\r\n        fill: theme.palette.text.primary,\r\n        fontSize: \".8rem\",\r\n    },\r\n    footnotes: {\r\n        fontSize: \".6rem\",\r\n    },\r\n}));\r\n\r\nexport const ChartUSCompare = props => {\r\n\tconst { wrapperDim, boundedDim } = props;\r\n\tconst { wrapperWidth, wrapperHeight, marginLeft, marginRight, marginBottom, marginTop } = wrapperDim;\r\n\tconst { width, height } = boundedDim;\r\n    const { dataStates } = useContext(dataContext);\r\n    const theme = useTheme();\r\n\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const svgRef = useRef(null);\r\n    const boundsRef = useRef(null);\r\n\r\n    let classes = useStyles();\r\n\r\n    const focus = d3\r\n        .select(boundsRef.current)\r\n        .append(\"g\")\r\n\t\t.attr(\"class\", \"focus\")\r\n        .style(\"display\", \"none\");\r\n\r\n    const overlay = d3\r\n        .select(boundsRef.current)\r\n        .append(\"rect\")\r\n        .attr(\"class\", \"overlay\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"opacity\", \"0\")\r\n        .on(\"mouseover\", () => focus.style(\"display\", null));\r\n\r\n    useEffect(() => {\r\n        // Scales\r\n        const xScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n            .range([0, width]);\r\n        const yScale = d3\r\n            .scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n            .range([height, 0]);\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n        d3.select(xAxisRef.current).call(xAxisGenerator);\r\n        d3.select(yAxisRef.current).call(yAxisGenerator);\r\n    }, [dataStates, theme]);\r\n\r\n    return (\r\n\t\t<>\r\n        {/* <div height={wrapperHeight} width={wrapperWidth}> */}\r\n            <svg id=\"covidcompare\" height={wrapperHeight} width={wrapperWidth} ref={svgRef}>\r\n                <text\r\n                    className={classes.title}\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate (${\r\n                        marginLeft + width / 2\r\n                    }, ${marginTop / 2})`}\r\n                >\r\n                    COVID-19 US State Comparison\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${marginLeft + width / 2}, ${\r\n                        height + marginTop + 40\r\n                    })`}\r\n                >\r\n                    Day of Outbreak\r\n                </text>\r\n                <text\r\n                    className={classes.axisLabel}\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${\r\n                        marginLeft * .6\r\n                    }, ${height / 2}) rotate(-90)`}\r\n                >\r\n                    Cases per 1000 people\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    transform={`translate(${marginLeft}, ${\r\n                        height + marginTop + 60\r\n                    })`}\r\n                >\r\n                    *Data from The New York Times, based on reports from state\r\n                    and local health agencies.\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    transform={`translate(${marginLeft}, ${\r\n                        height + marginTop + 80\r\n                    })`}\r\n                >\r\n                    **Population data from US Census Bureau (2019).\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    transform={`translate(${marginLeft}, ${\r\n                        height + marginTop + 100\r\n                    })`}\r\n                >\r\n                    ***2/27 is earliest possible 'Day 1,' since prior cases were\r\n                    isolated and may skew insights of \"community spread\"\r\n                </text>\r\n                <text\r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{\r\n                        fill: theme.palette.text.primary,\r\n                        fontFamily:\r\n                            \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                    }}\r\n                    transform={`translate(${marginLeft}, ${\r\n                        height + marginTop + 120\r\n                    })`}\r\n                >\r\n                    †Legend will display up to 24 states (alphabetical order)\r\n                </text>\r\n                <g\r\n                    id=\"bounds\"\r\n                    transform={`translate(${marginLeft}, ${marginTop})`}\r\n                    ref={boundsRef}\r\n                >\r\n                    <g\r\n                        ref={yAxisRef}\r\n                        id=\"y-axis\"\r\n                        style={{\r\n                            color: theme.palette.text.primary,\r\n                            fontFamily:\r\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                        }}\r\n                    />\r\n                    <g\r\n                        ref={xAxisRef}\r\n                        id=\"x-axis\"\r\n                        transform={`translate(0,${height})`}\r\n                        style={{\r\n                            color: theme.palette.text.primary,\r\n                            fontFamily:\r\n                                \"ralewaymedium, Helvetica, Arial, sans-serif\",\r\n                        }}\r\n                    />\r\n                    <Line focus={focus} overlay={overlay} {...props} />\r\n                </g>\r\n            </svg>\r\n        {/* </div> */}\r\n\t\t</>\r\n    );\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterValues = (props) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nFilterValues.propTypes = {\r\n\tfilterOptions: PropTypes.shape([{\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"GDP\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"realGDP2019\")\r\n\t\tn: PropTypes.number.isRequired, // number of cases (ie. rows or documents) to filter\r\n\t\tsort: PropTypes.string.isRequired // \"ascending or descending\"\r\n\t}]),\r\n\tinfo: PropTypes.objectOf(PropTypes.object).isRequired\r\n};","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterCases = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"cases-high\", name: `Top ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-low\", name: `Bottom ${nStates} (total)`, type: \"Cases\", chartParam: \"latestCaseCount\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-high\", name: `Top ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"cases-per-1000-low\", name: `Bottom ${nStates} (per 1000)`, type: \"Cases\", chartParam: \"latestCaseCountPerThou\", sort: \"ascending\", n: nStates},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"cases-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tFilter By Case\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"cases-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// WRAPPER COMPONENT (FilterValues)\r\n\r\nimport React, { useState } from 'react';\r\nimport { FilterValues } from \"../components/FilterValues\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterPopulation = (props) => {\r\n\tconst { nStates, handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"pop-high\", name: `Top ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-low\", name: `Bottom ${nStates} (pop. total)`, type: \"Pop.\", chartParam: \"population\", sort: \"ascending\", n: nStates},\r\n\t\t{id: \"pop-density-high\", name: `Top ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"descending\", n: nStates},\r\n\t\t{id: \"pop-density-low\", name: `Bottom ${nStates} (pop. density)`, type: \"Pop.\", chartParam: \"populationDensity\", sort: \"ascending\", n: nStates}\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"population-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tFilter By Population\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"population-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterValues \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","// REUSABLE COMPONENT\r\n\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nexport const FilterCategories = (props) => {\r\n\tconst { filterOptions, handleSelectedFilter, handleMenu } = props;\r\n\r\n\tconst handleMenuClick = (newFilter) => {\r\n\t\thandleMenu();\r\n\t\thandleSelectedFilter(newFilter);\r\n\t}; \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{filterOptions.map(o => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\tkey={o.id}\r\n\t\t\t\t\t\tid={o.id} \r\n\t\t\t\t\t\tonClick={() => handleMenuClick(o)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{o.name}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nFilterCategories.propTypes = {\r\n\tfilterOptions: PropTypes.shape([{\r\n\t\tid: PropTypes.string.isRequired, // unique ID; html format \r\n\t\tname: PropTypes.string, // user-facing name of filter \r\n\t\ttype: PropTypes.string, // user-facing parameter being filtered (eg. \"Region\")\r\n\t\tchartParam: PropTypes.string.isRequired, // match exact parameter name (eg. \"region\")\r\n\t}]),\r\n\tinfo: PropTypes.objectOf(PropTypes.object).isRequired\r\n};","// WRAPPER COMPONENT (FilterCategories)\r\n\r\nimport React, { useState } from 'react';\r\n\r\n// components\r\nimport { FilterCategories } from \"../components/FilterCategories\";\r\n\r\nimport { Menu, Button } from \"@material-ui/core\";\r\n\r\nexport const FilterRegion = (props) => {\r\n\tconst { handleSelectedFilter } = props;\r\n\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\r\n\tconst handleMenu = (e) => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n\t};\r\n\t\r\n\tconst filterOptions = [\r\n\t\t{id: \"northeast\", name: \"Northeast\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"midwest\", name: \"Midwest\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"south\", name: \"South\", type: \"Region\", chartParam: \"region\"},\r\n\t\t{id: \"west\", name: \"West\", type: \"Region\", chartParam: \"region\"}\r\n\t];\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button id=\"region-btn\" dense={true} onClick={handleMenu}>\r\n\t\t\t\tFilter By Region\r\n\t\t\t</Button>\r\n\t\t\t<Menu\r\n\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\topen={anchorEl ? Boolean(anchorEl.id === \"region-btn\") : false}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t>\r\n\t\t\t\t<FilterCategories \r\n\t\t\t\t\tfilterOptions={filterOptions}\r\n\t\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\t\thandleMenu={handleMenu}\r\n\t\t\t\t/>\r\n\t\t\t</Menu>\r\n\t\t</>\r\n\t)\r\n};\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Button, Menu, MenuItem, Typography, Divider } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\n// components\r\nimport { FilterCases } from \"./pickers/FilterCases\";\r\nimport { FilterGDP } from \"./pickers/FilterGDP\";\r\nimport { FilterPopulation } from \"./pickers/FilterPopulation\";\r\nimport { FilterRegion } from \"./pickers/FilterRegion\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const BatchSelect = props => {\r\n    const { selectedStates, setSelectedStates } = props;\r\n\r\n    // ref and context\r\n\tconst { infoStates } = useContext(statesContext);\r\n\r\n    // assign\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedFilter, setSelectedFilter] = useState(null);\r\n    const [selectedDate, setDateChange] = useState(new Date());\r\n\r\n    // style\r\n    const classes = useStyles();\r\n\r\n    const handleMenu = e => {\r\n\t\t!anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    const handleDateChange = e => {\r\n        setDateChange(e);\r\n\t};\r\n\t\r\n\tconst handleSelectedFilter = (newSelectedFilter) => {\r\n\t\tsetSelectedFilter(newSelectedFilter);\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst handleFilterCategories = (newFilter, info) => {\r\n        const filtered = Object.keys(info).filter(\r\n            s => info[s][newFilter.chartParam] === newFilter.name\r\n\t\t);\r\n\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n    const handleFilterValues = (newFilter, info) => {\r\n\t\tconst n = newFilter.n;\r\n\t\tlet filtered;\r\n\r\n\t\tfiltered = Object.keys(info)\r\n\t\t.sort((a, b) =>\r\n\t\t\tnewFilter.sort === \"descending\"\r\n\t\t\t\t? info[b][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[a][newFilter.chartParam]\r\n\t\t\t\t: info[a][newFilter.chartParam] -\r\n\t\t\t\t\tinfo[b][newFilter.chartParam]\r\n\t\t)\r\n\t\t.slice(0, n);\r\n\t\t\t\r\n\t\tlet newSelection = {};\r\n\t\tObject.keys(info).forEach(s => {\r\n\t\t\tif (filtered.includes(s)) {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: true}\r\n\t\t\t} else {\r\n\t\t\t\tnewSelection[s] = {...info[s], selected: false}\r\n\t\t\t}\r\n\t\t});\r\n\r\n        return newSelection;\r\n    };\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (selectedFilter) {\r\n\t\t\tconst newSelection = selectedFilter.n \r\n\t\t\t\t? handleFilterValues(selectedFilter, infoStates)\r\n\t\t\t\t: handleFilterCategories(selectedFilter, infoStates);\r\n\t\t\tsetSelectedStates(newSelection);\r\n\t\t}\r\n\t},[selectedFilter]);\r\n\r\n    return (\r\n        <span>\r\n\t\t\t<FilterCases\r\n\t\t\t\taria-controls=\"cases-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t\tonClose={handleMenu}\r\n\t\t\t/>\r\n\t\t\t<FilterPopulation\r\n\t\t\t\taria-controls=\"population-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tnStates={12}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n\t\t\t<FilterRegion\r\n\t\t\t\taria-controls=\"region-btn\"\r\n\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\tclassName={classes.tab}\r\n\t\t\t\tselectedStates={selectedStates}\r\n\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\thandleSelectedFilter={handleSelectedFilter}\r\n\t\t\t/>\r\n        </span>\r\n    );\r\n};","import React, { useContext } from \"react\";\r\nimport {\r\n    IconButton,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Checkbox,\r\n    Typography,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\n\r\n// context\r\nimport { dataContext } from \"../../context/dataContext\";\r\n\r\n// styles\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const Dashboard = props => {\r\n    const {\r\n        selectedStates,\r\n        handleSelectedStates,\r\n        handleSelectAllStates,\r\n        handleDeselectAllStates,\r\n    } = props;\r\n\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup\r\n                style={{\r\n                    alignItems: \"left\",\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.text.primary,\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    id=\"select-all\"\r\n                    label=\"Select All\"\r\n                    name=\"Select All\"\r\n                    onClick={handleSelectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"selector-all\"\r\n                            name=\"select-all\"\r\n                            style={{ color: \"white\" }}\r\n                        >\r\n                            <CheckIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAllStates}\r\n                    control={\r\n                        <IconButton\r\n                            id=\"deselector-all\"\r\n                            name=\"deselect-all\"\r\n                            style={{ color: \"red\" }}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === true)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n                <br />\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    style={{ color: theme.palette.primary.contrastText }}\r\n                >\r\n                    Not Selected\r\n                </Typography>\r\n                <Divider\r\n                    style={{\r\n                        backgroundColor: theme.palette.primary.contrastText,\r\n                    }}\r\n                />\r\n                {selectedStates ? (\r\n                    Object.keys(selectedStates)\r\n                        .sort()\r\n                        .filter(s => selectedStates[s].selected === false)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i}\r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleSelectedStates}\r\n                                    control={\r\n                                        <Checkbox\r\n                                            name={state}\r\n                                            style={{\r\n                                                color:\r\n                                                    selectedStates[state].color,\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`}\r\n                                />\r\n                            );\r\n                        })\r\n                ) : (\r\n                    <div />\r\n                )}\r\n            </FormGroup>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    ClickAwayListener,\r\n    Drawer,\r\n    Divider,\r\n    Menu,\r\n\tMenuItem,\r\n\tTooltip\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { BatchSelect } from \"./BatchSelect\";\r\nimport { Dashboard } from \"./Dashboard\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.primary.contrastText,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: \"flex-end\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    tab: {\r\n        opacity: 0.7,\r\n    },\r\n    menuItem: {\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport const FilterBarCovidCompare = props => {\r\n    const [open, setOpen] = useState(false);\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\t\r\n\tconst theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClickAway = e => {\r\n        if (e.x > drawerWidth && e.y > 70 && open) {\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const handleMenu = e => {\r\n        !anchorEl ? setAnchorEl(e.currentTarget) : setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"relative\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    color: theme.palette.primary.contrastText,\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(\r\n                            classes.menuButton,\r\n                            open && classes.hide\r\n                        )}\r\n                        style={{ color: theme.palette.text.primary }}\r\n                        disableRipple\r\n                    >\r\n                        <MenuIcon className={classes.menuButton} />\r\n                    </IconButton>\r\n                    <BatchSelect {...props} />\r\n\t\t\t\t\t<span style={{marginLeft: \"auto\"}}>\r\n\t\t\t\t\t\t<Tooltip title=\"Line chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/covidcompare\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<TimelineIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip title=\"Gapminder chart\">\r\n\t\t\t\t\t\t\t<IconButton component=\"a\" href=\"/gapminder\" className={classes.menuButton}>\r\n\t\t\t\t\t\t\t\t<BubbleChartIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <ClickAwayListener onClickAway={handleClickAway}>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    style={{ color: theme.palette.text.primary }}\r\n                >\r\n                    <div\r\n                        className={classes.drawerHeader}\r\n                        style={{ backgroundColor: theme.palette.primary.main }}\r\n                    >\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            edge=\"end\"\r\n                            onClick={handleDrawerClose}\r\n                            style={{\r\n                                color: theme.palette.primary.contrastText,\r\n                            }}\r\n                        >\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <Dashboard {...props} />\r\n                </Drawer>\r\n            </ClickAwayListener>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const ResponsiveDesign = (props) => {\r\n\tconst { wrapperDim, setWrapperDim, setBoundedDim } = props;\r\n\r\n\tconst theme = useTheme();\r\n\tconst mqSmall = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\tconst mqMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\t  \r\n\tconst dimensions = {\r\n\t\twrapperWidth: mqMedium ? window.innerWidth * .8 : window.innerWidth * .9,\r\n\t\twrapperHeight: window.innerHeight * .9,\r\n\t\tmarginTop: 60,\r\n\t\tmarginRight: 20,\r\n\t\tmarginBottom: 130,\r\n\t\tmarginLeft: 80,\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetWrapperDim(dimensions);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoundedDim({\r\n\t\t\twidth: dimensions.wrapperWidth - dimensions.marginLeft - dimensions.marginRight,\r\n\t\t\theight: dimensions.wrapperHeight - dimensions.marginTop - dimensions.marginBottom,\r\n\t\t});\r\n\t}, [wrapperDim]);\r\n\r\n\treturn null;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// components\r\nimport { ChartUSCompare } from \"./ChartUSCompare\";\r\nimport { FilterBarCovidCompare } from './FilterBarCovidCompare';\r\nimport { ResponsiveDesign } from \"../util/ResponsiveDesign\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\n\r\n// styles\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\n// Chart params: define params for drawing axes and chart\r\nconst chartParams = {\r\n\tchartType: \"line\",\r\n\ttoTimestamp: null,\r\n\tmultiple: true,\r\n\tnormalize: true,\r\n\txParam: { // x-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'dayOfOutbreak',\r\n\t\talt1: null,\r\n\t\toptions: [\r\n\t\t\t\"dayOfOutbreak\",\r\n\t\t]\r\n\t},\r\n\tyParam: { // y-axis\r\n\t\ttype: 'linear',\r\n\t\tformat: 'number',\r\n\t\tselected: 'casesPerThousand',\r\n\t\talt1: 'deathsPerThousand',\r\n\t\toptions: [ \r\n\t\t\t\"casesPerThousand\",\r\n\t\t\t\"cases\",\r\n\t\t\t\"deathsPerThousand\",\r\n\t\t\t\"deaths\"\r\n\t\t],\r\n\t},\r\n\tzParam: {// z-axis (3rd dimension) (eg. size)\r\n\t\ttype: null,\r\n\t\tformat: null,\r\n\t\tselected: null,\r\n\t\toptions: [ \r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n\tcParam: { // color axis (categorical/ordinal data) (eg. gender, birthplace, etc.)\r\n\t\ttype: \"categorical\",\r\n\t\tselected: \"region\",\r\n\t\toptions: [ \r\n\t\t\t\"region\",\r\n\t\t\t\"division\",\r\n\t\t\t\"governor\"\r\n\t\t],\r\n\t},\r\n\ttParam: { // time axis (4th dimension) (ie. for animated charts)\r\n\t\ttype: null,\r\n\t\tselected: null,\r\n\t\toptions: [\r\n\t\t\tnull\r\n\t\t]\r\n\t},\r\n};\r\n\r\n// Label params:\r\nconst labelParams = {\r\n\tchartTitle: \"COVID-19 State Comparison\",\r\n\txLabel: \"Cases per Thousand\",\r\n\tyLabel: \"Deaths per Thousand\"\r\n};\r\n\r\nexport const AppCovidCompare = () => {\r\n\tconst { infoStates, setInfoStates } = useContext(statesContext);\r\n\tconst [wrapperDim, setWrapperDim] = useState();\r\n\tconst [boundedDim, setBoundedDim] = useState();\r\n\t\r\n\t// assign\r\n\tconst [selectedStates, setSelectedStates] = useState(null);\r\n\r\n\t// style\r\n\tconst theme = useTheme();\r\n\r\n\tconst handleSelectedStates = (e) => {\r\n        setSelectedStates({\r\n            ...selectedStates,\r\n            [e.target.name]: {\r\n                ...selectedStates[e.target.name],\r\n                selected: e.target.checked\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: true\r\n            }\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    const handleDeselectAllStates = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: false\r\n            }\r\n         });\r\n        setSelectedStates(revisedStates);\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (infoStates) {\r\n\t\t\tsetSelectedStates(infoStates);\r\n\t\t}\r\n \t}, [infoStates]);\r\n\r\n  return (\r\n    <>\r\n\t\t<ResponsiveDesign wrapperDim={wrapperDim} setWrapperDim={setWrapperDim} setBoundedDim={setBoundedDim} />\r\n      \t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t{wrapperDim &&\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<FilterBarCovidCompare \r\n\t\t\t\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\t\t\t\thandleSelectedStates={handleSelectedStates}\r\n\t\t\t\t\t\t\t\thandleSelectAllStates={handleSelectAllStates}\r\n\t\t\t\t\t\t\t\thandleDeselectAllStates={handleDeselectAllStates}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ChartUSCompare \r\n\t\t\t\t\t\t\t\tchartParams={chartParams}\r\n\t\t\t\t\t\t\t\tlabelParams={labelParams}\r\n\t\t\t\t\t\t\t\tselectedStates={selectedStates} \r\n\t\t\t\t\t\t\t\tsetSelectedStates={setSelectedStates}\r\n\t\t\t\t\t\t\t\twrapperDim={wrapperDim}\r\n\t\t\t\t\t\t\t\tboundedDim={boundedDim}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</ThemeProvider>\r\n      \t\t</MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n};","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst darkPrimary = \"#000018\";\r\nconst darkSecondary = \"#1c847f\";\r\nconst darkText = \"#fff\";\r\nconst darkBackground = \"#29293d\";\r\n\r\nconst lightPrimary = \"#1c847f\";\r\nconst lightText = \"#29293d\";\r\nconst lightBackground = \"#fff\";\r\n\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: {\r\n            main: \"#000018\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: darkSecondary,\r\n            contrastText: darkText,\r\n        },\r\n        text: {\r\n            primary: \"#fff\",\r\n            secondary: \"#fff\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: darkBackground,\r\n\t\t},\r\n        contrastThreshold: 3,\r\n    },\r\n    typography: {\r\n        fontFamily: [\"ralewaymedium\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\r\n            \",\"\r\n        ),\r\n    },\r\n    overrides: {\r\n        MuiFormControlLabel: {\r\n            root: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n                textColor: \"#fff\",\r\n            },\r\n        },\r\n        MuiButton: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n            label: {\r\n                color: \"#fff\",\r\n            },\r\n            text: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiBase: {\r\n            root: {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        MuiInputBase: {\r\n            root: {\r\n                color: \"#fff\",\r\n                maxWidth: 115,\r\n                paddingLeft: 10,\r\n            },\r\n        },\r\n        MuiPickersCalendarHeader: {\r\n            switchHeader: {\r\n                backgroundColor: darkPrimary,\r\n            },\r\n        },\r\n        MuiPickersDay: {\r\n            day: {\r\n                color: \"#29293d\",\r\n            },\r\n            daySelected: {\r\n                backgroundColor: \"#29293d\",\r\n            },\r\n            dayDisabled: {\r\n                color: \"#29293d\",\r\n            },\r\n            current: {\r\n                color: \"#29293d\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const getTheme = (theme, darkMode) => {\r\n\tif (darkMode) {\r\n \t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"dark\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#000018\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#29293d\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#fff\",\r\n\t\t\t\t\tsecondary: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\t\t\r\n\t} else {\r\n\t\treturn createMuiTheme({\r\n\t\t\t...theme,\r\n\t\t\tpalette: {\r\n\t\t\t\t...theme.palette,\r\n\t\t\t\ttype: \"light\",\r\n\t\t\t\tprimary: {\r\n\t\t\t\t\tmain: \"#1c847f\",\r\n\t\t\t\t\tcontrastText: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\tbackground: {\r\n\t\t\t\t\tdefault: \"#fff\",\r\n\t\t\t\t},\r\n\t\t\t\ttext: {\r\n\t\t\t\t\tprimary: \"#29293d\",\r\n\t\t\t\t\tsecondary: \"#000018\",\r\n        \t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n  }","export const colors = [\r\n\t\"#7FFFD4\",\r\n\t\"#8EE5EE\",\r\n\t\"#76EE00\",\r\n\t\"#D2691E\",\r\n\t\"#FF7F50\",\r\n\t\"#00CDCD\",\r\n\t\"#DC143C\",\r\n\t\"#00EE00\",\r\n\t\"#00EE76\",\r\n\t\"#8B5A2B\",\r\n\t\"#EE5C42\",\r\n\t\"#00C5CD\",\r\n\t\"#EE3A8C\",\r\n\t\"#9ACD32\",\r\n\t\"#43CD80\",\r\n\t\"#EE0000\",\r\n\t\"#7D26CD\",\r\n\t\"#EE9A00\",\r\n\t\"#C71585\",\r\n\t\"#9F79EE\",\r\n\t\"#8B5742\",\r\n\t\"#CDC673\",\r\n\t\"#218868\",\r\n\t\"#CD5555\",\r\n\t\"#CD9B1D\",\r\n\t\"#79CDCD\",\r\n\t\"#9BCD9B\",\r\n\t\"#FF7F00\",\r\n\t\"#EE3B3B\",\r\n\t\"#BF3EFF\",\r\n\t\"#00CED1\",\r\n\t\"#EE1289\",\r\n\t\"#228B22\",\r\n\t\"#CDAD00\",\r\n\t\"#00CD00\",\r\n\t\"#EE6AA7\",\r\n\t\"#CD5555\",\r\n\t\"#CD8C95\",\r\n\t\"#20B2AA\",\r\n\t\"#CD8162\",\r\n\t\"#CDCDB4\",\r\n\t\"#CD00CD\",\r\n\t\"#E066FF\",\r\n\t\"#00FA9A\",\r\n\t\"#C71585\",\r\n\t\"#FF4500\",\r\n\t\"#EE799F\",\r\n\t\"#CD96CD\",\r\n\t\"#912CEE\",\r\n\t\"#EEB4B4\",\r\n\t\"#4EEE94\"\r\n  ];","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport * as d3 from \"d3\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// data\r\nimport USStates from \"./data/us-states.csv\";\r\nimport stateInfo from \"./data/stateInfo.json\";\r\n\r\n// components\r\nimport { Footnotes } from \"./components/Footnotes\";\r\nimport { AppGapminder } from \"./components/appGapminder/AppGapminder\";\r\nimport { AppCovidCompare } from \"./components/appCovidCompare/AppCovidCompare\";\r\n\r\n// context\r\nimport { dataContext } from \"./context/dataContext\";\r\nimport { statesContext } from \"./context/statesContext\";\r\n\r\n// styles\r\nimport { theme, getTheme } from \"./styles/theme\";\r\nimport { colors } from \"./styles/colors\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nfunction App() {\r\n    const [dataStates, setDataStates] = useState([]);\r\n    const [infoStates, setInfoStates] = useState(null);\r\n    const [darkMode, setDarkMode] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // clean stateInfo data and assign selectedStates\r\n        const dateParser = d3.timeParse(\"%m-%d-%y\");\r\n        const revisedStates = {};\r\n\r\n        Object.keys(stateInfo).forEach((s, i) => {\r\n            revisedStates[s] = {\r\n                ...stateInfo[s],\r\n                lockdown: stateInfo[s].lockdown.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdown\r\n                    : dateParser(stateInfo[s].lockdown),\r\n                lockdownEnd: stateInfo[s].lockdownEnd.startsWith(\"none\")\r\n                    ? stateInfo[s].lockdownEnd\r\n                    : dateParser(stateInfo[s].lockdownEnd),\r\n                color: colors[i],\r\n            };\r\n        });\r\n\r\n        const nested = d3\r\n            .nest()\r\n            .key(d => d.state)\r\n            .entries(dataStates);\r\n\r\n        Object.keys(nested).forEach(i => {\r\n            const s = nested[i].key;\r\n\r\n            const lastIndex = nested[i].values.length - 1;\r\n            const latestCaseCount = nested[i].values[lastIndex].cases;\r\n            const latestCaseCountPerThou =\r\n                (nested[i].values[lastIndex].cases / stateInfo[s].population) *\r\n                1000;\r\n\r\n            revisedStates[s] = {\r\n                ...revisedStates[s],\r\n                latestCaseCount: latestCaseCount,\r\n                latestCaseCountPerThou: latestCaseCountPerThou,\r\n            };\r\n        });\r\n        setInfoStates(revisedStates);\r\n    }, [dataStates]);\r\n\r\n    useEffect(() => {\r\n        // get COVID-19 state data\r\n        d3.csv(USStates).then(data => {\r\n            // clean data\r\n            const dateParser = d3.timeParse(\"%Y-%m-%d\");\r\n\r\n            data.forEach(d => {\r\n                d.date = dateParser(d.date);\r\n                d.fips = parseInt(d.fips);\r\n                d.cases = parseInt(d.cases);\r\n                d.deaths = parseInt(d.deaths);\r\n            });\r\n\r\n            // Filter data:\r\n            // Prior to 02-27-20, Washington had 1 or 2 cases from January.\r\n            // However, these were isolated cases and this graph is trying to track Covid-19 spread\r\n            // Also filter out territories Guam, Puerto Rico, etc.\r\n            data = data.filter(\r\n                d =>\r\n                    d.date > new Date(2020, 1, 26) &&\r\n                    Object.keys(stateInfo).includes(d.state)\r\n            );\r\n\r\n            // Normalize data:\r\n            // Add \"dayOfOutbreak\" to show elapsed time\r\n            // Add state population\r\n            // Add \"casesPerThousand\", \"deathsPerThousand\", \"mortalityRate\"\r\n            Object.keys(stateInfo).forEach(state => {\r\n                const stateData = data.filter(d => d.state === state);\r\n                stateData.forEach(d => {\r\n                    d.dayOfOutbreak =\r\n                        (d.date - stateData[0].date) /\r\n                            (24 * 60 * 60 * 10 * 10 * 10) +\r\n                        1; // day - day one, convert ms to days\r\n                    d.casesPerThousand =\r\n                        (d.cases / stateInfo[state].population) * 1000;\r\n                    d.deathsPerThousand =\r\n                        (d.deaths / stateInfo[state].population) * 1000;\r\n                    d.mortalityRate = (d.deaths / d.cases) * 100;\r\n                });\r\n            });\r\n            setDataStates(data);\r\n            console.log(\"imported dataset\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={getTheme(theme, darkMode)}>\r\n                <CssBaseline />\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <dataContext.Provider value={{ dataStates, setDataStates }}>\r\n                        <statesContext.Provider\r\n                            value={{ infoStates, setInfoStates }}\r\n                        >\r\n                            <Router>\r\n                                <Route\r\n                                    path=\"/covidcompare\"\r\n                                    className=\"covid-chart\"\r\n                                    component={AppCovidCompare}\r\n                                />\r\n                                <Route\r\n                                    path=\"/gapminder\"\r\n                                    component={AppGapminder}\r\n                                />\r\n                                <Footnotes\r\n                                    darkMode={darkMode}\r\n                                    setDarkMode={setDarkMode}\r\n                                />\r\n                            </Router>\r\n                        </statesContext.Provider>\r\n                    </dataContext.Provider>\r\n                </MuiPickersUtilsProvider>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}