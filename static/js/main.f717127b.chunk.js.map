{"version":3,"sources":["context/dataContext.js","context/statesContext.js","context/themeContext.js","components/util/constants.js","components/util/MouseMove.js","components/chart/Line.js","components/chart/ChartUSCompare.js","components/dataParams/BatchSelect.js","styles/colors.js","components/dataParams/Dashboard.js","components/dataParams/FilterBar.js","components/chart/Footnotes.js","styles/theme.js","App.js","serviceWorker.js","index.js","data/us-states.csv"],"names":["dataContext","React","createContext","statesContext","themeContext","date","dateFormatter","d3","dateParser","dimensions","width","window","innerWidth","height","margin","top","right","bottom","left","bounded","MouseMove","focus","overlay","linesStates","dataStates","useContext","selectedStates","xScale","theme","domain","d","dayOfOutbreak","range","yScale","casesPerThousand","useEffect","on","x0","invert","this","bisectDate","Object","keys","sort","filter","s","selected","forEach","state","index","dataEachState","stateHTML","htmlFormat","i","dataEachStateRangeY","length","dataEachStateRangeX","dataEachStateRangeDate","dataEachStateRangeCases","cases","frozen","select","attr","text","abbreviation","color","toFixed","Line","setTheme","useState","setLinesStates","selectAll","lineGenerator","x","y","linesObject","stateInfo","lastDayOfOutbreak","lastCasesPerThousand","lockdownDay","lockdown","lockdownDayDatum","line","lineLabelX","lineLabelY","lockdownMarkerX","lockdownMarkerY","xShift","yShift","append","palette","primary","style","remove","map","key","id","fill","stroke","strokeWidth","strokeLinejoin","strokeLinecap","r","cx","cy","className","fontSize","fontFamily","useStyles","makeStyles","title","axes","axisLabel","footnotes","ChartUSCompare","yAxisRef","useRef","xAxisRef","svgRef","boundsRef","classes","current","yAxisGenerator","scale","xAxisGenerator","call","ref","textAnchor","transform","BatchSelect","setSelectedStates","anchorEl","setAnchorEl","selectedFilter","setSelectedFilter","Date","selectedDate","setDateChange","lockdownRef","handleClick","e","currentTarget","name","handleClose","filterCases","revisedStates","revisedOrder","a","b","latestCaseCount","revisedOrderToPopulation","population","target","reverse","filterLockdown","filterPopulation","filterRegion","filteredByRegion","region","includes","Button","onClick","Menu","keepMounted","open","Boolean","onClose","MenuItem","DatePicker","variant","disableToolbar","autoOk","value","onChange","disableFuture","format","colors","Dashboard","handleChange","checked","timeParse","startsWith","nested","nest","entries","lastIndex","values","FormGroup","alignItems","backgroundColor","main","FormControlLabel","label","control","IconButton","Typography","contrastText","Divider","Checkbox","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","background","default","FilterBar","setOpen","AppBar","position","clsx","Toolbar","edge","ClickAwayListener","onClickAway","Drawer","anchor","paper","textAlign","saveButton","float","themeButton","secondary","Footnotes","changeTheme","selectTheme","Tooltip","placement","saveSvgAsPng","document","querySelector","encoderOptions","fonts","url","themeDark","createMuiTheme","contrastThreshold","typography","join","overrides","MuiFormControlLabel","textColor","MuiTypography","MuiMenu","MuiMenuItem","MuiButton","raisedPrimary","MuiBase","MuiInputBase","maxWidth","paddingLeft","MuiPickersCalendarHeader","switchHeader","MuiPickersDay","day","daySelected","dayDisabled","themeLight","App","setDataStates","darkTheme","setDarkTheme","USStates","then","data","fips","parseInt","deaths","stateData","deathsPerThousand","console","log","paddingBottom","utils","DateFnsUtils","Provider","ThemeProvider","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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,EAAD,CAAQhE,GAAG,gBAAgB8C,KAAK,SAASmB,QAAStB,GAAlD,oBAGA,kBAACuB,EAAA,EAAD,CACElE,GAAG,qBACHmC,SAAUA,EACVgC,aAAW,EACXC,KAAMC,QAA2B,WAAnBhC,GACdiC,QAASvB,GAET,kBAACwB,EAAA,EAAD,CAAUvE,GAAG,YAAYiE,QAASL,GAAlC,aACN,kBAACW,EAAA,EAAD,CAAUvE,GAAG,UAAUiE,QAASL,GAAhC,WACA,kBAACW,EAAA,EAAD,CAAUvE,GAAG,QAAQiE,QAASL,GAA9B,SACA,kBAACW,EAAA,EAAD,CAAUvE,GAAG,OAAOiE,QAASL,GAA7B,W,oCCzQWoB,EAAS,CAClB,YACA,eACA,aACA,QACA,QACA,aACA,QACA,YACA,YACA,aACA,YACA,OACA,QACA,WACA,UACA,OACA,WACA,cACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,QACA,cACA,WACA,UACA,YACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,e,kCCrGEC,EAAY,WAAO,IACdzJ,EAAcC,qBAAWzB,GAAzBwB,WADa,EAEwBC,qBAAWtB,GAAhDuB,EAFa,EAEbA,eAAgBwG,EAFH,EAEGA,kBACnBtG,EAASH,qBAAWrB,GAApBwB,MAEEsJ,EAAe,SAACtC,GAClBV,EAAkB,eACXxG,EADU,eAEZkH,EAAEY,OAAOV,KAFG,eAGN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","file":"static/js/main.f717127b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst dataContext = React.createContext();\r\n\r\nexport { dataContext };","import React from 'react';\r\n\r\nconst statesContext = React.createContext();\r\n\r\nexport { statesContext };","import React from 'react';\r\n\r\nconst themeContext = React.createContext();\r\n\r\nexport { themeContext };","import * as d3 from \"d3\";\r\n\r\nconst date = {\r\n  dateFormatter: d3.timeFormat(\"%m-%d-%y\"),\r\n  dateParser: d3.timeParse(\"%m-%d-%y\"),\r\n};\r\n\r\nconst dimensions = {\r\n  width: window.innerWidth,\r\n  height: 750,\r\n  margin: {\r\n    top: 80,\r\n    right: 100,\r\n    bottom: 120,\r\n    left: 100,\r\n  },\r\n};\r\n\r\nconst bounded = {\r\n  width: dimensions.width - dimensions.margin.left - dimensions.margin.right,\r\n  height: dimensions.height - dimensions.margin.top - dimensions.margin.bottom,\r\n};\r\n\r\nexport { date, dimensions, bounded };\r\n","import { useEffect, useContext } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { statesContext } from '../../context/statesContext';\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// constants\r\nimport { date, bounded } from '../util/constants';\r\n\r\nexport const MouseMove = ({ focus, overlay, linesStates }) => {\r\n    const { dataStates } = useContext(dataContext);\r\n\tconst { selectedStates } = useContext(statesContext);\r\n\tconst { theme } = useContext(themeContext);\r\n\r\n    const xScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.dayOfOutbreak)).range([0, bounded.width]);\r\n    const yScale = d3.scaleLinear().domain(d3.extent(dataStates, d => d.casesPerThousand)).range([bounded.height, 0]);\r\n\r\n    useEffect(() => {\r\n        if (overlay) {\r\n\r\n            overlay.on('mousemove', mousemove);\r\n\r\n            let frozen = false;\r\n\r\n            function mousemove() {\r\n                let x0 = xScale.invert(d3.mouse(this)[0]);\r\n                const bisectDate = d3.bisector(d => d.dayOfOutbreak).left;\r\n\r\n                Object.keys(selectedStates).sort()\r\n                    .filter(s => selectedStates[s].selected === true)\r\n                    .forEach((state, index) => {\r\n                        const dataEachState = dataStates.filter(d => d.state === state);\r\n                        const stateHTML = selectedStates[state].htmlFormat;\r\n                        const i = bisectDate(dataEachState, x0, 0);\r\n\r\n                        let dataEachStateRangeY = dataEachState[i]\r\n                            ? dataEachState[i].casesPerThousand \r\n                            : dataEachState[dataEachState.length - 1].casesPerThousand;\r\n                        let dataEachStateRangeX = dataEachState[i] \r\n                            ? dataEachState[i].dayOfOutbreak \r\n                            : dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n                        let dataEachStateRangeDate = dataEachState[i] \r\n                            ? date.dateFormatter(dataEachState[i].date) \r\n                            : date.dateFormatter(dataEachState[dataEachState.length - 1].date);\r\n                        let dataEachStateRangeCases = dataEachState[i]\r\n                            ? dataEachState[i].cases \r\n                            : dataEachState[dataEachState.length - 1].cases;\r\n\r\n                        const toggleFreeze = () => {\r\n                            frozen = !frozen;\r\n                        };\r\n\r\n                        overlay.on('click', toggleFreeze);\r\n\r\n                        if (!frozen) {\r\n                            focus.select(`#circle-${stateHTML}`)\r\n                                .attr('cy', yScale(dataEachStateRangeY))\r\n                                .attr('cx', xScale(dataEachStateRangeX));\r\n\r\n                            focus.select(`#d-label-${stateHTML}`)\r\n                                .text(`${selectedStates[state].abbreviation} => ${dataEachStateRangeDate} (Day: ${dataEachStateRangeX})`)\r\n\t\t\t\t\t\t\t\t.attr('fill', selectedStates[state].color)\r\n\r\n                            focus.select(`#d-label-b-${stateHTML}`)\r\n                                .text(`${dataEachStateRangeCases} cases (${dataEachStateRangeY.toFixed(3)} per 1000)`)\r\n                                .attr('fill', selectedStates[state].color)\r\n                        } \r\n                    });\r\n                }\r\n\t\t\t}\r\n    }, [linesStates]);\r\n    return null;\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\n// functions\r\nimport { MouseMove } from \"../util/MouseMove\";\r\n\r\n// data\r\nimport stateInfo from \"../../data/stateInfo.json\";\r\n\r\n// context\r\nimport { dataContext } from \"../../context/dataContext\";\r\nimport { statesContext } from \"../../context/statesContext\";\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// constants\r\nimport { bounded } from \"../util/constants\";\r\n\r\nconst Line = ({ focus, overlay }) => {\r\n  const { selectedStates } = useContext(statesContext);\r\n  const { dataStates } = useContext(dataContext);\r\n  const { theme, setTheme } = useContext(themeContext);\r\n  const [linesStates, setLinesStates] = useState([]);\r\n\r\n  const clearFocus = () => {\r\n    focus.selectAll(['circle', 'text']).attr('display', 'none')\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => clearFocus();\r\n  }, [selectedStates]);\r\n\r\n  useEffect(() => {\r\n    if (dataStates.length > 0) {\r\n\r\n      // Scales\r\n      const xScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(dataStates, (d) => d.dayOfOutbreak))\r\n        .range([0, bounded.width]);\r\n      const yScale = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(dataStates, (d) => d.casesPerThousand))\r\n        .range([bounded.height, 0]);\r\n\r\n      // Lines\r\n      const lineGenerator = d3\r\n        .line()\r\n        .x((d) => xScale(d.dayOfOutbreak))\r\n        .y((d) => yScale(d.casesPerThousand));\r\n\r\n      const linesObject = {};\r\n\r\n      Object.keys(selectedStates)\r\n        .sort()\r\n        .filter((s) => selectedStates[s].selected === true)\r\n        .forEach((state, i) => {\r\n          const dataEachState = dataStates.filter((d) => d.state === state);\r\n          const stateHTML = stateInfo[state].htmlFormat;\r\n\r\n          // Line label placement\r\n          const lastDayOfOutbreak =\r\n            dataEachState[dataEachState.length - 1].dayOfOutbreak;\r\n          const lastCasesPerThousand =\r\n            dataEachState[dataEachState.length - 1].casesPerThousand;\r\n\r\n          // markers for lockdown date\r\n          const lockdownDate = selectedStates[state].lockdown;\r\n          const lockdownDay =\r\n            (lockdownDate - dataEachState[0].date) /\r\n              (24 * 60 * 60 * 10 * 10 * 10) +\r\n            1;\r\n          const lockdownDayDatum = dataEachState.filter(\r\n            (d) => d.dayOfOutbreak === lockdownDay\r\n          )[0];\r\n\r\n          if (lockdownDayDatum) {\r\n            linesObject[state] = {\r\n              line: lineGenerator(dataEachState),\r\n              lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n              lineLabelY: yScale(lastCasesPerThousand),\r\n              lockdownMarkerX: xScale(lockdownDay),\r\n              lockdownMarkerY: yScale(lockdownDayDatum.casesPerThousand),\r\n            };\r\n          } else {\r\n            linesObject[state] = {\r\n              line: lineGenerator(dataEachState),\r\n              lineLabelX: xScale(lastDayOfOutbreak) + 3,\r\n              lineLabelY: yScale(lastCasesPerThousand),\r\n            };\r\n          }\r\n\r\n          // for mousemove\r\n          let xShift = 0;\r\n          let yShift = 0;\r\n\r\n          if (i > 12) {\r\n            xShift += 200;\r\n            yShift = 13 * 40;\r\n          }\r\n\r\n          focus\r\n            .append(\"circle\")\r\n            .attr(\"id\", `circle-${stateHTML}`)\r\n            .attr(\"r\", 5)\r\n            .attr(\"fill\", selectedStates[state].color)\r\n\t\t\t.attr(\"stroke\", theme.palette.text.primary);\r\n\r\n          if (i < 26) {\r\n            focus\r\n              .append(\"text\")\r\n              .attr(\"id\", `d-label-${stateHTML}`)\r\n              .attr(\"x\", 10 + xShift)\r\n              .attr(\"y\", 10 + i * 40 - yShift)\r\n\t\t\t  .style(\"font-size\", 12)\r\n\t\t\t  .style(\"font-family\", \"ralewaylight, Helvetica, Arial, sans-serif\");\r\n\r\n            focus\r\n              .append(\"text\")\r\n              .attr(\"id\", `d-label-b-${stateHTML}`)\r\n              .attr(\"x\", 10 + xShift)\r\n              .attr(\"y\", 25 + i * 40 - yShift)\r\n\t\t\t  .style(\"font-size\", 12)\r\n\t\t\t  .style(\"font-family\", \"ralewaylight, Helvetica, Arial, sans-serif\");\r\n          }\r\n        });\r\n      setLinesStates(linesObject);\r\n\t}\r\n\t\r\n\treturn () => {\r\n\t\tfocus.selectAll('circle').remove();\r\n\t\tfocus.selectAll('text').remove();\r\n\t}\r\n  }, [dataStates, selectedStates, theme]);\r\n\r\n  return (\r\n    <>\r\n      <MouseMove focus={focus} overlay={overlay} linesStates={linesStates} />\r\n      {dataStates.length > 0 ? (\r\n        Object.keys(linesStates)\r\n          .sort()\r\n          .map((state, i) => {\r\n            const stateHTML = stateInfo[state].htmlFormat;\r\n\r\n            return (\r\n              <g key={i} id={`bounds-render-${stateHTML}`}>\r\n                <path\r\n                  fill=\"none\"\r\n\t\t\t\t  stroke={selectedStates[state].color}\r\n                  strokeWidth={2}\r\n                  strokeLinejoin=\"round\"\r\n                  strokeLinecap=\"round\"\r\n                  d={linesStates[state].line}\r\n                />\r\n                <circle\r\n                  id=\"line-marker-lockdown\"\r\n                  r={4}\r\n                  fill={\r\n                    linesStates[state].lockdownMarkerX\r\n                      ? selectedStates[state].color\r\n                      : \"none\"\r\n                  }\r\n                  cx={linesStates[state].lockdownMarkerX}\r\n                  cy={linesStates[state].lockdownMarkerY}\r\n                />\r\n                <text\r\n                  id={`line-label-${stateHTML}`}\r\n\t\t\t\t  className=\"line-label\"\r\n\t\t\t\t  style={{fill: theme.palette.text.primary, fontSize: \"14px\", fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                  x={linesStates[state].lineLabelX}\r\n                  y={linesStates[state].lineLabelY}\r\n                >\r\n                  {selectedStates[state].abbreviation}\r\n                </text>\r\n              </g>\r\n            );\r\n          })\r\n      ) : (\r\n        <g></g>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Line };\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n// Components\r\nimport { Line } from './Line';\r\n\r\n// Context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// constants\r\nimport { dimensions, bounded } from '../util/constants';\r\n\r\n// Styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst { width, height, margin } = dimensions;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttitle: {\r\n\t\tfill: theme.palette.text.primary,\r\n\t\tfontSize:'2.5vh'\r\n\t},\r\n\taxes: {\r\n\t\tfill: theme.palette.text.primary,\r\n\t},\r\n\taxisLabel: {\r\n\t\tfill: theme.palette.text.primary,\r\n\t\tfontSize: '2vh'\r\n\t},\r\n\tfootnotes: {\r\n\t\tfontSize: '10px'\r\n\t}\r\n}));\r\n\r\nconst ChartUSCompare = () => {\r\n\tconst {dataStates} = useContext(dataContext);\r\n\tconst {theme} = useContext(themeContext);\r\n    const yAxisRef = useRef(null);\r\n    const xAxisRef = useRef(null);\r\n    const svgRef = useRef(null);\r\n\tconst boundsRef = useRef(null);\r\n\tlet classes = useStyles();\r\n\r\n    const focus = d3.select(boundsRef.current).append('g')\r\n        .attr('class', 'focus')\r\n        .style('display', 'none');\r\n\r\n    const overlay = d3.select(boundsRef.current).append('rect')\r\n        .attr('class', 'overlay')\r\n        .attr('width', bounded.width)\r\n\t\t.attr('height', bounded.height)\r\n\t\t.attr('opacity', '0')\r\n        .on('mouseover', () => focus.style('display', null))\r\n\r\n    useEffect(() => {\r\n        // Scales\r\n        const xScale = d3.scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.dayOfOutbreak))\r\n            .range([0, bounded.width]);\r\n        const yScale = d3.scaleLinear()\r\n            .domain(d3.extent(dataStates, d => d.casesPerThousand))\r\n            .range([bounded.height, 0]);\r\n\r\n        // Axes\r\n        const yAxisGenerator = d3.axisLeft().scale(yScale);\r\n        const xAxisGenerator = d3.axisBottom().scale(xScale);\r\n        d3.select(xAxisRef.current).call(xAxisGenerator);\r\n        d3.select(yAxisRef.current).call(yAxisGenerator);\r\n\t}, [dataStates, theme]);\r\n\r\n    return (\r\n        <div height={height} width={width}>\r\n            <svg \r\n                id=\"chart\" \r\n                height={height} \r\n                width={width} \r\n                ref={svgRef}\r\n            >\r\n                <text\r\n\t\t\t\t\tclassName={classes.title}\r\n\t\t\t\t\tstyle={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n\t\t\t\t\ttextAnchor=\"middle\"\r\n                    transform={`translate (${margin.left + bounded.width / 2}, ${margin.top / 2})`}\r\n                >\r\n                    COVID-19 US State Comparison\r\n                </text>\r\n                <text \r\n\t\t\t\t\tclassName={classes.axisLabel}\r\n\t\t\t\t\tstyle={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${margin.left + bounded.width / 2}, ${bounded.height + margin.top + 40})`}\r\n                >\r\n                    Day of Outbreak\r\n                </text>\r\n                <text \r\n\t\t\t\t\tclassName={classes.axisLabel}\r\n\t\t\t\t\tstyle={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                    textAnchor=\"middle\"\r\n                    transform={`translate(${width - bounded.width - margin.right - 40}, ${bounded.height / 2}) rotate(-90)`}\r\n                >\r\n                    Cases per 1000 people\r\n                </text>\r\n                <text \r\n                    className={classes.footnotes}\r\n                    textAnchor=\"left\"\r\n                    style={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${bounded.height + margin.top + 60})`}\r\n                >\r\n                    *Data from The New York Times, based on reports from state and local health agencies.\r\n                </text>\r\n                <text \r\n                    className={classes.footnotes} \r\n                    textAnchor=\"left\"\r\n                    style={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${bounded.height + margin.top + 80})`}\r\n                >\r\n                    **Population data from US Census Bureau (2019).\r\n                </text>\r\n                <text \r\n                    className={classes.footnotes} \r\n                    textAnchor=\"left\"\r\n                    style={{fill: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}}\r\n                    transform={`translate(${margin.left}, ${bounded.height + margin.top + 100})`}\r\n                >\r\n                    ***2/27 is earliest possible 'Day 1,' since prior cases were isolated and may skew insights of \"community spread\"\r\n                </text>\r\n                <g id=\"bounds\" transform={`translate(${margin.left}, ${margin.top})`} ref={boundsRef}>\r\n\t\t\t\t\t<g \r\n\t\t\t\t\t\tref={yAxisRef} \r\n\t\t\t\t\t\tid=\"y-axis\"\r\n\t\t\t\t\t\tstyle={{color: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}} />\r\n\t\t\t\t\t<g \r\n\t\t\t\t\t\tref={xAxisRef} \r\n\t\t\t\t\t\tid=\"x-axis\" \r\n\t\t\t\t\t\ttransform={`translate(0,${bounded.height})`}\r\n\t\t\t\t\t\tstyle={{color: theme.palette.text.primary, fontFamily: \"ralewaylight, Helvetica, Arial, sans-serif\"}} />\r\n                    <Line focus={focus} overlay={overlay}/>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { ChartUSCompare };","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\n// context\r\nimport { statesContext } from \"../../context/statesContext\";\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst BatchSelect = () => {\r\n\tconst {selectedStates, setSelectedStates} = useContext(statesContext);\r\n\tconst {theme} = useContext(themeContext);\r\n\tconst [anchorEl, setAnchorEl] = useState(null);\r\n\tconst [selectedFilter, setSelectedFilter] = useState(null);\r\n\tconst [selectedDate, setDateChange] = useState(new Date());\r\n\tconst lockdownRef = useRef(null);\r\n\t\r\n  const handleClick = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setSelectedFilter(e.currentTarget.name);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedFilter(null);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setDateChange(e);\r\n  };\r\n\r\n  const filterCases = (e) => {\r\n    // top/bottom by total cases\r\n    // top/bottom by cases per 1000 people\r\n    const revisedStates = {};\r\n    const revisedOrder = Object.keys(selectedStates).sort(\r\n      (a, b) =>\r\n        selectedStates[b].latestCaseCount - selectedStates[a].latestCaseCount\r\n    );\r\n    const revisedOrderToPopulation = Object.keys(selectedStates).sort(\r\n      (a, b) =>\r\n        selectedStates[b].latestCaseCount / selectedStates[b].population -\r\n        selectedStates[a].latestCaseCount / selectedStates[a].population\r\n    );\r\n\r\n    if (e.target.id === \"cases-top-12\") {\r\n      revisedOrder.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-bottom-12\") {\r\n      revisedOrder.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-top-12-per-1000\") {\r\n      revisedOrderToPopulation.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"cases-bottom-12-per-1000\") {\r\n      revisedOrderToPopulation.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  const filterLockdown = (e) => {\r\n    // before/after x date\r\n    // no current lockdown\r\n    const revisedStates = {};\r\n\r\n    if (e.target.id === \"all-with-lockdown\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < new Date() ? true : false,\r\n        };\r\n      });\r\n    } else if (e.target.id === \"all-without-lockdown\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < new Date() ? false : true,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  const filterPopulation = (e) => {\r\n    // above/below x population\r\n    const revisedStates = {};\r\n    const revisedOrder = Object.keys(selectedStates).sort(\r\n      (a, b) => selectedStates[b].population - selectedStates[a].population\r\n    );\r\n\r\n    if (e.target.id === \"population-top-12\") {\r\n      revisedOrder.forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    } else {\r\n      revisedOrder.reverse().forEach((s, i) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: i < 12 ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  };\r\n\r\n  const filterRegion = (e) => {\r\n\tconst revisedStates = {};\r\n\tconst filteredByRegion = Object.keys(selectedStates).filter(s => selectedStates[s].region === e.target.id);\r\n\r\n\tObject.keys(selectedStates).forEach(s => {\r\n\t\tif (filteredByRegion.includes(s)) {\r\n\t\t\trevisedStates[s] = {\r\n\t\t\t\t...selectedStates[s],\r\n\t\t\t\tselected: true\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\trevisedStates[s] = {\r\n\t\t\t\t...selectedStates[s],\r\n\t\t\t\tselected: false\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tsetSelectedStates(revisedStates);\r\n\thandleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const revisedStates = {};\r\n\r\n    if (lockdownRef.current === \"lockdown-before\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown < selectedDate ? true : false,\r\n        };\r\n      });\r\n    } else if (lockdownRef.current === \"lockdown-after\") {\r\n      Object.keys(selectedStates).forEach((s) => {\r\n        revisedStates[s] = {\r\n          ...selectedStates[s],\r\n          selected: selectedStates[s].lockdown > selectedDate ? true : false,\r\n        };\r\n      });\r\n    }\r\n    setSelectedStates(revisedStates);\r\n    handleClose();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <span>\r\n      <Button id=\"filter-cases\" name=\"cases\" onClick={handleClick} >\r\n        Filter by Case Counts\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-cases-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"cases\")}\r\n\t\tonClose={handleClose}\r\n      >\r\n        <MenuItem id=\"cases-top-12\" onClick={filterCases}>Highest 12 (total)</MenuItem>\r\n        <MenuItem id=\"cases-bottom-12\" onClick={filterCases}>Lowest 12 (total)</MenuItem>\r\n        <MenuItem id=\"cases-top-12-per-1000\" onClick={filterCases}>Highest 12 (per 1000)</MenuItem>\r\n        <MenuItem id=\"cases-bottom-12-per-1000\" onClick={filterCases}>Lowest 12 (per 1000)</MenuItem>\r\n\t  </Menu>\r\n\t  \r\n      <Button id=\"filter-lockdown\" name=\"lockdown\" onClick={handleClick}>\r\n        Filter by Lockdown Date\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-lockdown-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"lockdown\")}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem id=\"all-with-lockdown\" onClick={filterLockdown}>All with lockdown</MenuItem>\r\n        <MenuItem id=\"all-without-lockdown\" onClick={filterLockdown}>All without lockdown</MenuItem>\r\n        <MenuItem\r\n          id=\"lockdown-before\"\r\n          ref={lockdownRef}\r\n          onClick={(e) => (lockdownRef.current = e.currentTarget.id)}\r\n        >\r\n          Lockdown before:\r\n          <DatePicker\r\n            variant=\"inline\"\r\n            disableToolbar\r\n            autoOk\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            disableFuture={true}\r\n            format=\"MM/dd/yyyy\"\r\n          />\r\n        </MenuItem>\r\n        <MenuItem\r\n          id=\"lockdown-after\"\r\n          ref={lockdownRef}\r\n          onClick={(e) => (lockdownRef.current = e.currentTarget.id)}\r\n        >\r\n          Lockdown after:\r\n          <DatePicker\r\n            variant=\"inline\"\r\n            disableToolbar\r\n            autoOk\r\n            value={selectedDate}\r\n            onChange={(date) => setDateChange(date)}\r\n            disableFuture={true}\r\n            format=\"MM/dd/yyyy\"\r\n          />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <Button id=\"filter-population\" name=\"population\" onClick={handleClick}>\r\n        Filter by Total Population\r\n      </Button>\r\n      <Menu\r\n\t\tid=\"filter-population-menu\"\r\n\t\tanchorEl={anchorEl}\r\n\t\tkeepMounted\r\n\t\topen={Boolean(selectedFilter === \"population\")}\r\n\t\tonClose={handleClose}\r\n      >\r\n        <MenuItem id=\"population-top-12\" onClick={filterPopulation}>Highest 12</MenuItem>\r\n        <MenuItem id=\"population-bottom-12\" onClick={filterPopulation}>Lowest 12</MenuItem>\r\n      </Menu>\r\n\r\n      <Button id=\"filter-region\" name=\"region\" onClick={handleClick}>\r\n        Filter by Region\r\n      </Button>\r\n      <Menu\r\n        id=\"filter-region-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(selectedFilter === \"region\")}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem id=\"northeast\" onClick={filterRegion}>Northeast</MenuItem>\r\n\t\t<MenuItem id=\"midwest\" onClick={filterRegion}>Midwest</MenuItem>\r\n\t\t<MenuItem id=\"south\" onClick={filterRegion}>South</MenuItem>\r\n\t\t<MenuItem id=\"west\" onClick={filterRegion}>West</MenuItem>\r\n      </Menu>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport { BatchSelect };\r\n","export const colors = [\r\n    \"AliceBlue\",\r\n    \"AntiqueWhite\",\r\n    \"Aquamarine\",\r\n    \"Azure\",\r\n    \"Beige\",\r\n    \"BlueViolet\",\r\n    \"Brown\",\r\n    \"BurlyWood\",\r\n    \"CadetBlue\",\r\n    \"Chartreuse\",\r\n    \"Chocolate\",\r\n    \"Aqua\",\r\n    \"Coral\",\r\n    \"Cornsilk\",\r\n    \"Crimson\",\r\n    \"Cyan\",\r\n    \"DeepPink\",\r\n    \"DeepSkyBlue\",\r\n    \"DodgerBlue\",\r\n    \"FireBrick\",\r\n    \"FloralWhite\",\r\n    \"ForestGreen\",\r\n    \"Fuchsia\",\r\n    \"Gainsboro\",\r\n    \"GhostWhite\",\r\n    \"Gold\",\r\n    \"GoldenRod\",\r\n    \"Green\",\r\n    \"GreenYellow\",\r\n    \"HoneyDew\",\r\n    \"HotPink\",\r\n    \"IndianRed\",\r\n    \"Ivory\",\r\n    \"Lavender\",\r\n    \"LavenderBlush\",\r\n    \"LawnGreen\",\r\n    \"LemonChiffon\",\r\n    \"LightBlue\",\r\n    \"LightCoral\",\r\n    \"LightCyan\",\r\n    \"LightGoldenRodYellow\",\r\n    \"LightGray\",\r\n    \"LightGrey\",\r\n    \"LightGreen\",\r\n    \"LightPink\",\r\n    \"LightSalmon\",\r\n    \"LightSeaGreen\",\r\n    \"LightSkyBlue\",\r\n    \"LightSlateGray\",\r\n    \"LightSlateGrey\",\r\n    \"LightSteelBlue\",\r\n    \"LightYellow\",\r\n    \"Lime\",\r\n    \"LimeGreen\",\r\n    \"Linen\",\r\n    \"Magenta\",\r\n    \"Maroon\",\r\n    \"MediumAquaMarine\",\r\n    \"MediumBlue\",\r\n    \"MediumOrchid\",\r\n    \"MediumPurple\",\r\n    \"MediumSeaGreen\",\r\n    \"MediumSlateBlue\",\r\n    \"MediumSpringGreen\",\r\n    \"MediumTurquoise\",\r\n    \"MediumVioletRed\",\r\n    \"MidnightBlue\",\r\n    \"MintCream\",\r\n    \"MistyRose\",\r\n    \"Moccasin\",\r\n    \"NavajoWhite\",\r\n    \"Navy\",\r\n    \"OldLace\",\r\n    \"Olive\",\r\n    \"OliveDrab\",\r\n    \"Orange\",\r\n    \"OrangeRed\",\r\n    \"Orchid\",\r\n    \"PaleGoldenRod\",\r\n    \"PaleGreen\",\r\n    \"PaleTurquoise\",\r\n    \"PaleVioletRed\",\r\n    \"PapayaWhip\",\r\n    \"PeachPuff\",\r\n    \"Peru\",\r\n    \"Pink\",\r\n    \"Plum\",\r\n    \"PowderBlue\",\r\n    \"Purple\",\r\n    \"RebeccaPurple\",\r\n    \"Red\",\r\n    \"RosyBrown\",\r\n    \"RoyalBlue\",\r\n    \"SaddleBrown\",\r\n    \"Salmon\",\r\n    \"SandyBrown\",\r\n    \"SeaGreen\",\r\n    \"SeaShell\",\r\n    \"Sienna\",\r\n    \"Silver\",\r\n    \"SkyBlue\",\r\n    \"SlateBlue\",\r\n    \"SlateGray\",\r\n    \"SlateGrey\",\r\n    \"Snow\",\r\n    \"SpringGreen\",\r\n    \"SteelBlue\",\r\n    \"Tan\",\r\n    \"Teal\",\r\n    \"Thistle\",\r\n    \"Tomato\",\r\n    \"Turquoise\",\r\n    \"Violet\",\r\n    \"Wheat\",\r\n    \"White\",\r\n    \"WhiteSmoke\",\r\n    \"Yellow\",\r\n    \"YellowGreen\",\r\n  ];","import React, { useContext, useEffect } from 'react';\r\nimport { timeParse, nest } from 'd3';\r\nimport { IconButton, FormControlLabel, FormGroup, Checkbox, Typography, Divider } from '@material-ui/core';\r\n\r\n// context\r\nimport { dataContext } from '../../context/dataContext';\r\nimport { statesContext } from '../../context/statesContext';\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// data\r\nimport stateInfo from '../../data/stateInfo.json';\r\n\r\n// styles\r\nimport { colors } from '../../styles/colors';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst Dashboard = () => {\r\n    const {dataStates} = useContext(dataContext);\r\n    const {selectedStates, setSelectedStates} = useContext(statesContext);\r\n\tconst {theme} = useContext(themeContext);\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedStates({\r\n            ...selectedStates,\r\n            [e.target.name]: {\r\n                ...selectedStates[e.target.name],\r\n                selected: e.target.checked\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSelectAll = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: true\r\n            }\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    const handleDeselectAll = (e) => {\r\n        const revisedStates = {}\r\n        Object.keys(selectedStates).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...selectedStates[s],\r\n                selected: false\r\n            }\r\n         });\r\n        setSelectedStates(revisedStates);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // clean stateInfo data and assign selectedStates\r\n        const dateParser = timeParse('%m-%d-%y');\r\n        const revisedStates = {};\r\n\r\n        Object.keys(stateInfo).forEach((s,i) => {\r\n            revisedStates[s] = {\r\n                ...stateInfo[s],\r\n                lockdown: stateInfo[s].lockdown.startsWith(\"none\") ? stateInfo[s].lockdown : dateParser(stateInfo[s].lockdown),\r\n                color: colors[i],\r\n            }\r\n        });\r\n\r\n        const nested = nest()\r\n            .key(d => d.state)\r\n            .entries(dataStates);\r\n\r\n        Object.keys(nested).forEach(i => {\r\n            const s = nested[i].key;\r\n\r\n            const lastIndex = nested[i].values.length - 1;\r\n            const latestCaseCount = nested[i].values[lastIndex].cases;\r\n            revisedStates[s] = {\r\n                ...revisedStates[s],\r\n                latestCaseCount: latestCaseCount\r\n            };\r\n        });\r\n        setSelectedStates(revisedStates);\r\n    }, [dataStates]);\r\n\r\n    return (\r\n        <div>\r\n            <FormGroup style={{alignItems: 'left', backgroundColor: theme.palette.primary.main, color: theme.palette.text.primary}}>\r\n                <FormControlLabel\r\n                id=\"select-all\"\r\n                label=\"Select All\"\r\n                name=\"Select All\"\r\n                onClick={handleSelectAll} \r\n                control={\r\n                    <IconButton \r\n                        id='selector-all' \r\n                        name=\"select-all\"\r\n                        style={{color: 'green'}}\r\n                    >\r\n                        <CheckIcon />\r\n                    </IconButton>\r\n                }\r\n                />\r\n                <FormControlLabel\r\n                    id=\"deselect-all\"\r\n                    label=\"Deselect All\"\r\n                    name=\"Deselect All\"\r\n                    onClick={handleDeselectAll}  \r\n                    control={\r\n                        <IconButton \r\n                            id='deselector-all' \r\n                            name=\"deselect-all\"\r\n                            style={{color: 'red'}}\r\n                        >\r\n                            <ClearIcon />\r\n                        </IconButton>\r\n                    }\r\n                /><br />\r\n                <Typography variant=\"h6\" style={{color: theme.palette.primary.contrastText}}>Selected</Typography>\r\n                <Divider style={{backgroundColor: theme.palette.primary.contrastText}} />\r\n                {selectedStates\r\n                    ? Object.keys(selectedStates).sort()\r\n                        .filter(s => selectedStates[s].selected === true)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i} \r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleChange}\r\n                                    control={<Checkbox name={state} style={{color: selectedStates[state].color}}/>}\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`} \r\n                                />\r\n                            )\r\n                        })\r\n                    : <div />\r\n                }<br />\r\n                <Typography variant=\"h6\" style={{color: theme.palette.primary.contrastText}} >Not Selected</Typography>\r\n                <Divider style={{backgroundColor: theme.palette.primary.contrastText}} />\r\n                {selectedStates\r\n                    ? Object.keys(selectedStates).sort()\r\n                        .filter(s => selectedStates[s].selected === false)\r\n                        .map((state, i) => {\r\n                            return (\r\n                                <FormControlLabel\r\n                                    key={i} \r\n                                    id={selectedStates[state].htmlFormat}\r\n                                    name={state}\r\n                                    checked={selectedStates[state].selected}\r\n                                    onChange={handleChange}\r\n                                    control={<Checkbox name={state} style={{color: selectedStates[state].color}}/>}\r\n                                    label={`${state} (${selectedStates[state].abbreviation})`} \r\n                                />\r\n                            )\r\n                        })\r\n                    : <div />\r\n                }\r\n            </FormGroup>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Dashboard };","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  ClickAwayListener,\r\n  Drawer,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\n\r\n// components\r\nimport { BatchSelect } from \"./BatchSelect\";\r\nimport { Dashboard } from \"./Dashboard\";\r\n\r\n// context\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// styles\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\tdisplay: \"flex\",\r\n\tbackgroundColor: theme.palette.primary.main,\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.primary,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 1,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    backgroundColor: theme.palette.background.default,\r\n  }\r\n}));\r\n\r\nconst FilterBar = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const {theme, setTheme} = useContext(themeContext);\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickAway = (e) => {\r\n    if (e.x > drawerWidth && e.y > 70 && open) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"relative\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n\t\t})}\r\n\t\tstyle={{backgroundColor: theme.palette.primary.main, color: theme.palette.primary.contrastText}}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\r\n\t\t\tstyle={{color: theme.palette.text.primary}}\r\n          >\r\n            <MenuOutlinedIcon style={{color: theme.palette.primary.contrastText}} />\r\n          </IconButton>\r\n          <BatchSelect />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <ClickAwayListener onClickAway={handleClickAway}>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n\t\t  }}\r\n\t\t  style={{color: theme.palette.text.primary}}\r\n        >\r\n          <div className={classes.drawerHeader} style={{backgroundColor: theme.palette.primary.main}}>\r\n            <IconButton color=\"inherit\" edge=\"end\" onClick={handleDrawerClose} style={{color: theme.palette.primary.contrastText}}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <Dashboard />\r\n        </Drawer>\r\n      </ClickAwayListener>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FilterBar };\r\n","import React, { useState, useContext } from 'react';\r\nimport { saveSvgAsPng } from 'save-svg-as-png';\r\n\r\n// context\r\nimport { themeContext } from '../../context/themeContext';\r\n\r\n// constants\r\nimport { dimensions } from '../util/constants';\r\n\r\n// styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../../styles/styles.css';\r\nimport { IconButton, Tooltip, Container } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\n\r\nconst { margin } = dimensions;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: '#f2ffcc',\r\n        textAlign: 'left',\r\n        padding: 0,\r\n        fontSize: 10,\r\n        marginLeft: margin.left,\r\n        marginRight: margin.right\r\n    },\r\n    saveButton: {\r\n        float: 'left',\r\n        marginLeft: margin.left,\r\n        padding: 0\r\n    },\r\n    themeButton: {\r\n        color: theme.palette.text.secondary,\r\n        float: 'left',\r\n        marginLeft: 20,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nconst Footnotes = ({changeTheme}) => {\r\n    const classes = useStyles();\r\n\tconst {theme, selectTheme} = useContext(themeContext);\r\n\r\n    const saveImage = () => {\r\n        saveSvgAsPng(document.querySelector(\"#chart\"), \"covid-19_chart.png\", {\r\n\t\t\tbackgroundColor: theme.palette.background.default,\r\n\t\t\tencoderOptions: 1,\r\n\t\t\tfonts: [\r\n\t\t\t\t{\r\n\t\t\t\t\turl: \"../../styles/ralewaylight/raleway-light-webfont.woff\",\r\n\t\t\t\t\tformat: \"application/font-woff\",\r\n\t\t\t\t\ttext: \"@font-face {font-family: 'ralewaylight'; src: url('./ralewaylight/raleway-light-webfont.woff2') format('woff2'), url('./ralewaylight/raleway-light-webfont.woff') format('woff'); font-weight: normal;font-style: normal;}\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n        });\r\n\t};\r\n\r\n    return (\r\n\t\t<>\r\n        <div style={{backgroundColor: theme.palette.background.default}}>\r\n            <p className={classes.root} style={{color: theme.palette.text.primary}}>Line marking indicates day of lockdown order/advisory</p>\r\n\t\t\t<p className={classes.root} style={{color: theme.palette.text.primary}}>Freeze/unfreeze focus by clicking on chart</p>\r\n\t\t</div>\r\n\t\t<div style={{backgroundColor: theme.palette.background.default}}>\r\n\t\t\t<Tooltip title=\"Save chart as image\" placement=\"right\">\r\n\t\t\t\t<IconButton onClick={saveImage} className={classes.saveButton} style={{color: theme.palette.text.primary}}>\r\n\t\t\t\t\t<SaveIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t<Tooltip title=\"Toggle dark/light theme\" placement=\"right\">\r\n\t\t\t\t<IconButton onClick={changeTheme} className={classes.themeButton} style={{color: theme.palette.text.primary}}>\r\n\t\t\t\t\t<Brightness7Icon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t</div>\r\n\t\t</>\r\n    )\r\n};\r\n\r\nexport { Footnotes };","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst themeDark = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#000018\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    background: {\r\n      default: \"#29293d\",\r\n    },\r\n    text: {\r\n      primary: \"#fff\",\r\n      secondary: \"#fff\",\r\n    },\r\n    contrastThreshold: 3,\r\n  },\r\n  typography: {\r\n    fontFamily: [\"ralewaylight\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  overrides: {\r\n    MuiFormControlLabel: {\r\n      root: {\r\n        color: \"#fff\",\r\n        textColor: \"#fff\",\r\n      },\r\n      label: {\r\n        color: \"#fff\",\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        color: \"#fff\",\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      root: {\r\n        color: \"#fff\",\r\n      },\r\n      paper: {\r\n        backgroundColor: \"#29293d\",\r\n        textColor: \"#fff\",\r\n      },\r\n    },\r\n    MuiMenuItem: {\r\n      root: {\r\n        backgroundColor: \"#29293d\",\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      raisedPrimary: {\r\n        color: \"#fff\",\r\n      },\r\n      root: {\r\n        color: \"#fff\",\r\n      },\r\n      label: {\r\n        color: \"#fff\",\r\n      },\r\n      text: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiBase: {\r\n      root: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiInputBase: {\r\n      root: {\r\n        color: \"#fff\",\r\n        maxWidth: 100,\r\n        paddingLeft: 10,\r\n      },\r\n    },\r\n    MuiPickersCalendarHeader: {\r\n      switchHeader: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      day: {\r\n        color: \"#29293d\",\r\n      },\r\n      daySelected: {\r\n        backgroundColor: \"#29293d\",\r\n      },\r\n      dayDisabled: {\r\n        color: \"#29293d\",\r\n      },\r\n      current: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst themeLight = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1c847f\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n    text: {\r\n      primary: \"#29293d\",\r\n      secondary: \"#000018\",\r\n    },\r\n    contrastThreshold: 3,\r\n  },\r\n  typography: {\r\n    fontFamily: [\"ralewaylight\", \"Helvetica\", \"Arial\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  overrides: {\r\n    MuiFormControlLabel: {\r\n      label: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      root: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n    MuiMenu: {\r\n      paper: {\r\n        backgroundColor: \"#fff\",\r\n        textColor: \"#29293d\",\r\n      },\r\n    },\r\n    MuiMenuItem: {\r\n      root: {\r\n        backgroundColor: \"#fff\",\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        color: \"#fff\",\r\n      },\r\n      label: {\r\n        color: \"#fff\",\r\n      },\r\n      text: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiPickersCalendarHeader: {\r\n      switchHeader: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n    MuiPickersDay: {\r\n      day: {\r\n        color: \"#29293d\",\r\n      },\r\n      daySelected: {\r\n        backgroundColor: \"#29293d\",\r\n      },\r\n      dayDisabled: {\r\n        color: \"#29293d\",\r\n      },\r\n      current: {\r\n        color: \"#29293d\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport { themeDark, themeLight };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n// data\r\nimport USStates from \"./data/us-states.csv\";\r\nimport stateInfo from \"./data/stateInfo.json\";\r\n\r\n// components\r\nimport { ChartUSCompare } from \"./components/chart/ChartUSCompare\";\r\nimport { FilterBar } from \"./components/dataParams/FilterBar\";\r\nimport { Footnotes } from \"./components/chart/Footnotes\";\r\n\r\n// context\r\nimport { dataContext } from \"./context/dataContext\";\r\nimport { statesContext } from \"./context/statesContext\";\r\nimport { themeContext } from './context/themeContext';\r\n\r\n// styles\r\n// import './styles/styles.css';\r\nimport { themeDark, themeLight } from './styles/theme';\r\n\r\nfunction App() {\r\n\tconst [dataStates, setDataStates] = useState([]);\r\n\tconst [selectedStates, setSelectedStates] = useState([]);\r\n\tconst [theme, setTheme] = useState(themeDark);\r\n\tconst [darkTheme, setDarkTheme] = useState(true);\r\n\r\n\tconst changeTheme = () => {\r\n\t\tsetDarkTheme(!darkTheme);\r\n\t\tif (!darkTheme) {\r\n\t\t\tsetTheme(themeDark);\r\n\t\t\tconsole.log('setting to dark')\r\n\t\t} else {\r\n\t\t\tsetTheme(themeLight);\r\n\t\t\tconsole.log('setting to light')\r\n\t\t}\t\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n    // get COVID-19 state data\r\n    d3.csv(USStates).then((data) => {\r\n      // clean data\r\n      const dateParser = d3.timeParse(\"%Y-%m-%d\");\r\n\r\n      data.forEach((d) => {\r\n        d.date = dateParser(d.date);\r\n        d.fips = parseInt(d.fips);\r\n        d.cases = parseInt(d.cases);\r\n        d.deaths = parseInt(d.deaths);\r\n      });\r\n\r\n      // Filter data:\r\n      // Prior to 02-27-20, Washington had 1 or 2 cases from January.\r\n      // However, these were isolated cases and this graph is trying to track Covid-19 spread\r\n      // Also filter out territories Guam, Puerto Rico, etc.\r\n      data = data.filter(\r\n        (d) =>\r\n          d.date > new Date(2020, 1, 26) &&\r\n          Object.keys(stateInfo).includes(d.state)\r\n      );\r\n\r\n      // Normalize data:\r\n      // Add \"dayOfOutbreak\" to show elapsed time\r\n      // Add state population\r\n      // Add \"casesPerThousand\" and \"deathsPerThousand\"\r\n      Object.keys(stateInfo).forEach((state) => {\r\n        const stateData = data.filter((d) => d.state === state);\r\n        stateData.forEach((d) => {\r\n          d.dayOfOutbreak =\r\n            (d.date - stateData[0].date) / (24 * 60 * 60 * 10 * 10 * 10) + 1; // day - day one, convert ms to days\r\n          d.casesPerThousand = (d.cases / stateInfo[state].population) * 1000;\r\n          d.deathsPerThousand = (d.deaths / stateInfo[state].population) * 1000;\r\n        });\r\n      });\r\n      setDataStates(data);\r\n      console.log(\"imported dataset\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{backgroundColor: theme.palette.background.default, paddingBottom: 40}}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <dataContext.Provider value={{ dataStates, setDataStates }}>\r\n          <statesContext.Provider value={{ selectedStates, setSelectedStates }}>\r\n\t\t\t<themeContext.Provider value={{ theme, setTheme }}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<FilterBar className=\"header\" />\r\n\t\t\t\t<ChartUSCompare className=\"chart\" />\r\n\t\t\t\t<Footnotes changeTheme={changeTheme} />\r\n\t\t\t\t</ThemeProvider>\r\n            </themeContext.Provider>\r\n          </statesContext.Provider>\r\n        </dataContext.Provider>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/us-states.4a4c2778.csv\";"],"sourceRoot":""}